(set-info :smt-lib-version 2.6)
(set-logic NIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V7 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V7 () Bool)
(declare-fun R_S1_V6 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V6 () Bool)
(assert
 (let
 (($x1101
   (forall
    ((V6_0 Int) (V7_0 Int) 
     (V4_0 Int) (V2_0 Int) 
     (V1_0 Int) (MW_S1_V6 Bool) 
     (MW_S1_V7 Bool) (MW_S1_V4 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V1 Bool) (S1_V4_!74 Int) 
     (S1_V4_!80 Int) (S1_V4_!86 Int) 
     (S1_V4_!92 Int) (S1_V7_!73 Int) 
     (S1_V7_!79 Int) (S1_V7_!85 Int) 
     (S1_V7_!91 Int) (S1_V6_!72 Int) 
     (S1_V6_!78 Int) (S1_V6_!84 Int) 
     (S1_V6_!90 Int) (S1_V1_!77 Int) 
     (S1_V1_!83 Int) (S1_V1_!89 Int) 
     (S1_V1_!95 Int) (S1_V3_!76 Int) 
     (S1_V3_!82 Int) (S1_V3_!88 Int) 
     (S1_V3_!94 Int) (S1_V2_!75 Int) 
     (S1_V2_!81 Int) (S1_V2_!87 Int) 
     (S1_V2_!93 Int))
    (let
    (($x1281
      (= (ite MW_S1_V1 S1_V1_!83 (+ 1 (ite MW_S1_V1 S1_V1_!77 V1_0)))
      (ite MW_S1_V1 S1_V1_!95 (+ 1 (ite MW_S1_V1 S1_V1_!89 V1_0))))))
    (let ((?x1126 (ite MW_S1_V4 S1_V4_!74 V4_0)))
    (let ((?x1132 (ite MW_S1_V1 S1_V1_!77 V1_0)))
    (let ((?x1133 (+ 1 ?x1132)))
    (let ((?x1134 (* ?x1133 ?x1126)))
    (let
    (($x1282
      (and (= (ite MW_S1_V6 S1_V6_!78 V6_0) (ite MW_S1_V6 S1_V6_!90 V6_0))
      (= (ite MW_S1_V7 S1_V7_!79 V7_0) (ite MW_S1_V7 S1_V7_!91 V7_0))
      (= (ite MW_S1_V4 S1_V4_!80 V4_0) (ite MW_S1_V4 S1_V4_!92 V4_0))
      (= (ite MW_S1_V2 S1_V2_!81 V2_0) (ite MW_S1_V2 S1_V2_!93 V2_0))
      (= (ite MW_S1_V3 S1_V3_!82 ?x1134)
      (ite MW_S1_V3 S1_V3_!94 (+ (* V1_0 V4_0) V4_0))) $x1281)))
    (let
    (($x1265
      (>= (ite MW_S1_V1 S1_V1_!95 (+ 1 (ite MW_S1_V1 S1_V1_!89 V1_0)))
      (+ (- 1) (ite MW_S1_V2 S1_V2_!93 V2_0)))))
    (let
    (($x1266
      (and (not (<= V2_0 V1_0))
      (not (<= (ite MW_S1_V2 S1_V2_!75 V2_0) ?x1133))
      (>= (ite MW_S1_V1 S1_V1_!83 ?x1133)
      (+ (- 1) (ite MW_S1_V2 S1_V2_!81 V2_0)))
      (not
      (<= (ite MW_S1_V2 S1_V2_!87 V2_0) (+ 1 (ite MW_S1_V1 S1_V1_!89 V1_0))))
      $x1265)))
    (let
    (($x1162
      (and (or (not R_S1_V6) (= (ite MW_S1_V6 S1_V6_!84 V6_0) V6_0))
      (or (not R_S1_V7) (= (ite MW_S1_V7 S1_V7_!85 V7_0) V7_0))
      (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!86 V4_0) V4_0))
      (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!87 V2_0) V2_0))
      (or (not R_S1_V3) (= V4_0 0))
      (or (not R_S1_V1) (= (ite MW_S1_V1 S1_V1_!89 V1_0) (+ (- 1) V1_0))))))
    (let (($x1163 (not $x1162)))
    (let
    (($x1210
      (and (or (not R_S1_V6) (= V6_0 (ite MW_S1_V6 S1_V6_!84 V6_0)))
      (or (not R_S1_V7) (= V7_0 (ite MW_S1_V7 S1_V7_!85 V7_0)))
      (or (not R_S1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!86 V4_0)))
      (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!87 V2_0)))
      (or (not R_S1_V3) (= 0 V4_0))
      (or (not R_S1_V1) (= V1_0 (+ 1 (ite MW_S1_V1 S1_V1_!89 V1_0)))))))
    (let (($x1211 (not $x1210)))
    (let
    (($x1234
      (and
      (or (not R_S1_V6)
      (= (ite MW_S1_V6 S1_V6_!72 V6_0) (ite MW_S1_V6 S1_V6_!84 V6_0)))
      (or (not R_S1_V7)
      (= (ite MW_S1_V7 S1_V7_!73 V7_0) (ite MW_S1_V7 S1_V7_!85 V7_0)))
      (or (not R_S1_V4) (= ?x1126 (ite MW_S1_V4 S1_V4_!86 V4_0)))
      (or (not R_S1_V2)
      (= (ite MW_S1_V2 S1_V2_!75 V2_0) (ite MW_S1_V2 S1_V2_!87 V2_0)))
      (or (not R_S1_V3) (= ?x1134 (+ (* V1_0 V4_0) V4_0)))
      (or (not R_S1_V1) (= ?x1132 (ite MW_S1_V1 S1_V1_!89 V1_0))))))
    (let (($x1235 (not $x1234)))
    (let
    (($x1141
      (and (or (not R_S1_V6) (= (ite MW_S1_V6 S1_V6_!72 V6_0) V6_0))
      (or (not R_S1_V7) (= (ite MW_S1_V7 S1_V7_!73 V7_0) V7_0))
      (or (not R_S1_V4) (= ?x1126 V4_0))
      (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!75 V2_0) V2_0))
      (or (not R_S1_V3) (= ?x1134 (* V1_0 V4_0)))
      (or (not R_S1_V1) (= ?x1132 (+ (- 1) V1_0))))))
    (let (($x1142 (not $x1141)))
    (let
    (($x1194
      (and (or (not R_S1_V6) (= V6_0 (ite MW_S1_V6 S1_V6_!72 V6_0)))
      (or (not R_S1_V7) (= V7_0 (ite MW_S1_V7 S1_V7_!73 V7_0)))
      (or (not R_S1_V4) (= V4_0 ?x1126))
      (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!75 V2_0)))
      (or (not R_S1_V3) (= (* V1_0 V4_0) ?x1134))
      (or (not R_S1_V1) (= V1_0 ?x1133)))))
    (let (($x1195 (not $x1194)))
    (let
    (($x1178
      (and
      (or (not R_S1_V6)
      (= (ite MW_S1_V6 S1_V6_!84 V6_0) (ite MW_S1_V6 S1_V6_!72 V6_0)))
      (or (not R_S1_V7)
      (= (ite MW_S1_V7 S1_V7_!85 V7_0) (ite MW_S1_V7 S1_V7_!73 V7_0)))
      (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!86 V4_0) ?x1126))
      (or (not R_S1_V2)
      (= (ite MW_S1_V2 S1_V2_!87 V2_0) (ite MW_S1_V2 S1_V2_!75 V2_0)))
      (or (not R_S1_V3) (= (+ (* V1_0 V4_0) V4_0) ?x1134))
      (or (not R_S1_V1) (= (ite MW_S1_V1 S1_V1_!89 V1_0) ?x1132)))))
    (let (($x1179 (not $x1178)))
    (let
    (($x1098
      (and (or $x1142 (= S1_V4_!80 S1_V4_!74))
      (or $x1142 (= S1_V4_!80 S1_V4_!86)) 
      (= S1_V4_!86 S1_V4_!74) 
      (or $x1163 (= S1_V4_!92 S1_V4_!74)) 
      (or $x1179 (= S1_V4_!92 S1_V4_!80)) 
      (or $x1163 (= S1_V4_!92 S1_V4_!86)) 
      (or $x1195 (= S1_V7_!73 S1_V7_!79)) 
      (or $x1211 (= S1_V7_!73 S1_V7_!91)) 
      (= S1_V7_!85 S1_V7_!73) 
      (or $x1195 (= S1_V7_!85 S1_V7_!79)) 
      (or $x1211 (= S1_V7_!85 S1_V7_!91)) 
      (or $x1179 (= S1_V7_!91 S1_V7_!79)) 
      (or $x1195 (= S1_V6_!72 S1_V6_!78)) 
      (= S1_V6_!84 S1_V6_!72) 
      (or $x1195 (= S1_V6_!84 S1_V6_!78)) 
      (or $x1211 (= S1_V6_!84 S1_V6_!90)) 
      (or $x1163 (= S1_V6_!90 S1_V6_!72)) 
      (or $x1179 (= S1_V6_!90 S1_V6_!78)) 
      (or $x1142 (= S1_V1_!83 S1_V1_!77)) 
      (or $x1235 (= S1_V1_!83 S1_V1_!95)) 
      (= S1_V1_!89 S1_V1_!77) 
      (or $x1195 (= S1_V1_!89 S1_V1_!83)) 
      (or $x1211 (= S1_V1_!89 S1_V1_!95)) 
      (or $x1163 (= S1_V1_!95 S1_V1_!77)) 
      (or $x1142 (= S1_V3_!82 S1_V3_!76)) 
      (or $x1235 (= S1_V3_!82 S1_V3_!94)) 
      (= S1_V3_!88 S1_V3_!76) 
      (or $x1195 (= S1_V3_!88 S1_V3_!82)) 
      (or $x1211 (= S1_V3_!88 S1_V3_!94)) 
      (or $x1163 (= S1_V3_!94 S1_V3_!76)) 
      (or $x1142 (= S1_V2_!81 S1_V2_!75)) 
      (or $x1142 (= S1_V2_!81 S1_V2_!87)) 
      (or $x1235 (= S1_V2_!81 S1_V2_!93)) 
      (= S1_V2_!87 S1_V2_!75) 
      (or $x1211 (= S1_V2_!87 S1_V2_!93)) 
      (or $x1163 (= S1_V2_!93 S1_V2_!75)) 
      (or (not MW_S1_V7) W_S1_V7) 
      (or (not MW_S1_V4) W_S1_V4) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V3) W_S1_V3) 
      (or (not MW_S1_V1) W_S1_V1)))) 
    (or (not $x1098) (not $x1266) $x1282)))))))))))))))))))))))))
 (let
 (($x31
   (or R_S1_V6 (and W_S1_V7 R_S1_V7) 
   (and W_S1_V4 R_S1_V4) (and W_S1_V2 R_S1_V2) 
   (and W_S1_V3 R_S1_V3) (and W_S1_V1 R_S1_V1))))
 (let (($x33 (= DISJ_W_S1_R_S1 (not $x31)))) (and W_S1_V6 $x33 $x1101)))))
(check-sat)
(exit)

