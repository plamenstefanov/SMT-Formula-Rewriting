(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl3arg11 () Int)
(declare-fun Nl3arg12 () Int)
(declare-fun Nl3arg13 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun Nl3CT1 () Int)
(declare-fun Nl3CT2 () Int)
(declare-fun Nl3CT3 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n3 () Int)
(declare-fun lam8n4 () Int)
(declare-fun lam8n5 () Int)
(declare-fun lam8n6 () Int)
(declare-fun lam8n7 () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam9n1 () Int)
(declare-fun lam9n2 () Int)
(declare-fun lam9n3 () Int)
(declare-fun lam9n4 () Int)
(declare-fun lam9n5 () Int)
(declare-fun lam9n6 () Int)
(declare-fun lam9n7 () Int)
(declare-fun lam10n0 () Int)
(declare-fun lam10n1 () Int)
(declare-fun lam10n2 () Int)
(declare-fun lam10n3 () Int)
(declare-fun lam10n4 () Int)
(declare-fun lam10n5 () Int)
(declare-fun lam10n6 () Int)
(declare-fun lam10n7 () Int)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam11n2 () Int)
(declare-fun lam11n3 () Int)
(declare-fun lam11n4 () Int)
(declare-fun lam11n5 () Int)
(declare-fun lam11n6 () Int)
(declare-fun lam11n7 () Int)
(declare-fun lam12n0 () Int)
(declare-fun lam12n1 () Int)
(declare-fun lam12n2 () Int)
(declare-fun lam12n3 () Int)
(declare-fun lam12n4 () Int)
(declare-fun lam12n5 () Int)
(declare-fun lam12n6 () Int)
(declare-fun lam12n7 () Int)
(declare-fun lam13n0 () Int)
(declare-fun lam13n1 () Int)
(declare-fun lam13n2 () Int)
(declare-fun lam13n3 () Int)
(declare-fun lam13n4 () Int)
(declare-fun lam13n5 () Int)
(declare-fun lam13n6 () Int)
(declare-fun lam13n7 () Int)
(declare-fun lam14n0 () Int)
(declare-fun lam15n0 () Int)
(declare-fun lam16n0 () Int)
(declare-fun undef28 () Int)
(declare-fun undef29 () Int)
(declare-fun undef3 () Int)
(declare-fun undef4 () Int)
(declare-fun undef6 () Int)
(declare-fun undef8 () Int)
(declare-fun undef5 () Int)
(declare-fun undef9 () Int)
(declare-fun undef12 () Int)
(declare-fun undef13 () Int)
(declare-fun undef14 () Int)
(declare-fun arg1 () Int)
(declare-fun FV_arg1_2 () Int)
(declare-fun lam17n0 () Int)
(declare-fun lam17n1 () Int)
(declare-fun lam17n2 () Int)
(declare-fun lam17n3 () Int)
(declare-fun FV_arg1_3 () Int)
(assert ( and ( <= ( - 1 ) Nl3arg11 ) ( <= Nl3arg11 1 ) ( <= ( - 1 ) Nl3arg12 ) ( <= Nl3arg12 1 ) ( <= ( - 1 ) Nl3arg13 ) ( <= Nl3arg13 1 ) ))
(assert ( or ( and ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl3CT1 lam0n1 ) ( * Nl3CT2 lam0n2 ) ( * Nl3CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl3arg11 lam0n1 ) ( * Nl3arg12 lam0n2 ) ( * Nl3arg13 lam0n3 ) ) 0 ) ) ( and ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( > ( + ( * Nl3CT1 lam1n1 ) ( * Nl3CT2 lam1n2 ) ( * Nl3CT3 lam1n3 ) ( - 1 ( + Nl3CT1 ( * Nl3arg11 0 ) ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * Nl3arg11 lam1n1 ) ( * Nl3arg12 lam1n2 ) ( * Nl3arg13 lam1n3 ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl3CT1 lam0n1 ) ( * Nl3CT2 lam0n2 ) ( * Nl3CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl3arg11 lam0n1 ) ( * Nl3arg12 lam0n2 ) ( * Nl3arg13 lam0n3 ) ) 0 ) ) ( and ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( > ( + ( * Nl3CT1 lam2n1 ) ( * Nl3CT2 lam2n2 ) ( * Nl3CT3 lam2n3 ) ( - 1 ( + Nl3CT2 ( * Nl3arg12 0 ) ) ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * Nl3arg11 lam2n1 ) ( * Nl3arg12 lam2n2 ) ( * Nl3arg13 lam2n3 ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl3CT1 lam0n1 ) ( * Nl3CT2 lam0n2 ) ( * Nl3CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl3arg11 lam0n1 ) ( * Nl3arg12 lam0n2 ) ( * Nl3arg13 lam0n3 ) ) 0 ) ) ( and ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( > ( + ( * Nl3CT1 lam3n1 ) ( * Nl3CT2 lam3n2 ) ( * Nl3CT3 lam3n3 ) ( - 1 ( + Nl3CT3 ( * Nl3arg13 0 ) ) ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl3arg11 lam3n1 ) ( * Nl3arg12 lam3n2 ) ( * Nl3arg13 lam3n3 ) ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl3CT1 lam4n1 ) ( * Nl3CT2 lam4n2 ) ( * Nl3CT3 lam4n3 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * Nl3arg11 lam4n1 ) ( * Nl3arg12 lam4n2 ) ( * Nl3arg13 lam4n3 ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( >= lam5n3 0 ) ( > ( + ( * 1 lam5n0 ) ( * Nl3CT1 lam5n1 ) ( * Nl3CT2 lam5n2 ) ( * Nl3CT3 lam5n3 ) ( - 1 ( + Nl3CT1 ( * Nl3arg11 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * Nl3arg11 lam5n1 ) ( * Nl3arg12 lam5n2 ) ( * Nl3arg13 lam5n3 ) ( - ( + 0 ( * Nl3arg11 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl3CT1 lam4n1 ) ( * Nl3CT2 lam4n2 ) ( * Nl3CT3 lam4n3 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * Nl3arg11 lam4n1 ) ( * Nl3arg12 lam4n2 ) ( * Nl3arg13 lam4n3 ) ) 0 ) ) ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( >= lam6n3 0 ) ( > ( + ( * 1 lam6n0 ) ( * Nl3CT1 lam6n1 ) ( * Nl3CT2 lam6n2 ) ( * Nl3CT3 lam6n3 ) ( - 1 ( + Nl3CT2 ( * Nl3arg12 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * Nl3arg11 lam6n1 ) ( * Nl3arg12 lam6n2 ) ( * Nl3arg13 lam6n3 ) ( - ( + 0 ( * Nl3arg12 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl3CT1 lam4n1 ) ( * Nl3CT2 lam4n2 ) ( * Nl3CT3 lam4n3 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * Nl3arg11 lam4n1 ) ( * Nl3arg12 lam4n2 ) ( * Nl3arg13 lam4n3 ) ) 0 ) ) ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n3 0 ) ( > ( + ( * 1 lam7n0 ) ( * Nl3CT1 lam7n1 ) ( * Nl3CT2 lam7n2 ) ( * Nl3CT3 lam7n3 ) ( - 1 ( + Nl3CT3 ( * Nl3arg13 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl3arg11 lam7n1 ) ( * Nl3arg12 lam7n2 ) ( * Nl3arg13 lam7n3 ) ( - ( + 0 ( * Nl3arg13 1 ) ) ) ) 0 ) ) ))
(assert ( and ( <= ( + Nl3CT1 ( * Nl3arg11 FV_arg1_2 ) ) 0 ) ( <= ( + Nl3CT2 ( * Nl3arg12 FV_arg1_2 ) ) 0 ) ( <= ( + Nl3CT3 ( * Nl3arg13 FV_arg1_2 ) ) 0 ) ))
(assert ( and ( >= lam17n0 0 ) ( >= lam17n1 0 ) ( >= lam17n2 0 ) ( >= lam17n3 0 ) ( > ( + ( * 1 lam17n0 ) ( * Nl3CT1 lam17n1 ) ( * Nl3CT2 lam17n2 ) ( * Nl3CT3 lam17n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam17n0 ) ( * Nl3arg11 lam17n1 ) ( * Nl3arg12 lam17n2 ) ( * Nl3arg13 lam17n3 ) ) 0 ) ))
(assert ( and ( and ( <= ( + Nl3CT1 ( * Nl3arg11 FV_arg1_3 ) ) 0 ) ( <= ( + Nl3CT2 ( * Nl3arg12 FV_arg1_3 ) ) 0 ) ( <= ( + Nl3CT3 ( * Nl3arg13 FV_arg1_3 ) ) 0 ) ) ( or ( = FV_arg1_3 0 ) ( <= ( + 1 ( * ( - 1 ) FV_arg1_3 ) ) 0 ) ) ))
(check-sat)
(exit)
