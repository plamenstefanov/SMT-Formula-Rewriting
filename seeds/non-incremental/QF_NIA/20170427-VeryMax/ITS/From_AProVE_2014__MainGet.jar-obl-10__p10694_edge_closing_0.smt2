(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl9arg11 () Int)
(declare-fun Nl9arg21 () Int)
(declare-fun Nl9arg31 () Int)
(declare-fun Nl9arg41 () Int)
(declare-fun Nl9arg51 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam0n5 () Int)
(declare-fun lam0n6 () Int)
(declare-fun lam0n7 () Int)
(declare-fun UndefCntr0_CT () Int)
(declare-fun Nl9CT1 () Int)
(declare-fun UndefCntr0_arg1 () Int)
(declare-fun UndefCntr0_arg2 () Int)
(declare-fun UndefCntr0_arg3 () Int)
(declare-fun UndefCntr0_arg4 () Int)
(declare-fun UndefCntr0_arg5 () Int)
(declare-fun UndefCntr0_undef121 () Int)
(declare-fun UndefCntr0_undef122 () Int)
(declare-fun UndefCntr0_undef123 () Int)
(declare-fun UndefCntr0_undef124 () Int)
(declare-fun UndefCntr0_undef125 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam1n7 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam2n7 () Int)
(declare-fun lam2n8 () Int)
(declare-fun lam2n9 () Int)
(declare-fun lam2n10 () Int)
(declare-fun lam2n11 () Int)
(declare-fun lam2n12 () Int)
(declare-fun lam2n13 () Int)
(declare-fun lam2n14 () Int)
(declare-fun lam2n15 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam3n6 () Int)
(declare-fun lam3n7 () Int)
(declare-fun lam3n8 () Int)
(declare-fun lam3n9 () Int)
(declare-fun lam3n10 () Int)
(declare-fun lam3n11 () Int)
(declare-fun lam3n12 () Int)
(declare-fun lam3n13 () Int)
(declare-fun lam3n14 () Int)
(declare-fun lam3n15 () Int)
(declare-fun lam3n16 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n4 () Int)
(declare-fun lam4n5 () Int)
(declare-fun lam4n6 () Int)
(declare-fun lam4n7 () Int)
(declare-fun lam4n8 () Int)
(declare-fun lam4n9 () Int)
(declare-fun lam4n10 () Int)
(declare-fun lam4n11 () Int)
(declare-fun lam4n12 () Int)
(declare-fun undef1 () Int)
(declare-fun undef14 () Int)
(declare-fun undef15 () Int)
(declare-fun undef105 () Int)
(declare-fun undef133 () Int)
(declare-fun undef2 () Int)
(declare-fun undef16 () Int)
(declare-fun undef20 () Int)
(declare-fun undef111 () Int)
(declare-fun undef106 () Int)
(declare-fun undef134 () Int)
(declare-fun undef107 () Int)
(declare-fun undef108 () Int)
(declare-fun undef109 () Int)
(declare-fun undef28 () Int)
(declare-fun undef29 () Int)
(declare-fun undef34 () Int)
(declare-fun undef35 () Int)
(declare-fun undef112 () Int)
(declare-fun undef118 () Int)
(declare-fun undef119 () Int)
(declare-fun undef113 () Int)
(declare-fun undef120 () Int)
(declare-fun undef114 () Int)
(declare-fun undef115 () Int)
(declare-fun undef116 () Int)
(declare-fun FV_arg1_1 () Int)
(declare-fun FV_arg2_1 () Int)
(declare-fun FV_arg3_1 () Int)
(declare-fun FV_arg4_1 () Int)
(declare-fun FV_arg5_1 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n4 () Int)
(declare-fun lam5n5 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n4 () Int)
(declare-fun lam6n5 () Int)
(declare-fun UndefDef0undef123_CT () Int)
(declare-fun UndefDef0undef123_arg1 () Int)
(declare-fun UndefDef0undef123_arg2 () Int)
(declare-fun UndefDef0undef123_arg3 () Int)
(declare-fun UndefDef0undef123_arg4 () Int)
(declare-fun UndefDef0undef123_arg5 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n4 () Int)
(declare-fun lam7n5 () Int)
(declare-fun FV_undef121_0 () Int)
(declare-fun FV_undef122_0 () Int)
(declare-fun FV_arg1_0 () Int)
(declare-fun FV_arg2_0 () Int)
(declare-fun FV_arg3_0 () Int)
(declare-fun FV_arg4_0 () Int)
(declare-fun FV_arg5_0 () Int)
(declare-fun FV_undef123_0 () Int)
(declare-fun FV_undef124_0 () Int)
(declare-fun FV_undef125_0 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n3 () Int)
(declare-fun FV_arg2_2 () Int)
(declare-fun FV_arg1_2 () Int)
(declare-fun FV_arg3_2 () Int)
(declare-fun FV_arg4_2 () Int)
(declare-fun FV_arg5_2 () Int)
(declare-fun FV_undef121_2 () Int)
(declare-fun FV_undef122_2 () Int)
(declare-fun FV_undef123_2 () Int)
(assert ( and ( <= ( - 1 ) Nl9arg11 ) ( <= Nl9arg11 1 ) ( <= ( - 1 ) Nl9arg21 ) ( <= Nl9arg21 1 ) ( <= ( - 1 ) Nl9arg31 ) ( <= Nl9arg31 1 ) ( <= ( - 1 ) Nl9arg41 ) ( <= Nl9arg41 1 ) ( <= ( - 1 ) Nl9arg51 ) ( <= Nl9arg51 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( >= lam0n6 0 ) ( >= lam0n7 0 ) ( > ( + ( * 1 lam0n0 ) ( * 1 lam0n1 ) ( * 1 lam0n2 ) ( * 2 lam0n3 ) ( * 3 lam0n4 ) ( * 12 lam0n5 ) ( * UndefCntr0_CT lam0n6 ) ( * Nl9CT1 lam0n7 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n3 ) ( * ( - 1 ) lam0n4 ) ( * 7 lam0n5 ) ( * UndefCntr0_arg1 lam0n6 ) ( * Nl9arg11 lam0n7 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * UndefCntr0_arg2 lam0n6 ) ( * Nl9arg21 lam0n7 ) ) 0 ) ( = ( + ( * 1 lam0n3 ) ( * ( - 1 ) lam0n5 ) ( * UndefCntr0_arg3 lam0n6 ) ( * Nl9arg31 lam0n7 ) ) 0 ) ( = ( + ( * UndefCntr0_arg4 lam0n6 ) ( * Nl9arg41 lam0n7 ) ) 0 ) ( = ( + ( * UndefCntr0_arg5 lam0n6 ) ( * Nl9arg51 lam0n7 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_undef121 lam0n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n2 ) ( * UndefCntr0_undef122 lam0n6 ) ) 0 ) ( = ( + ( * 2 lam0n5 ) ( * UndefCntr0_undef123 lam0n6 ) ) 0 ) ( = ( * UndefCntr0_undef124 lam0n6 ) 0 ) ( = ( * UndefCntr0_undef125 lam0n6 ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( >= lam1n5 0 ) ( >= lam1n6 0 ) ( >= lam1n7 0 ) ( > ( + ( * 1 lam1n0 ) ( * 1 lam1n1 ) ( * 1 lam1n2 ) ( * 2 lam1n3 ) ( * 3 lam1n4 ) ( * 12 lam1n5 ) ( * UndefCntr0_CT lam1n6 ) ( * Nl9CT1 lam1n7 ) ( - 1 ( + ( + ( + ( + ( + Nl9CT1 ( * Nl9arg11 0 ) ) ( * Nl9arg21 0 ) ) ( * Nl9arg31 0 ) ) ( * Nl9arg41 0 ) ) ( * Nl9arg51 0 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n3 ) ( * ( - 1 ) lam1n4 ) ( * 7 lam1n5 ) ( * UndefCntr0_arg1 lam1n6 ) ( * Nl9arg11 lam1n7 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * UndefCntr0_arg2 lam1n6 ) ( * Nl9arg21 lam1n7 ) ) 0 ) ( = ( + ( * 1 lam1n3 ) ( * ( - 1 ) lam1n5 ) ( * UndefCntr0_arg3 lam1n6 ) ( * Nl9arg31 lam1n7 ) ) 0 ) ( = ( + ( * UndefCntr0_arg4 lam1n6 ) ( * Nl9arg41 lam1n7 ) ) 0 ) ( = ( + ( * UndefCntr0_arg5 lam1n6 ) ( * Nl9arg51 lam1n7 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * UndefCntr0_undef121 lam1n6 ) ( - ( + 0 ( * Nl9arg11 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n2 ) ( * UndefCntr0_undef122 lam1n6 ) ( - ( + 0 ( * Nl9arg21 1 ) ) ) ) 0 ) ( = ( + ( * 2 lam1n5 ) ( * UndefCntr0_undef123 lam1n6 ) ( - ( + 0 ( * Nl9arg31 1 ) ) ) ) 0 ) ( = ( + ( * UndefCntr0_undef124 lam1n6 ) ( - ( + 0 ( * Nl9arg41 1 ) ) ) ) 0 ) ( = ( + ( * UndefCntr0_undef125 lam1n6 ) ( - ( + 0 ( * Nl9arg51 1 ) ) ) ) 0 ) ) ))
(assert ( and ( <= ( + Nl9CT1 ( * Nl9arg11 FV_arg1_1 ) ( * Nl9arg21 FV_arg2_1 ) ( * Nl9arg31 FV_arg3_1 ) ( * Nl9arg41 FV_arg4_1 ) ( * Nl9arg51 FV_arg5_1 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) FV_arg2_1 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) FV_arg1_1 ) FV_arg3_1 ) 0 ) ))
(assert ( or ( not ( = UndefCntr0_arg1 0 ) ) ( not ( = UndefCntr0_arg2 0 ) ) ( not ( = UndefCntr0_arg3 0 ) ) ( not ( = UndefCntr0_arg4 0 ) ) ( not ( = UndefCntr0_arg5 0 ) ) ( not ( = UndefCntr0_undef121 0 ) ) ( not ( = UndefCntr0_undef122 0 ) ) ( not ( = UndefCntr0_undef123 0 ) ) ( not ( = UndefCntr0_undef124 0 ) ) ( not ( = UndefCntr0_undef125 0 ) ) ( = UndefCntr0_CT 0 ) ))
(assert ( or ( and ( = UndefCntr0_arg1 0 ) ( = UndefCntr0_arg2 0 ) ( = UndefCntr0_arg3 0 ) ( = UndefCntr0_arg4 0 ) ( = UndefCntr0_arg5 0 ) ) ( or ( not ( = UndefCntr0_undef121 0 ) ) ( not ( = UndefCntr0_undef122 0 ) ) ( not ( = UndefCntr0_undef123 0 ) ) ( not ( = UndefCntr0_undef124 0 ) ) ( not ( = UndefCntr0_undef125 0 ) ) ) ))
(assert ( or ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( >= lam5n3 0 ) ( >= lam5n4 0 ) ( >= lam5n5 0 ) ( > ( + ( * 1 lam5n0 ) ( * 1 lam5n1 ) ( * 1 lam5n2 ) ( * 2 lam5n3 ) ( * 3 lam5n4 ) ( * Nl9CT1 lam5n5 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n3 ) ( * ( - 1 ) lam5n4 ) ( * Nl9arg11 lam5n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * Nl9arg21 lam5n5 ) ) 0 ) ( = ( + ( * 1 lam5n3 ) ( * Nl9arg31 lam5n5 ) ) 0 ) ( = ( * Nl9arg41 lam5n5 ) 0 ) ( = ( * Nl9arg51 lam5n5 ) 0 ) ( = ( * ( - 1 ) lam5n1 ) 0 ) ( = ( * ( - 1 ) lam5n2 ) 0 ) ) ( and ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( >= lam6n3 0 ) ( >= lam6n4 0 ) ( >= lam6n5 0 ) ( > ( + ( * 1 lam6n0 ) ( * 1 lam6n1 ) ( * 1 lam6n2 ) ( * 2 lam6n3 ) ( * 3 lam6n4 ) ( * Nl9CT1 lam6n5 ) ( - 1 ( + ( + ( + 12 0 ) 0 ) ( * 2 UndefDef0undef123_CT ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n3 ) ( * ( - 1 ) lam6n4 ) ( * Nl9arg11 lam6n5 ) ( - ( + 7 ( * UndefDef0undef123_arg1 2 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * Nl9arg21 lam6n5 ) ( - ( * UndefDef0undef123_arg2 2 ) ) ) 0 ) ( = ( + ( * 1 lam6n3 ) ( * Nl9arg31 lam6n5 ) ( - ( + ( - 1 ) ( * UndefDef0undef123_arg3 2 ) ) ) ) 0 ) ( = ( + ( * Nl9arg41 lam6n5 ) ( - ( * UndefDef0undef123_arg4 2 ) ) ) 0 ) ( = ( + ( * Nl9arg51 lam6n5 ) ( - ( * UndefDef0undef123_arg5 2 ) ) ) 0 ) ( = ( * ( - 1 ) lam6n1 ) 0 ) ( = ( * ( - 1 ) lam6n2 ) 0 ) ) ( or ( = UndefCntr0_undef123 0 ) ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n3 0 ) ( >= lam7n4 0 ) ( >= lam7n5 0 ) ( > ( + ( * 1 lam7n0 ) ( * 1 lam7n1 ) ( * 1 lam7n2 ) ( * 2 lam7n3 ) ( * 3 lam7n4 ) ( * Nl9CT1 lam7n5 ) ( - 1 ( + ( + ( + ( + ( + ( + ( + ( + ( + ( + UndefCntr0_CT 0 ) 0 ) 0 ) 0 ) 0 ) 0 ) 0 ) ( * UndefCntr0_undef123 UndefDef0undef123_CT ) ) 0 ) 0 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n3 ) ( * ( - 1 ) lam7n4 ) ( * Nl9arg11 lam7n5 ) ( - ( + UndefCntr0_arg1 ( * UndefDef0undef123_arg1 UndefCntr0_undef123 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl9arg21 lam7n5 ) ( - ( + UndefCntr0_arg2 ( * UndefDef0undef123_arg2 UndefCntr0_undef123 ) ) ) ) 0 ) ( = ( + ( * 1 lam7n3 ) ( * Nl9arg31 lam7n5 ) ( - ( + UndefCntr0_arg3 ( * UndefDef0undef123_arg3 UndefCntr0_undef123 ) ) ) ) 0 ) ( = ( + ( * Nl9arg41 lam7n5 ) ( - ( + UndefCntr0_arg4 ( * UndefDef0undef123_arg4 UndefCntr0_undef123 ) ) ) ) 0 ) ( = ( + ( * Nl9arg51 lam7n5 ) ( - ( + UndefCntr0_arg5 ( * UndefDef0undef123_arg5 UndefCntr0_undef123 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n1 ) ( - UndefCntr0_undef121 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n2 ) ( - UndefCntr0_undef122 ) ) 0 ) ( = ( - UndefCntr0_undef124 ) 0 ) ( = ( - UndefCntr0_undef125 ) 0 ) ) ) ) ))
(assert ( or ( = UndefCntr0_undef121 0 ) ( and ( and ( = UndefCntr0_arg1 0 ) ( = UndefCntr0_arg2 0 ) ( = UndefCntr0_arg3 0 ) ( = UndefCntr0_arg4 0 ) ( = UndefCntr0_arg5 0 ) ( = UndefCntr0_undef123 0 ) ( = UndefCntr0_undef124 0 ) ( = UndefCntr0_undef125 0 ) ( = UndefCntr0_undef122 0 ) ) ( or ( and ( <= ( + 1 ( * ( - 1 ) FV_undef121_0 ) ) 0 ) ( <= ( + UndefCntr0_CT ( * UndefCntr0_undef121 FV_undef121_0 ) ( * UndefCntr0_undef122 FV_undef122_0 ) ( * UndefCntr0_arg1 FV_arg1_0 ) ( * UndefCntr0_arg2 FV_arg2_0 ) ( * UndefCntr0_arg3 FV_arg3_0 ) ( * UndefCntr0_arg4 FV_arg4_0 ) ( * UndefCntr0_arg5 FV_arg5_0 ) ( * UndefCntr0_undef123 FV_undef123_0 ) ( * UndefCntr0_undef124 FV_undef124_0 ) ( * UndefCntr0_undef125 FV_undef125_0 ) ) 0 ) ) ( and ( <= ( + 1 ( * ( - 1 ) FV_undef121_0 ) ) 0 ) ( <= ( + UndefCntr0_CT ( * UndefCntr0_undef121 FV_undef121_0 ) ( * UndefCntr0_undef122 FV_undef122_0 ) ( * UndefCntr0_arg1 FV_arg1_0 ) ( * UndefCntr0_arg2 FV_arg2_0 ) ( * UndefCntr0_arg3 FV_arg3_0 ) ( * UndefCntr0_arg4 FV_arg4_0 ) ( * UndefCntr0_arg5 FV_arg5_0 ) ( * UndefCntr0_undef123 FV_undef123_0 ) ( * UndefCntr0_undef124 FV_undef124_0 ) ( * UndefCntr0_undef125 FV_undef125_0 ) ) 0 ) ) ) ) ))
(assert ( or ( = UndefCntr0_undef122 0 ) ( and ( and ( = UndefCntr0_arg1 0 ) ( = UndefCntr0_arg2 0 ) ( = UndefCntr0_arg3 0 ) ( = UndefCntr0_arg4 0 ) ( = UndefCntr0_arg5 0 ) ( = UndefCntr0_undef123 0 ) ( = UndefCntr0_undef124 0 ) ( = UndefCntr0_undef125 0 ) ( = UndefCntr0_undef121 0 ) ) ( or ( and ( <= ( + 1 ( * ( - 1 ) FV_undef122_0 ) ) 0 ) ( <= ( + UndefCntr0_CT ( * UndefCntr0_undef121 FV_undef121_0 ) ( * UndefCntr0_undef122 FV_undef122_0 ) ( * UndefCntr0_arg1 FV_arg1_0 ) ( * UndefCntr0_arg2 FV_arg2_0 ) ( * UndefCntr0_arg3 FV_arg3_0 ) ( * UndefCntr0_arg4 FV_arg4_0 ) ( * UndefCntr0_arg5 FV_arg5_0 ) ( * UndefCntr0_undef123 FV_undef123_0 ) ( * UndefCntr0_undef124 FV_undef124_0 ) ( * UndefCntr0_undef125 FV_undef125_0 ) ) 0 ) ) ( and ( <= ( + 1 ( * ( - 1 ) FV_undef122_0 ) ) 0 ) ( <= ( + UndefCntr0_CT ( * UndefCntr0_undef121 FV_undef121_0 ) ( * UndefCntr0_undef122 FV_undef122_0 ) ( * UndefCntr0_arg1 FV_arg1_0 ) ( * UndefCntr0_arg2 FV_arg2_0 ) ( * UndefCntr0_arg3 FV_arg3_0 ) ( * UndefCntr0_arg4 FV_arg4_0 ) ( * UndefCntr0_arg5 FV_arg5_0 ) ( * UndefCntr0_undef123 FV_undef123_0 ) ( * UndefCntr0_undef124 FV_undef124_0 ) ( * UndefCntr0_undef125 FV_undef125_0 ) ) 0 ) ) ) ) ))
(assert ( and ( >= lam8n0 0 ) ( >= lam8n1 0 ) ( >= lam8n2 0 ) ( >= lam8n3 0 ) ( > ( + ( * 1 lam8n0 ) ( * 2 lam8n1 ) ( * ( - 2 ) lam8n2 ) ( * Nl9CT1 lam8n3 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n1 ) ( * 1 lam8n2 ) ( * Nl9arg11 lam8n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n0 ) ( * Nl9arg21 lam8n3 ) ) 0 ) ( = ( + ( * 1 lam8n1 ) ( * Nl9arg31 lam8n3 ) ) 0 ) ( = ( * Nl9arg41 lam8n3 ) 0 ) ( = ( * Nl9arg51 lam8n3 ) 0 ) ))
(assert ( and ( <= ( + Nl9CT1 ( * Nl9arg21 FV_arg2_2 ) ( * Nl9arg11 FV_arg1_2 ) ( * Nl9arg31 FV_arg3_2 ) ( * Nl9arg41 FV_arg4_2 ) ( * Nl9arg51 FV_arg5_2 ) ) 0 ) ( and ( <= ( + 1 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) FV_undef121_2 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) FV_undef122_2 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) FV_arg1_2 ) FV_arg3_2 ) 0 ) ( <= ( + 3 ( * ( - 1 ) FV_arg1_2 ) ) 0 ) ( <= ( + 12 ( * 7 FV_arg1_2 ) ( * ( - 1 ) FV_arg3_2 ) ( * 2 FV_undef123_2 ) ) 0 ) ) ))
(check-sat)
(exit)
