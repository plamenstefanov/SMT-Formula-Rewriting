(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl2arg11 () Int)
(declare-fun Nl2arg21 () Int)
(declare-fun Nl2arg12 () Int)
(declare-fun Nl2arg22 () Int)
(declare-fun Nl2arg13 () Int)
(declare-fun Nl2arg23 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam0n5 () Int)
(declare-fun Nl2CT1 () Int)
(declare-fun Nl2CT2 () Int)
(declare-fun Nl2CT3 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n4 () Int)
(declare-fun lam4n5 () Int)
(declare-fun lam4n6 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n4 () Int)
(declare-fun lam5n5 () Int)
(declare-fun lam5n6 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n4 () Int)
(declare-fun lam6n5 () Int)
(declare-fun lam6n6 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n4 () Int)
(declare-fun lam7n5 () Int)
(declare-fun lam7n6 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam9n1 () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam10n1 () Int)
(declare-fun lam10n0 () Int)
(declare-fun arg1 () Int)
(declare-fun arg2 () Int)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam11n2 () Int)
(declare-fun lam11n3 () Int)
(declare-fun lam11n4 () Int)
(declare-fun lam11n5 () Int)
(declare-fun FV_arg1_2 () Int)
(declare-fun FV_arg2_2 () Int)
(assert ( and ( <= ( - 1 ) Nl2arg11 ) ( <= Nl2arg11 1 ) ( <= ( - 1 ) Nl2arg21 ) ( <= Nl2arg21 1 ) ( <= ( - 1 ) Nl2arg12 ) ( <= Nl2arg12 1 ) ( <= ( - 1 ) Nl2arg22 ) ( <= Nl2arg22 1 ) ( <= ( - 1 ) Nl2arg13 ) ( <= Nl2arg13 1 ) ( <= ( - 1 ) Nl2arg23 ) ( <= Nl2arg23 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( > ( + ( * 52 lam0n0 ) ( * 52 lam0n1 ) ( * 1 lam0n2 ) ( * Nl2CT1 lam0n3 ) ( * Nl2CT2 lam0n4 ) ( * Nl2CT3 lam0n5 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n2 ) ( * Nl2arg11 lam0n3 ) ( * Nl2arg12 lam0n4 ) ( * Nl2arg13 lam0n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * ( - 1 ) lam0n1 ) ( * ( - 1 ) lam0n2 ) ( * Nl2arg21 lam0n3 ) ( * Nl2arg22 lam0n4 ) ( * Nl2arg23 lam0n5 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( >= lam1n5 0 ) ( > ( + ( * 52 lam1n0 ) ( * 52 lam1n1 ) ( * 1 lam1n2 ) ( * Nl2CT1 lam1n3 ) ( * Nl2CT2 lam1n4 ) ( * Nl2CT3 lam1n5 ) ( - 1 ( + ( + Nl2CT1 ( * Nl2arg11 1 ) ) ( * Nl2arg21 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * 1 lam1n2 ) ( * Nl2arg11 lam1n3 ) ( * Nl2arg12 lam1n4 ) ( * Nl2arg13 lam1n5 ) ( - ( + 0 ( * Nl2arg11 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * ( - 1 ) lam1n1 ) ( * ( - 1 ) lam1n2 ) ( * Nl2arg21 lam1n3 ) ( * Nl2arg22 lam1n4 ) ( * Nl2arg23 lam1n5 ) ( - ( + 0 ( * Nl2arg21 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( > ( + ( * 52 lam0n0 ) ( * 52 lam0n1 ) ( * 1 lam0n2 ) ( * Nl2CT1 lam0n3 ) ( * Nl2CT2 lam0n4 ) ( * Nl2CT3 lam0n5 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n2 ) ( * Nl2arg11 lam0n3 ) ( * Nl2arg12 lam0n4 ) ( * Nl2arg13 lam0n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * ( - 1 ) lam0n1 ) ( * ( - 1 ) lam0n2 ) ( * Nl2arg21 lam0n3 ) ( * Nl2arg22 lam0n4 ) ( * Nl2arg23 lam0n5 ) ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( >= lam2n4 0 ) ( >= lam2n5 0 ) ( > ( + ( * 52 lam2n0 ) ( * 52 lam2n1 ) ( * 1 lam2n2 ) ( * Nl2CT1 lam2n3 ) ( * Nl2CT2 lam2n4 ) ( * Nl2CT3 lam2n5 ) ( - 1 ( + ( + Nl2CT2 ( * Nl2arg12 1 ) ) ( * Nl2arg22 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * 1 lam2n2 ) ( * Nl2arg11 lam2n3 ) ( * Nl2arg12 lam2n4 ) ( * Nl2arg13 lam2n5 ) ( - ( + 0 ( * Nl2arg12 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * ( - 1 ) lam2n1 ) ( * ( - 1 ) lam2n2 ) ( * Nl2arg21 lam2n3 ) ( * Nl2arg22 lam2n4 ) ( * Nl2arg23 lam2n5 ) ( - ( + 0 ( * Nl2arg22 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( > ( + ( * 52 lam0n0 ) ( * 52 lam0n1 ) ( * 1 lam0n2 ) ( * Nl2CT1 lam0n3 ) ( * Nl2CT2 lam0n4 ) ( * Nl2CT3 lam0n5 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n2 ) ( * Nl2arg11 lam0n3 ) ( * Nl2arg12 lam0n4 ) ( * Nl2arg13 lam0n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * ( - 1 ) lam0n1 ) ( * ( - 1 ) lam0n2 ) ( * Nl2arg21 lam0n3 ) ( * Nl2arg22 lam0n4 ) ( * Nl2arg23 lam0n5 ) ) 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( >= lam3n4 0 ) ( >= lam3n5 0 ) ( > ( + ( * 52 lam3n0 ) ( * 52 lam3n1 ) ( * 1 lam3n2 ) ( * Nl2CT1 lam3n3 ) ( * Nl2CT2 lam3n4 ) ( * Nl2CT3 lam3n5 ) ( - 1 ( + ( + Nl2CT3 ( * Nl2arg13 1 ) ) ( * Nl2arg23 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * 1 lam3n2 ) ( * Nl2arg11 lam3n3 ) ( * Nl2arg12 lam3n4 ) ( * Nl2arg13 lam3n5 ) ( - ( + 0 ( * Nl2arg13 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * ( - 1 ) lam3n1 ) ( * ( - 1 ) lam3n2 ) ( * Nl2arg21 lam3n3 ) ( * Nl2arg22 lam3n4 ) ( * Nl2arg23 lam3n5 ) ( - ( + 0 ( * Nl2arg23 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( >= lam4n4 0 ) ( >= lam4n5 0 ) ( >= lam4n6 0 ) ( > ( + ( * 52 lam4n0 ) ( * 1 lam4n1 ) ( * ( - 51 ) lam4n2 ) ( * 32 lam4n3 ) ( * Nl2CT1 lam4n4 ) ( * Nl2CT2 lam4n5 ) ( * Nl2CT3 lam4n6 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * 1 lam4n1 ) ( * Nl2arg11 lam4n4 ) ( * Nl2arg12 lam4n5 ) ( * Nl2arg13 lam4n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * ( - 1 ) lam4n1 ) ( * 1 lam4n2 ) ( * ( - 1 ) lam4n3 ) ( * Nl2arg21 lam4n4 ) ( * Nl2arg22 lam4n5 ) ( * Nl2arg23 lam4n6 ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( >= lam5n3 0 ) ( >= lam5n4 0 ) ( >= lam5n5 0 ) ( >= lam5n6 0 ) ( > ( + ( * 52 lam5n0 ) ( * 1 lam5n1 ) ( * ( - 51 ) lam5n2 ) ( * 32 lam5n3 ) ( * Nl2CT1 lam5n4 ) ( * Nl2CT2 lam5n5 ) ( * Nl2CT3 lam5n6 ) ( - 1 ( + ( + Nl2CT1 ( * Nl2arg11 ( - 1 ) ) ) ( * Nl2arg21 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * 1 lam5n1 ) ( * Nl2arg11 lam5n4 ) ( * Nl2arg12 lam5n5 ) ( * Nl2arg13 lam5n6 ) ( - ( + 0 ( * Nl2arg11 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * ( - 1 ) lam5n1 ) ( * 1 lam5n2 ) ( * ( - 1 ) lam5n3 ) ( * Nl2arg21 lam5n4 ) ( * Nl2arg22 lam5n5 ) ( * Nl2arg23 lam5n6 ) ( - ( + 0 ( * Nl2arg21 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( >= lam4n4 0 ) ( >= lam4n5 0 ) ( >= lam4n6 0 ) ( > ( + ( * 52 lam4n0 ) ( * 1 lam4n1 ) ( * ( - 51 ) lam4n2 ) ( * 32 lam4n3 ) ( * Nl2CT1 lam4n4 ) ( * Nl2CT2 lam4n5 ) ( * Nl2CT3 lam4n6 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * 1 lam4n1 ) ( * Nl2arg11 lam4n4 ) ( * Nl2arg12 lam4n5 ) ( * Nl2arg13 lam4n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * ( - 1 ) lam4n1 ) ( * 1 lam4n2 ) ( * ( - 1 ) lam4n3 ) ( * Nl2arg21 lam4n4 ) ( * Nl2arg22 lam4n5 ) ( * Nl2arg23 lam4n6 ) ) 0 ) ) ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( >= lam6n3 0 ) ( >= lam6n4 0 ) ( >= lam6n5 0 ) ( >= lam6n6 0 ) ( > ( + ( * 52 lam6n0 ) ( * 1 lam6n1 ) ( * ( - 51 ) lam6n2 ) ( * 32 lam6n3 ) ( * Nl2CT1 lam6n4 ) ( * Nl2CT2 lam6n5 ) ( * Nl2CT3 lam6n6 ) ( - 1 ( + ( + Nl2CT2 ( * Nl2arg12 ( - 1 ) ) ) ( * Nl2arg22 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * 1 lam6n1 ) ( * Nl2arg11 lam6n4 ) ( * Nl2arg12 lam6n5 ) ( * Nl2arg13 lam6n6 ) ( - ( + 0 ( * Nl2arg12 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * ( - 1 ) lam6n1 ) ( * 1 lam6n2 ) ( * ( - 1 ) lam6n3 ) ( * Nl2arg21 lam6n4 ) ( * Nl2arg22 lam6n5 ) ( * Nl2arg23 lam6n6 ) ( - ( + 0 ( * Nl2arg22 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( >= lam4n4 0 ) ( >= lam4n5 0 ) ( >= lam4n6 0 ) ( > ( + ( * 52 lam4n0 ) ( * 1 lam4n1 ) ( * ( - 51 ) lam4n2 ) ( * 32 lam4n3 ) ( * Nl2CT1 lam4n4 ) ( * Nl2CT2 lam4n5 ) ( * Nl2CT3 lam4n6 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * 1 lam4n1 ) ( * Nl2arg11 lam4n4 ) ( * Nl2arg12 lam4n5 ) ( * Nl2arg13 lam4n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * ( - 1 ) lam4n1 ) ( * 1 lam4n2 ) ( * ( - 1 ) lam4n3 ) ( * Nl2arg21 lam4n4 ) ( * Nl2arg22 lam4n5 ) ( * Nl2arg23 lam4n6 ) ) 0 ) ) ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n3 0 ) ( >= lam7n4 0 ) ( >= lam7n5 0 ) ( >= lam7n6 0 ) ( > ( + ( * 52 lam7n0 ) ( * 1 lam7n1 ) ( * ( - 51 ) lam7n2 ) ( * 32 lam7n3 ) ( * Nl2CT1 lam7n4 ) ( * Nl2CT2 lam7n5 ) ( * Nl2CT3 lam7n6 ) ( - 1 ( + ( + Nl2CT3 ( * Nl2arg13 ( - 1 ) ) ) ( * Nl2arg23 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * 1 lam7n1 ) ( * Nl2arg11 lam7n4 ) ( * Nl2arg12 lam7n5 ) ( * Nl2arg13 lam7n6 ) ( - ( + 0 ( * Nl2arg13 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * ( - 1 ) lam7n1 ) ( * 1 lam7n2 ) ( * ( - 1 ) lam7n3 ) ( * Nl2arg21 lam7n4 ) ( * Nl2arg22 lam7n5 ) ( * Nl2arg23 lam7n6 ) ( - ( + 0 ( * Nl2arg23 1 ) ) ) ) 0 ) ) ))
(assert ( and ( = arg1 0 ) ( = ( + ( - 100 ) arg2 ) 0 ) ( <= ( + Nl2CT1 ( * ( + 0 Nl2arg11 ) arg1 ) ( * ( + 0 Nl2arg21 ) arg2 ) ) 0 ) ( <= ( + Nl2CT2 ( * ( + 0 Nl2arg12 ) arg1 ) ( * ( + 0 Nl2arg22 ) arg2 ) ) 0 ) ( <= ( + Nl2CT3 ( * ( + 0 Nl2arg13 ) arg1 ) ( * ( + 0 Nl2arg23 ) arg2 ) ) 0 ) ( <= ( + 32 ( * ( - 1 ) arg2 ) ) 0 ) ))
(assert ( and ( >= lam11n0 0 ) ( >= lam11n1 0 ) ( >= lam11n2 0 ) ( >= lam11n3 0 ) ( >= lam11n4 0 ) ( >= lam11n5 0 ) ( > ( + ( * 52 lam11n1 ) ( * 32 lam11n2 ) ( * Nl2CT1 lam11n3 ) ( * Nl2CT2 lam11n4 ) ( * Nl2CT3 lam11n5 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam11n0 ) ( * ( - 1 ) lam11n1 ) ( * Nl2arg11 lam11n3 ) ( * Nl2arg12 lam11n4 ) ( * Nl2arg13 lam11n5 ) ) 0 ) ( = ( + ( * 1 lam11n0 ) ( * ( - 1 ) lam11n1 ) ( * ( - 1 ) lam11n2 ) ( * Nl2arg21 lam11n3 ) ( * Nl2arg22 lam11n4 ) ( * Nl2arg23 lam11n5 ) ) 0 ) ))
(assert ( and ( and ( <= ( + Nl2CT1 ( * Nl2arg11 FV_arg1_2 ) ( * Nl2arg21 FV_arg2_2 ) ) 0 ) ( <= ( + Nl2CT2 ( * Nl2arg12 FV_arg1_2 ) ( * Nl2arg22 FV_arg2_2 ) ) 0 ) ( <= ( + Nl2CT3 ( * Nl2arg13 FV_arg1_2 ) ( * Nl2arg23 FV_arg2_2 ) ) 0 ) ) ( or ( and ( <= ( + 52 ( * ( - 1 ) FV_arg1_2 ) ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ( <= ( + 52 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ( <= ( + 1 FV_arg1_2 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ) ( and ( <= ( + 52 ( * ( - 1 ) FV_arg1_2 ) ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ( <= ( + 1 FV_arg1_2 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ( <= ( + ( - 51 ) FV_arg2_2 ) 0 ) ( <= ( + 32 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ) ( and ( <= ( + 1 FV_arg1_2 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ( <= ( + ( - 51 ) FV_arg1_2 FV_arg2_2 ) 0 ) ( <= ( + 32 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ) ) ))
(assert ( and ( and ( <= ( + Nl2CT1 ( * Nl2arg11 FV_arg1_2 ) ( * Nl2arg21 FV_arg2_2 ) ) 0 ) ( <= ( + Nl2CT2 ( * Nl2arg12 FV_arg1_2 ) ( * Nl2arg22 FV_arg2_2 ) ) 0 ) ( <= ( + Nl2CT3 ( * Nl2arg13 FV_arg1_2 ) ( * Nl2arg23 FV_arg2_2 ) ) 0 ) ) ( and ( <= ( + 1 FV_arg1_2 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ( <= ( + ( - 51 ) FV_arg1_2 FV_arg2_2 ) 0 ) ( <= ( + 32 ( * ( - 1 ) FV_arg2_2 ) ) 0 ) ) ))
(check-sat)
(exit)
