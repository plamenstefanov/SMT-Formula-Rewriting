(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl4arg11 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun Nl4CT1 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam2n7 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam3n6 () Int)
(declare-fun lam3n7 () Int)
(declare-fun undef19 () Int)
(declare-fun undef26 () Int)
(declare-fun undef27 () Int)
(declare-fun undef3 () Int)
(declare-fun undef4 () Int)
(declare-fun undef20 () Int)
(declare-fun undef5 () Int)
(declare-fun undef21 () Int)
(declare-fun undef14 () Int)
(declare-fun undef15 () Int)
(declare-fun undef16 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun RFN1_CT () Int)
(declare-fun RFN1_arg1 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(assert ( and ( <= ( - 2 ) Nl4arg11 ) ( <= Nl4arg11 2 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( > ( + ( * 1 lam0n0 ) ( * Nl4CT1 lam0n1 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl4arg11 lam0n1 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( > ( + ( * 1 lam1n0 ) ( * Nl4CT1 lam1n1 ) ( - 1 ( + Nl4CT1 ( * Nl4arg11 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * Nl4arg11 lam1n1 ) ( - ( + 0 ( * Nl4arg11 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( not ( <= undef19 0 ) ) ( <= ( + 1 ( * ( - 1 ) undef26 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef27 ) ) 0 ) ( <= ( * ( - 1 ) undef3 ) 0 ) ( <= ( * ( - 1 ) undef4 ) 0 ) ( <= ( * ( - 1 ) undef20 ) 0 ) ( = ( + ( - 1 ) undef4 ( * ( - 2 ) undef5 ) ) 0 ) ( = ( + undef20 ( * ( - 2 ) undef21 ) ) 0 ) ( <= ( + ( + Nl4CT1 ( * Nl4arg11 0 ) ) ( * ( + 0 ( * Nl4arg11 ( - 1 ) ) ) undef19 ) ) 0 ) ) ( and ( not ( <= undef19 0 ) ) ( <= ( + 1 ( * ( - 1 ) undef26 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef27 ) ) 0 ) ( <= ( * ( - 1 ) undef14 ) 0 ) ( <= ( * ( - 1 ) undef15 ) 0 ) ( <= ( * ( - 1 ) undef20 ) 0 ) ( = ( + undef15 ( * ( - 2 ) undef16 ) ) 0 ) ( = ( + undef20 ( * ( - 2 ) undef21 ) ) 0 ) ( <= ( + ( + Nl4CT1 ( * Nl4arg11 0 ) ) ( * ( + 0 ( * Nl4arg11 ( - 1 ) ) ) undef19 ) ) 0 ) ) ))
(assert ( or ( and ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( > ( + ( * 1 lam7n0 ) ( * Nl4CT1 lam7n1 ) ( - 1 ( - ( + RFN1_CT ( * RFN1_arg1 ( - 2 ) ) ) RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam7n0 ) ( * Nl4arg11 lam7n1 ) ( - ( - ( + 0 ( * RFN1_arg1 1 ) ) RFN1_arg1 ) ) ) 0 ) ) ( and ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( > ( + ( * 1 lam5n0 ) ( * Nl4CT1 lam5n1 ) ( - 1 ( - RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam5n0 ) ( * Nl4arg11 lam5n1 ) ( - ( - RFN1_arg1 ) ) ) 0 ) ) ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( > ( + ( * 1 lam6n0 ) ( * Nl4CT1 lam6n1 ) ( - 1 ( + ( - ( + RFN1_CT ( * RFN1_arg1 ( - 2 ) ) ) RFN1_CT ) 1 ) ) ) 0 ) ( = ( + ( * 1 lam6n0 ) ( * Nl4arg11 lam6n1 ) ( - ( - ( + 0 ( * RFN1_arg1 1 ) ) RFN1_arg1 ) ) ) 0 ) ) ) ) ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl4CT1 lam4n1 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam4n0 ) ( * Nl4arg11 lam4n1 ) ) 0 ) ) ))
(check-sat)
(exit)
