(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_094.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x156 (+ (+ (* 4 |v2:7|) (* (- 1) |v3:6|)) (* (- 17) |v8:1|))))
(let ((?x146 (+ (+ (* 7 |v5:4|) (* (- 12) |v3:6|)) (* (- 20) |v7:2|))))
(let ((?x138 (+ (+ (* 16 |v5:4|) (* (- 14) |v5:4|)) (* 15 |v0:9|))))
(let (($x159 (and (<= ?x138 (- 4)) (and (<= ?x146 (- 5)) (<= ?x156 18)))))
(let ((?x26 (- 1)))
(let ((?x128 (+ (+ (* (- 11) |v9:0|) (* 5 |v5:4|)) (* 2 |v6:3|))))
(let ((?x119 (+ (+ (* 14 |v8:1|) (* 11 |v0:9|)) (* 15 |v5:4|))))
(let ((?x85 2))
(let ((?x22 (- 13)))
(let ((?x82 (* ?x22 |v8:1|)))
(let ((?x103 (+ (+ (* 15 |v9:0|) (* (- 5) |v6:3|)) (* 5 |v3:6|))))
(let (($x113 (and (<= ?x103 14) (<= (+ (+ (* (- 19) |v6:3|) (* ?x22 |v3:6|)) ?x82) ?x85))))
(let (($x89 (<= (+ (+ (* 11 |v4:5|) ?x82) (* ?x85 |v4:5|)) (- 9))))
(let (($x75 (<= (+ (+ (* 17 |v5:4|) |v6:3|) (* 20 |v7:2|)) (- 7))))
(let ((?x61 15))
(let ((?x60 (+ (+ (* (- 4) |v2:7|) (* 9 |v0:9|)) (* 19 |v9:0|))))
(let ((?x46 (+ (+ (* ?x26 |v1:8|) (* 16 |v2:7|)) (* (- 12) |v0:9|))))
(let (($x35 (<= (+ (+ (* ?x26 |v5:4|) (* ?x22 |v0:9|)) (* (- 3) |v1:8|)) (- 15))))
(let (($x92 (and $x35 (and (or (<= ?x46 18) (<= ?x60 ?x61)) (and $x75 $x89)))))
(let (($x161 (and $x92 (and (and $x113 (and (<= ?x119 (- 20)) (<= ?x128 ?x26))) $x159))))
(let ((?x21 (+ (+ (* 8 |v1:8|) (* (- 18) |v7:2|)) (* (- 15) |v9:0|))))
(or (<= ?x21 ?x22) $x161)))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

