(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_113.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x90 5))
(let ((?x252 (+ (+ (* (- 2) |v8:1|) (* 4 |v8:1|)) (* 16 |v4:5|))))
(let ((?x244 (+ (+ (* 9 |v5:4|) (* (- 4) |v0:9|)) (* (- 14) |v5:4|))))
(let ((?x184 11))
(let ((?x235 (+ (+ (* 10 |v8:1|) (* (- 17) |v6:3|)) (* 19 |v5:4|))))
(let ((?x227 (+ (+ (* 13 |v4:5|) (* 18 |v2:7|)) (* 2 |v3:6|))))
(let (($x255 (and (and (<= ?x227 (- 12)) (<= ?x235 ?x184)) (or (<= ?x244 6) (<= ?x252 ?x90)))))
(let ((?x219 (+ (+ (* ?x90 |v7:2|) (* 13 |v7:2|)) (* (- 4) |v7:2|))))
(let ((?x211 (+ (+ (* (- 1) |v1:8|) (* 12 |v6:3|)) (* 12 |v1:8|))))
(let ((?x28 (- 10)))
(let ((?x204 (+ (+ (* (- 20) |v5:4|) (* (- 1) |v9:0|)) (* 16 |v5:4|))))
(let ((?x104 (- 5)))
(let (($x200 (<= (+ (+ |v3:6| (* (- 8) |v7:2|)) (* (- 20) |v0:9|)) ?x104)))
(let (($x222 (or (or $x200 (<= ?x204 ?x28)) (or (<= ?x211 ?x184) (<= ?x219 7)))))
(let ((?x81 (- 3)))
(let ((?x192 (+ (+ (* 20 |v7:2|) (* ?x104 |v9:0|)) (* (- 12) |v9:0|))))
(let ((?x159 (* 14 |v6:3|)))
(let (($x185 (<= (+ (+ (* 16 |v7:2|) (* 8 |v7:2|)) ?x159) ?x184)))
(let ((?x16 (- 8)))
(let ((?x174 (+ (+ (* (- 13) |v0:9|) (* 2 |v0:9|)) (* 18 |v0:9|))))
(let (($x167 (<= (+ (+ (* ?x16 |v4:5|) (* 4 |v1:8|)) (* ?x81 |v0:9|)) (- 7))))
(let ((?x113 (- 1)))
(let (($x161 (<= (+ (+ (* (- 19) |v9:0|) (* (- 20) |v3:6|)) ?x159) ?x113)))
(let (($x257 (or (and $x161 (and (and $x167 (<= ?x174 ?x16)) (or $x185 (<= ?x192 ?x81)))) (and $x222 $x255))))
(let ((?x148 (+ (+ (* 0 |v0:9|) (* (- 17) |v0:9|)) (* (- 16) |v5:4|))))
(let ((?x41 (- 6)))
(let ((?x138 (+ (+ (* (- 17) |v5:4|) (* 12 |v3:6|)) (* (- 15) |v9:0|))))
(let ((?x127 (+ (+ (* ?x81 |v9:0|) (* 6 |v9:0|)) (* 4 |v7:2|))))
(let (($x151 (and (or (<= ?x127 20) (<= ?x138 ?x41)) (<= ?x148 (- 14)))))
(let ((?x115 (+ (+ (* 15 |v6:3|) (* (- 20) |v5:4|)) (* ?x113 |v6:3|))))
(let ((?x103 (+ (+ (* ?x28 |v4:5|) (* 0 |v8:1|)) (* 17 |v5:4|))))
(let (($x96 (<= (+ (+ (* 7 |v4:5|) (* ?x90 |v5:4|)) (* ?x41 |v7:2|)) 3)))
(let ((?x80 (+ (+ (* (- 20) |v0:9|) (* 15 |v0:9|)) (* 16 |v6:3|))))
(let ((?x65 (+ (+ (* (- 13) |v7:2|) (* 18 |v3:6|)) (* 0 |v1:8|))))
(let ((?x51 (+ (+ (* ?x41 |v6:3|) (* 15 |v9:0|)) (* 17 |v9:0|))))
(let ((?x35 (+ (+ (* (- 4) |v6:3|) (* ?x28 |v8:1|)) (* (- 18) |v2:7|))))
(let (($x20 (<= (+ (+ |v7:2| (* (- 15) |v1:8|)) (* ?x16 |v3:6|)) (- 7))))
(let (($x69 (or (and $x20 (<= ?x35 (- 9))) (or (<= ?x51 (- 11)) (<= ?x65 (- 19))))))
(let (($x153 (and (and $x69 (and (or (<= ?x80 ?x81) $x96) (<= ?x103 ?x104))) (or (<= ?x115 10) $x151))))
(and $x153 $x257)))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

