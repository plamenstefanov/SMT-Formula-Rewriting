(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_256.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x288 (+ (+ (* (- 1) |v5:4|) (* 6 |v5:4|)) (* (- 5) |v4:5|))))
(let ((?x282 (+ (+ (* (- 20) |v6:3|) (* (- 6) |v0:9|)) (* (- 17) |v6:3|))))
(let ((?x136 (- 8)))
(let ((?x277 (+ (+ (* 12 |v0:9|) (* (- 18) |v0:9|)) (* (- 3) |v6:3|))))
(let (($x290 (and (and (<= ?x277 ?x136) (<= ?x282 2)) (<= ?x288 20))))
(let ((?x56 (- 1)))
(let ((?x267 (+ (+ (* 5 |v7:2|) (* 15 |v8:1|)) (* (- 7) |v0:9|))))
(let ((?x52 (- 9)))
(let (($x262 (<= (+ (+ (* 7 |v0:9|) (* (- 13) |v2:7|)) |v9:0|) ?x52)))
(let ((?x60 (- 11)))
(let ((?x257 (+ (+ (* 18 |v6:3|) (* (- 6) |v3:6|)) (* (- 2) |v8:1|))))
(let ((?x124 7))
(let ((?x252 (+ (+ (* ?x52 |v9:0|) (* (- 14) |v8:1|)) (* 18 |v4:5|))))
(let (($x291 (and (and (or (<= ?x252 ?x124) (<= ?x257 ?x60)) (and $x262 (<= ?x267 ?x56))) $x290)))
(let ((?x29 9))
(let ((?x243 (+ (+ (* (- 13) |v2:7|) (* 4 |v9:0|)) (* (- 6) |v6:3|))))
(let ((?x116 (- 20)))
(let ((?x117 (* ?x116 |v6:3|)))
(let (($x245 (or (<= (+ (+ (* ?x29 |v0:9|) (* (- 3) |v2:7|)) ?x117) ?x29) (<= ?x243 ?x29))))
(let ((?x230 (+ (+ (* 6 |v7:2|) (* (- 15) |v2:7|)) (* (- 4) |v2:7|))))
(let ((?x14 (- 19)))
(let ((?x219 (+ (+ (* (- 13) |v4:5|) (* 14 |v2:7|)) (* 14 |v0:9|))))
(let ((?x41 (- 13)))
(let ((?x212 (+ (+ (* 5 |v5:4|) (* 4 |v3:6|)) (* 8 |v1:8|))))
(let ((?x206 (- 6)))
(let ((?x205 (+ (+ (* 10 |v0:9|) (* ?x60 |v5:4|)) (* 4 |v8:1|))))
(let ((?x121 18))
(let ((?x197 (+ (+ (* ?x29 |v1:8|) (* 17 |v1:8|)) (* (- 5) |v0:9|))))
(let (($x190 (<= (+ (+ (* 8 |v0:9|) |v3:6|) (* ?x136 |v9:0|)) 20)))
(let (($x247 (or (and (and $x190 (<= ?x197 ?x121)) (or (<= ?x205 ?x206) (<= ?x212 ?x41))) (and (or (<= ?x219 ?x14) (<= ?x230 2)) $x245))))
(let ((?x73 6))
(let ((?x74 (* ?x73 |v0:9|)))
(let (($x172 (<= (+ (+ (* 14 |v4:5|) (* 16 |v1:8|)) ?x74) 17)))
(let (($x179 (or $x172 (<= (+ (+ (* ?x29 |v3:6|) (* ?x14 |v0:9|)) (* ?x136 |v7:2|)) ?x14))))
(let ((?x164 (+ (+ (* ?x124 |v8:1|) (* 5 |v1:8|)) (* 0 |v3:6|))))
(let ((?x156 (+ (+ (* 11 |v3:6|) (* (- 2) |v4:5|)) (* 19 |v8:1|))))
(let ((?x68 16))
(let (($x145 (<= (+ (+ (* ?x136 |v3:6|) (* 4 |v7:2|)) (* ?x68 |v2:7|)) ?x68)))
(let ((?x139 (- 2)))
(let (($x140 (<= (+ (+ (* ?x41 |v8:1|) (* (- 18) |v1:8|)) (* ?x136 |v9:0|)) ?x139)))
(let ((?x65 3))
(let (($x119 (<= (+ (+ (* 10 |v8:1|) (* 5 |v0:9|)) ?x117) ?x68)))
(let (($x130 (and $x119 (<= (+ (+ (* ?x121 |v6:3|) (* ?x124 |v0:9|)) (* ?x116 |v2:7|)) ?x65))))
(let (($x181 (and (and $x130 (and $x140 $x145)) (or (and (<= ?x156 ?x116) (<= ?x164 ?x60)) $x179))))
(let ((?x10 5))
(let (($x107 (<= (+ (+ (* ?x65 |v3:6|) (* (- 14) |v7:2|)) (* ?x56 |v5:4|)) ?x10)))
(let ((?x84 (- 17)))
(let ((?x101 (+ (+ (* (- 16) |v7:2|) (* 14 |v2:7|)) (* ?x52 |v7:2|))))
(let ((?x91 (+ (+ (* ?x84 |v8:1|) (* (- 14) |v7:2|)) (* (- 3) |v9:0|))))
(let (($x81 (<= (+ (+ ?x74 (* 4 |v7:2|)) (* (- 3) |v7:2|)) ?x29)))
(let ((?x49 14))
(let ((?x50 (* ?x49 |v4:5|)))
(let (($x70 (and (<= (+ (+ (* ?x41 |v8:1|) (* 10 |v3:6|)) ?x50) ?x52) (<= (+ (+ (* ?x56 |v9:0|) (* ?x60 |v7:2|)) (* ?x65 |v0:9|)) ?x68))))
(let ((?x36 (+ (+ (* (- 3) |v8:1|) (* ?x29 |v9:0|)) (* (- 18) |v2:7|))))
(let (($x23 (<= (+ (+ (* ?x10 |v4:5|) (* ?x14 |v9:0|)) (* 15 |v5:4|)) (- 7))))
(let (($x110 (and (and (and $x23 (<= ?x36 ?x10)) $x70) (and (or $x81 (<= ?x91 (- 12))) (or (<= ?x101 ?x84) $x107)))))
(and (and $x110 $x181) (or $x247 $x291)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

