(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status unsat)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(assert (exists ((?x1 Real)) (forall ((?x2 Real)) (exists ((?x3 Real)) (let ((?v_5 (* 46 ?x3)) (?v_11 (* 84 ?x1)) (?v_2 (* 73 ?x3)) (?v_8 (* 99 ?x2)) (?v_14 (* 97 ?x2)) (?v_7 (* 53 ?x2)) (?v_9 (* 13 ?x3)) (?v_1 (* (- 29) ?x2)) (?v_3 (* (- 44) ?x3)) (?v_0 (* (- 74) ?x1)) (?v_10 (* (- 98) ?x3)) (?v_16 (* (- 79) ?x2)) (?v_12 (* (- 20) ?x3)) (?v_4 (* (- 91) ?x2)) (?v_6 (* (- 100) ?x2)) (?v_17 (* (- 47) ?x2)) (?v_13 (* (- 15) ?x1)) (?v_15 (* (- 85) ?x1))) (and (and (or (and (and (and (< (+ (+ (* (- 54) ?x1) (* (- 14) ?x2)) ?v_5) 64) (> (+ (* (- 39) ?x1) ?v_1) 32)) (not (= (+ ?v_11 ?v_3) (- 30)))) (and (and (<= (* 17 ?x3) 0) (< (+ (+ ?v_0 (* (- 66) ?x2)) (* (- 46) ?x3)) 25)) (or (= (+ (+ (* (- 2) ?x1) (* 7 ?x2)) (* (- 74) ?x3)) 36) (<= (* 16 ?x3) 42)))) (or (or (or (and (< (+ (* (- 41) ?x1) (* 62 ?x2)) 0) (< (+ (+ (* (- 1) ?x1) (* (- 98) ?x2)) ?v_10) 0)) (or (< (+ (+ (* 17 ?x1) ?v_16) ?v_12) (- 14)) (>= ?v_0 10))) (or (and (not (= (+ (* (- 88) ?x1) ?v_2) (- 24))) (<= (+ ?v_4 (* 72 ?x3)) 95)) (and (<= (+ (* (- 37) ?x1) (* 27 ?x2)) (- 79)) (not (= (+ (+ (* (- 63) ?x1) ?v_1) (* 39 ?x3)) (- 15)))))) (or (and (not (= (+ (* (- 55) ?x1) (* (- 40) ?x2)) 0)) (and (<= (* (- 31) ?x3) 80) (> (+ (* 59 ?x1) ?v_2) 0))) (or (and (>= (+ (+ (* (- 4) ?x1) (* (- 32) ?x2)) ?v_3) (- 80)) (<= (+ (* 46 ?x1) (* (- 30) ?x2)) (- 34))) (or (>= (+ (+ (* 21 ?x1) ?v_6) (* 1 ?x3)) 19) (< (+ (+ (* 30 ?x1) (* (- 15) ?x2)) (* (- 80) ?x3)) (- 77))))))) (or (and (and (or (= (* 75 ?x1) (- 93)) (<= (+ (+ (* 1 ?x1) (* (- 38) ?x2)) (* 15 ?x3)) 0)) (or (= (+ (+ (* 61 ?x1) (* 31 ?x2)) (* (- 3) ?x3)) (- 33)) (<= ?v_4 0))) (and (and (and (not (= (* 64 ?x3) 3)) (= (* 85 ?x2) 0)) (or (< (+ (* (- 88) ?x2) ?v_5) (- 95)) (<= (+ (* 39 ?x1) (* 99 ?x3)) (- 82)))) (or (and (> (+ (* 76 ?x2) (* 85 ?x3)) (- 21)) (= (+ (+ (* 89 ?x1) (* 20 ?x2)) (* (- 26) ?x3)) 0)) (and (< (+ (+ (* (- 67) ?x1) (* 96 ?x2)) (* (- 14) ?x3)) 0) (<= ?v_8 86))))) (or (and (or (and (> (+ (* (- 84) ?x2) (* 22 ?x3)) 0) (<= (+ (* 35 ?x1) ?v_14) 32)) (or (= (+ ?v_7 (* (- 67) ?x3)) 23) (not (= (+ (+ (* 8 ?x1) ?v_17) (* (- 6) ?x3)) (- 21))))) (and (<= (+ (* 50 ?x1) (* 94 ?x2)) (- 69)) (>= (* (- 53) ?x2) 0))) (or (and (< ?v_6 (- 35)) (= (+ (+ (* 37 ?x1) (* (- 22) ?x2)) (* 89 ?x3)) (- 63))) (< (+ (* 88 ?x2) (* 2 ?x3)) 46))))) (and (and (and (or (or (= (+ (* 58 ?x2) (* (- 76) ?x3)) 51) (<= (+ (+ (* (- 53) ?x1) (* 67 ?x2)) (* 84 ?x3)) 0)) (<= (+ (* (- 62) ?x1) (* (- 95) ?x3)) (- 61))) (or (and (> (+ (+ ?v_13 (* (- 36) ?x2)) (* (- 36) ?x3)) (- 7)) (>= (+ (+ (* 18 ?x1) (* (- 4) ?x2)) ?v_9) (- 56))) (and (not (= (+ (* (- 51) ?x1) (* 52 ?x3)) (- 13))) (not (= (+ (+ (* (- 100) ?x1) (* (- 6) ?x2)) (* 12 ?x3)) (- 73)))))) (or (and (and (= (+ (* (- 46) ?x1) (* (- 39) ?x2)) (- 66)) (< (+ (* (- 18) ?x1) (* (- 56) ?x2)) (- 71))) (and (or (<= (+ (+ (* (- 81) ?x1) (* (- 28) ?x2)) (* (- 11) ?x3)) 8) (< (+ (+ (* 83 ?x1) (* 50 ?x2)) (* 7 ?x3)) 0)) (= (* 41 ?x1) (- 12)))) (and (and (= ?v_15 (- 66)) (< (+ (* (- 26) ?x1) ?v_7) (- 77))) (and (<= (+ (* (- 66) ?x1) ?v_8) 65) (and (>= (+ (* (- 18) ?x2) ?v_9) (- 14)) (<= (+ (* (- 78) ?x1) (* (- 61) ?x2)) 26)))))) (and (and (or (= (+ (+ (* 76 ?x1) (* (- 1) ?x2)) ?v_10) 33) (= (+ (* 56 ?x1) (* (- 68) ?x3)) (- 81))) (or (not (= (+ (+ (* 10 ?x1) (* 9 ?x2)) (* 10 ?x3)) 74)) (>= (+ (+ ?v_11 (* 37 ?x2)) (* 9 ?x3)) (- 95)))) (and (or (and (or (= (+ (* (- 40) ?x1) ?v_12) 11) (<= (* 77 ?x2) (- 16))) (or (>= (+ (+ (* (- 48) ?x1) (* 70 ?x2)) (* (- 17) ?x3)) (- 95)) (< (+ (+ (* (- 58) ?x1) (* 51 ?x2)) (* (- 27) ?x3)) 0))) (and (or (<= (+ (* (- 81) ?x2) (* 59 ?x3)) 80) (= (+ (+ ?v_13 (* 12 ?x2)) (* (- 85) ?x3)) (- 19))) (>= (* (- 35) ?x2) (- 98)))) (or (and (and (<= ?v_14 5) (> (+ (+ ?v_15 (* 11 ?x2)) (* 6 ?x3)) 57)) (and (< (+ (+ (* (- 91) ?x1) ?v_16) (* 90 ?x3)) (- 8)) (> (+ (+ (* 99 ?x1) (* 14 ?x2)) (* (- 35) ?x3)) 0))) (or (and (not (= (+ (+ (* (- 35) ?x1) (* (- 48) ?x2)) (* 91 ?x3)) 21)) (> ?v_17 (- 6))) (< (+ (* (- 20) ?x1) (* (- 49) ?x3)) (- 53)))))))))))))
(check-sat)
(exit)
