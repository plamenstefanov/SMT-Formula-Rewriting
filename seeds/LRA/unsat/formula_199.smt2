(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_199.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x60 4))
(let (($x237 (<= (+ (+ (* 0 |v4:5|) (* 12 |v3:6|)) |v5:4|) ?x60)))
(let ((?x229 (+ (+ (* (- 3) |v4:5|) (* (- 3) |v2:7|)) (* (- 5) |v5:4|))))
(let ((?x121 (- 15)))
(let ((?x221 (+ (+ (* ?x121 |v2:7|) (* (- 19) |v6:3|)) (* (- 6) |v9:0|))))
(let ((?x39 15))
(let (($x216 (<= (+ (+ (* (- 9) |v3:6|) |v5:4|) (* 14 |v1:8|)) ?x39)))
(let ((?x158 13))
(let ((?x207 (+ (+ (* ?x39 |v3:6|) (* (- 13) |v8:1|)) (* 14 |v9:0|))))
(let ((?x52 17))
(let ((?x201 (+ (+ (* 9 |v4:5|) (* (- 14) |v3:6|)) (* 19 |v1:8|))))
(let (($x239 (or (and (and (<= ?x201 ?x52) (<= ?x207 ?x158)) (or $x216 (<= ?x221 ?x121))) (or (<= ?x229 ?x60) $x237))))
(let ((?x116 (- 4)))
(let ((?x192 (+ (+ (* 7 |v4:5|) (* 19 |v2:7|)) (* 16 |v1:8|))))
(let ((?x127 (- 13)))
(let ((?x186 (+ (+ (* 14 |v5:4|) (* 20 |v0:9|)) (* 16 |v4:5|))))
(let ((?x176 (+ (+ (* ?x52 |v1:8|) (* (- 6) |v4:5|)) (* 9 |v1:8|))))
(let ((?x170 (+ (+ (* (- 10) |v4:5|) (* (- 10) |v7:2|)) (* 9 |v3:6|))))
(let (($x195 (and (or (<= ?x170 ?x158) (<= ?x176 ?x60)) (or (<= ?x186 ?x127) (<= ?x192 ?x116)))))
(let ((?x44 (- 14)))
(let ((?x162 (+ (+ (* 6 |v7:2|) (* ?x158 |v3:6|)) (* 14 |v4:5|))))
(let ((?x150 (+ (+ (* 19 |v9:0|) (* (- 2) |v4:5|)) (* ?x116 |v5:4|))))
(let ((?x99 0))
(let ((?x142 (+ (+ (* 11 |v1:8|) (* (- 20) |v1:8|)) (* 2 |v3:6|))))
(let ((?x133 (+ (+ (* 14 |v7:2|) (* ?x127 |v9:0|)) (* 5 |v8:1|))))
(let ((?x120 (+ (+ (* (- 16) |v5:4|) (* ?x116 |v1:8|)) (* (- 20) |v3:6|))))
(let (($x153 (and (and (<= ?x120 ?x121) (<= ?x133 ?x52)) (and (<= ?x142 ?x99) (<= ?x150 (- 1))))))
(let ((?x55 (- 12)))
(let ((?x107 (+ (+ (* 8 |v8:1|) (* (- 3) |v7:2|)) (* (- 10) |v1:8|))))
(let ((?x101 (+ (+ (* (- 3) |v1:8|) (* 20 |v3:6|)) (* ?x99 |v8:1|))))
(let ((?x86 (- 6)))
(let ((?x85 (+ (+ (* (- 20) |v5:4|) (* ?x60 |v7:2|)) (* (- 10) |v3:6|))))
(let ((?x73 (+ (+ (* (- 5) |v4:5|) (* ?x55 |v3:6|)) (* 8 |v7:2|))))
(let (($x110 (or (and (<= ?x73 (- 2)) (<= ?x85 ?x86)) (and (<= ?x101 (- 18)) (<= ?x107 ?x55)))))
(let ((?x18 6))
(let (($x47 (<= (+ (+ (* ?x39 |v6:3|) (* 7 |v6:3|)) (* ?x44 |v9:0|)) ?x18)))
(let ((?x33 (* 8 |v8:1|)))
(let (($x36 (<= (+ (+ (* (- 8) |v5:4|) (* (- 1) |v9:0|)) ?x33) 2)))
(let ((?x21 7))
(let ((?x20 (+ (+ (* (- 19) |v4:5|) (* (- 8) |v4:5|)) (* ?x18 |v8:1|))))
(let (($x64 (or (and (<= ?x20 ?x21) (or $x36 $x47)) (<= (+ (+ (* ?x52 |v8:1|) (* ?x55 |v7:2|)) (* ?x60 |v2:7|)) ?x55))))
(and (and $x64 (or $x110 $x153)) (and (and (<= ?x162 ?x44) $x195) $x239))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

