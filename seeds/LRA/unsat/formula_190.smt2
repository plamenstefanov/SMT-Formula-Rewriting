(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_190.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let (($x278 (<= (+ (+ (* 0 |v5:4|) |v4:5|) (* 15 |v0:9|)) 16)))
(let ((?x131 (- 11)))
(let ((?x272 (+ (+ (* (- 2) |v8:1|) (* 9 |v8:1|)) (* (- 1) |v4:5|))))
(let ((?x265 (+ (+ (* (- 12) |v0:9|) (* 20 |v5:4|)) (* 8 |v5:4|))))
(let ((?x19 12))
(let ((?x259 (+ (+ (* (- 1) |v2:7|) (* 13 |v3:6|)) (* 6 |v9:0|))))
(let (($x280 (or (or (<= ?x259 ?x19) (<= ?x265 16)) (or (<= ?x272 ?x131) $x278))))
(let ((?x250 (+ (+ (* 8 |v1:8|) (* (- 5) |v2:7|)) (* ?x131 |v8:1|))))
(let ((?x162 8))
(let ((?x166 (* ?x162 |v7:2|)))
(let (($x244 (<= (+ (+ (* (- 1) |v9:0|) (* 2 |v4:5|)) ?x166) (- 6))))
(let ((?x54 5))
(let ((?x99 (* (- 10) |v2:7|)))
(let (($x238 (<= (+ (+ (* (- 8) |v9:0|) (* 9 |v7:2|)) ?x99) ?x54)))
(let ((?x75 (- 7)))
(let ((?x61 (* (- 15) |v9:0|)))
(let (($x233 (<= (+ (+ (* 13 |v8:1|) (* 18 |v4:5|)) ?x61) ?x75)))
(let ((?x180 (- 8)))
(let ((?x225 (+ (+ (* 6 |v6:3|) (* (- 12) |v9:0|)) (* 4 |v4:5|))))
(let ((?x219 (+ (+ (* 0 |v0:9|) (* 14 |v2:7|)) (* (- 12) |v5:4|))))
(let ((?x113 13))
(let ((?x178 (* ?x113 |v2:7|)))
(let (($x213 (<= (+ (+ (* (- 15) |v1:8|) (* ?x54 |v3:6|)) ?x178) (- 13))))
(let ((?x94 11))
(let ((?x205 (+ (+ (* 3 |v0:9|) (* ?x113 |v8:1|)) (* 9 |v0:9|))))
(let (($x228 (and (or (<= ?x205 ?x94) $x213) (and (<= ?x219 7) (<= ?x225 ?x180)))))
(let ((?x195 (+ (+ (* (- 6) |v5:4|) (* ?x54 |v5:4|)) (* 7 |v6:3|))))
(let (($x186 (<= (+ (+ ?x178 (* ?x180 |v6:3|)) (* (- 18) |v2:7|)) 18)))
(let ((?x153 (- 12)))
(let ((?x174 (+ (+ (* 0 |v2:7|) (* ?x131 |v4:5|)) (* (- 14) |v0:9|))))
(let (($x176 (and (<= (+ (+ (* ?x162 |v2:7|) (* ?x75 |v4:5|)) ?x166) ?x131) (<= ?x174 ?x153))))
(let (($x282 (and (or (and $x176 (or $x186 (<= ?x195 (- 14)))) $x228) (or (or (or $x233 $x238) (and $x244 (<= ?x250 1))) $x280))))
(let ((?x154 (* ?x153 |v0:9|)))
(let (($x156 (<= (+ (+ (* 4 |v5:4|) (* 10 |v7:2|)) ?x154) ?x54)))
(let ((?x72 6))
(let (($x149 (<= (+ (+ |v8:1| (* (- 20) |v5:4|)) (* (- 20) |v2:7|)) ?x72)))
(let ((?x20 (* ?x19 |v6:3|)))
(let (($x143 (<= (+ (+ (* 17 |v5:4|) (* (- 17) |v8:1|)) ?x20) ?x94)))
(let (($x136 (<= (+ (+ (* (- 16) |v1:8|) (* ?x131 |v5:4|)) (* ?x19 |v0:9|)) ?x131)))
(let ((?x121 (* (- 2) |v8:1|)))
(let (($x124 (<= (+ (+ (* ?x113 |v7:2|) (* 0 |v2:7|)) ?x121) 14)))
(let ((?x44 9))
(let ((?x109 (+ (+ (* (- 17) |v9:0|) (* (- 3) |v2:7|)) (* ?x19 |v5:4|))))
(let ((?x88 (- 17)))
(let (($x89 (<= (+ (+ (* 10 |v6:3|) (* 20 |v3:6|)) |v7:2|) ?x88)))
(let (($x102 (or $x89 (<= (+ (+ (* 2 |v8:1|) (* ?x94 |v4:5|)) ?x99) ?x54))))
(let (($x159 (and (or $x102 (and (<= ?x109 ?x44) $x124)) (and (and $x136 $x143) (and $x149 $x156)))))
(let ((?x74 (+ (+ (* 15 |v1:8|) (* 20 |v2:7|)) (* ?x72 |v1:8|))))
(let (($x77 (and (<= (+ (+ (* ?x54 |v0:9|) (* (- 4) |v4:5|)) ?x61) ?x54) (<= ?x74 ?x75))))
(let ((?x50 (- 1)))
(let ((?x49 (+ (+ (* (- 20) |v0:9|) (* ?x44 |v6:3|)) (* (- 20) |v8:1|))))
(let ((?x35 (+ (+ (* 4 |v2:7|) (* 15 |v5:4|)) (* (- 18) |v4:5|))))
(let (($x23 (<= (+ (+ (* (- 5) |v3:6|) (* 4 |v5:4|)) ?x20) (- 19))))
(let (($x160 (and (and $x23 (or (or (<= ?x35 (- 4)) (<= ?x49 ?x50)) $x77)) $x159)))
(and $x160 $x282))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

