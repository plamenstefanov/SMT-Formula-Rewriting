(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_040.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x10 (- 7)))
(let ((?x231 (+ (+ (* (- 4) |v5:4|) (* (- 9) |v5:4|)) (* 4 |v3:6|))))
(let ((?x20 12))
(let ((?x223 (+ (+ (* (- 6) |v8:1|) (* 11 |v5:4|)) (* (- 2) |v5:4|))))
(let ((?x212 (+ (+ (* 3 |v6:3|) (* 5 |v2:7|)) (* (- 13) |v6:3|))))
(let ((?x69 (- 18)))
(let ((?x206 (+ (+ (* 17 |v3:6|) (* (- 9) |v3:6|)) (* (- 3) |v1:8|))))
(let (($x234 (and (and (<= ?x206 ?x69) (<= ?x212 (- 11))) (and (<= ?x223 ?x20) (<= ?x231 ?x10)))))
(let ((?x128 (- 1)))
(let ((?x196 (+ (+ (* ?x128 |v4:5|) (* (- 9) |v1:8|)) (* 7 |v1:8|))))
(let ((?x190 (+ (+ (* (- 5) |v4:5|) (* (- 10) |v3:6|)) (* (- 17) |v1:8|))))
(let ((?x108 (- 9)))
(let ((?x183 (+ (+ (* ?x10 |v9:0|) (* 8 |v3:6|)) (* 11 |v9:0|))))
(let ((?x177 (+ (+ (* 18 |v8:1|) (* (- 4) |v7:2|)) (* ?x20 |v2:7|))))
(let (($x199 (and (or (<= ?x177 6) (<= ?x183 ?x108)) (and (<= ?x190 20) (<= ?x196 ?x128)))))
(let ((?x44 3))
(let ((?x171 (+ (+ (* 6 |v7:2|) (* 8 |v4:5|)) (* (- 15) |v1:8|))))
(let ((?x145 (- 4)))
(let ((?x157 (+ (+ (* 19 |v6:3|) (* 18 |v7:2|)) (* 19 |v9:0|))))
(let ((?x96 7))
(let (($x152 (<= (+ (+ (* ?x108 |v4:5|) (* ?x145 |v2:7|)) (* 9 |v3:6|)) ?x96)))
(let ((?x139 (+ (+ (* 19 |v1:8|) (* (- 3) |v8:1|)) (* 11 |v4:5|))))
(let (($x142 (or (<= (+ (+ (* ?x69 |v4:5|) (* (- 13) |v3:6|)) |v1:8|) ?x128) (<= ?x139 (- 8)))))
(let ((?x33 (- 13)))
(let ((?x120 (+ (+ (* 10 |v4:5|) (* (- 15) |v5:4|)) (* (- 11) |v2:7|))))
(let ((?x107 (+ (+ (* 18 |v2:7|) (* 13 |v4:5|)) (* ?x10 |v7:2|))))
(let ((?x58 (- 15)))
(let ((?x98 (+ (+ (* 5 |v7:2|) (* (- 10) |v0:9|)) (* ?x96 |v8:1|))))
(let (($x161 (or (and (or (<= ?x98 ?x58) (<= ?x107 ?x108)) (<= ?x120 ?x33)) (or $x142 (or $x152 (<= ?x157 ?x145))))))
(let ((?x81 (+ (+ (* (- 20) |v3:6|) (* (- 19) |v3:6|)) (* (- 5) |v2:7|))))
(let ((?x68 (+ (+ (* ?x58 |v9:0|) (* 15 |v3:6|)) (* (- 17) |v4:5|))))
(let ((?x51 (+ (+ (* 18 |v1:8|) (* ?x44 |v7:2|)) (* 20 |v6:3|))))
(let ((?x35 (+ (+ (* (- 12) |v0:9|) (* 2 |v7:2|)) (* ?x33 |v4:5|))))
(let (($x85 (or (and (<= ?x35 (- 16)) (<= ?x51 (- 20))) (and (<= ?x68 ?x69) (<= ?x81 16)))))
(let ((?x19 (+ (+ (* ?x10 |v0:9|) (* (- 14) |v0:9|)) (* (- 3) |v0:9|))))
(and (or (and (<= ?x19 ?x20) $x85) $x161) (or (<= ?x171 ?x44) (or $x199 $x234)))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

