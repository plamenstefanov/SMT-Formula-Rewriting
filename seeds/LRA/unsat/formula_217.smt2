(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_217.m
(set-info :status unsat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x27 11))
(let ((?x58 17))
(let ((?x104 (* ?x58 |v7:4|)))
(let ((?x299 (+ (+ (* (- 15) |v4:7|) (* 19 |v11:0|)) (* (- 19) |v7:4|))))
(let ((?x288 (+ (+ (* (- 10) |v9:2|) (* 13 |v8:3|)) (* 5 |v4:7|))))
(let (($x302 (and (<= (+ ?x288 (* 5 |v5:6|)) (- 12)) (<= (+ ?x299 ?x104) ?x27))))
(let ((?x277 (+ (+ (* 18 |v11:0|) (* (- 20) |v7:4|)) (* (- 3) |v0:11|))))
(let ((?x157 8))
(let ((?x158 (* ?x157 |v1:10|)))
(let ((?x270 (+ (+ (* (- 20) |v8:3|) (* ?x157 |v3:8|)) (* (- 20) |v1:10|))))
(let (($x281 (and (<= (+ ?x270 ?x158) (- 14)) (<= (+ ?x277 (* 2 |v2:9|)) 7))))
(let ((?x187 0))
(let ((?x260 (+ (+ (* (- 16) |v10:1|) (* (- 7) |v0:11|)) (* (- 8) |v9:2|))))
(let ((?x254 (+ (+ (* (- 11) |v3:8|) (* 13 |v9:2|)) (* ?x58 |v10:1|))))
(let (($x264 (and (<= (+ ?x254 (* (- 19) |v10:1|)) (- 6)) (<= (+ ?x260 (* 3 |v9:2|)) ?x187))))
(let ((?x139 14))
(let ((?x245 (+ (+ (* ?x27 |v6:5|) (* (- 17) |v5:6|)) (* (- 3) |v9:2|))))
(let ((?x115 (- 19)))
(let ((?x237 (+ (+ (* 12 |v3:8|) (* (- 10) |v11:0|)) (* (- 8) |v0:11|))))
(let (($x249 (and (<= (+ ?x237 (* 20 |v5:6|)) ?x115) (<= (+ ?x245 (* 20 |v11:0|)) ?x139))))
(let ((?x53 18))
(let ((?x179 6))
(let ((?x200 (* ?x179 |v10:1|)))
(let ((?x229 (+ (+ (+ (* ?x187 |v6:5|) (* 7 |v3:8|)) ?x200) (* 2 |v6:5|))))
(let ((?x19 (- 17)))
(let ((?x220 (+ (+ (+ (* (- 8) |v3:8|) |v11:0|) (* (- 20) |v9:2|)) (* (- 2) |v0:11|))))
(let ((?x210 (+ (+ (* (- 18) |v1:10|) (* (- 7) |v6:5|)) (* ?x139 |v2:9|))))
(let ((?x84 (- 20)))
(let ((?x89 (- 7)))
(let ((?x203 (* ?x89 |v0:11|)))
(let ((?x204 (+ (+ (+ (* 12 |v1:10|) ?x200) (* 20 |v0:11|)) ?x203)))
(let (($x232 (or (and (<= ?x204 ?x84) (<= (+ ?x210 (* (- 11) |v9:2|)) ?x179)) (or (<= ?x220 ?x19) (<= ?x229 ?x53)))))
(let ((?x196 (+ (+ (+ (* ?x53 |v1:10|) (* ?x139 |v3:8|)) (* (- 8) |v1:10|)) (* ?x179 |v5:6|))))
(let ((?x184 (+ (+ (* ?x179 |v3:8|) (* (- 3) |v8:3|)) (* (- 4) |v6:5|))))
(let ((?x140 (* ?x139 |v11:0|)))
(let ((?x175 (+ (+ (+ (* (- 9) |v7:4|) (* 20 |v0:11|)) ?x140) (* 2 |v10:1|))))
(let (($x198 (and (or (<= ?x175 ?x115) (<= (+ ?x184 (* (- 4) |v8:3|)) ?x187)) (<= ?x196 ?x89))))
(let ((?x165 (+ (+ (+ (* 9 |v1:10|) ?x158) (* (- 4) |v10:1|)) (* ?x53 |v0:11|))))
(let ((?x148 (+ (+ (+ (* 4 |v3:8|) ?x140) (* 10 |v11:0|)) (* ?x84 |v6:5|))))
(let ((?x128 (* (- 16) |v10:1|)))
(let ((?x133 (+ (+ (+ (* ?x115 |v1:10|) (* (- 5) |v8:3|)) ?x128) (* 3 |v0:11|))))
(let ((?x85 (* ?x84 |v2:9|)))
(let ((?x120 (+ (+ (* (- 2) |v9:2|) (* ?x115 |v8:3|)) (* (- 11) |v10:1|))))
(let ((?x110 20))
(let ((?x108 (* (- 10) |v9:2|)))
(let (($x124 (and (<= (+ (+ (+ |v3:8| (* 2 |v3:8|)) ?x104) ?x108) ?x110) (<= (+ ?x120 ?x85) 1))))
(let ((?x96 (+ (+ (+ (* 13 |v2:9|) ?x85) (* ?x89 |v7:4|)) (* 19 |v4:7|))))
(let ((?x77 (- 11)))
(let ((?x75 (* 12 |v3:8|)))
(let ((?x72 (+ (+ (* (- 16) |v1:10|) (* 2 |v1:10|)) (* (- 8) |v8:3|))))
(let ((?x55 (+ (+ (* (- 1) |v3:8|) (* (- 6) |v0:11|)) (* ?x53 |v9:2|))))
(let ((?x37 (+ (+ (* ?x27 |v8:3|) (* (- 2) |v11:0|)) (* (- 5) |v3:8|))))
(let (($x60 (and (<= (+ ?x37 (* (- 13) |v2:9|)) ?x19) (<= (+ ?x55 (* ?x19 |v11:0|)) ?x58))))
(let (($x152 (or (and $x60 (or (<= (+ ?x72 ?x75) ?x77) (<= ?x96 (- 18)))) (and $x124 (or (<= ?x133 ?x27) (<= ?x148 1))))))
(let (($x306 (and (or $x152 (<= ?x165 ?x157)) (and (or $x198 $x232) (and (or $x249 $x264) (and $x281 $x302))))))
(let ((?x21 (+ (+ (* (- 3) |v11:0|) (* (- 1) |v1:10|)) (* ?x19 |v8:3|))))
(or (<= (+ ?x21 |v5:6|) (- 14)) $x306))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

