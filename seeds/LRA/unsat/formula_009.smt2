(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_009.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x74 6))
(let ((?x140 (- 9)))
(let ((?x253 (* ?x140 |v5:4|)))
(let (($x284 (<= (+ (+ (* 0 |v5:4|) (* (- 2) |v1:8|)) ?x253) ?x74)))
(let ((?x31 5))
(let ((?x276 (+ (+ (* 13 |v9:0|) (* 18 |v4:5|)) (* (- 14) |v3:6|))))
(let ((?x188 (- 1)))
(let ((?x269 (+ (+ (* (- 2) |v7:2|) (* (- 8) |v7:2|)) (* (- 6) |v2:7|))))
(let ((?x60 (- 11)))
(let (($x265 (<= (+ (+ (* ?x74 |v0:9|) (* ?x188 |v9:0|)) (* (- 5) |v2:7|)) ?x60)))
(let (($x257 (<= (+ (+ (* 7 |v6:3|) ?x253) (* 15 |v0:9|)) 8)))
(let ((?x19 12))
(let ((?x250 (+ (+ (* (- 5) |v8:1|) (* (- 3) |v9:0|)) (* 14 |v5:4|))))
(let ((?x129 18))
(let ((?x242 (+ (+ (* (- 4) |v8:1|) (* ?x140 |v2:7|)) (* 10 |v8:1|))))
(let ((?x89 19))
(let ((?x237 (+ (+ (* 17 |v1:8|) (* ?x60 |v1:8|)) (* (- 4) |v4:5|))))
(let (($x287 (or (and (or (<= ?x237 ?x89) (<= ?x242 ?x129)) (or (<= ?x250 ?x19) $x257)) (and (or $x265 (<= ?x269 ?x188)) (and (<= ?x276 ?x31) $x284)))))
(let ((?x22 15))
(let ((?x229 (+ (+ (* (- 8) |v0:9|) (* ?x140 |v4:5|)) (* 10 |v5:4|))))
(let ((?x223 (+ (+ (* 7 |v4:5|) (* (- 15) |v9:0|)) (* (- 20) |v5:4|))))
(let ((?x82 20))
(let ((?x215 (+ (+ (* 14 |v6:3|) (* (- 5) |v9:0|)) (* ?x129 |v6:3|))))
(let ((?x207 (+ (+ (* 7 |v3:6|) (* (- 7) |v3:6|)) (* (- 18) |v6:3|))))
(let (($x200 (<= (+ (+ (* 13 |v5:4|) (* ?x31 |v8:1|)) (* ?x82 |v7:2|)) ?x22)))
(let (($x193 (<= (+ (+ (* ?x22 |v3:6|) (* ?x188 |v2:7|)) (* 14 |v2:7|)) 9)))
(let ((?x85 4))
(let ((?x184 (+ (+ (* 10 |v9:0|) (* ?x31 |v3:6|)) (* 13 |v6:3|))))
(let (($x232 (and (and (and (<= ?x184 ?x85) $x193) (and $x200 (<= ?x207 ?x89))) (or (and (<= ?x215 ?x82) (<= ?x223 ?x74)) (<= ?x229 ?x22)))))
(let (($x175 (<= (+ (+ (* 14 |v7:2|) (* ?x31 |v7:2|)) (* ?x22 |v5:4|)) 16)))
(let ((?x36 13))
(let ((?x168 (+ (+ (* 3 |v3:6|) (* (- 2) |v6:3|)) (* 7 |v9:0|))))
(let ((?x160 (+ (+ (* (- 10) |v3:6|) (* (- 2) |v8:1|)) (* ?x74 |v3:6|))))
(let ((?x150 (+ (+ (* 2 |v1:8|) (* (- 4) |v8:1|)) (* (- 14) |v0:9|))))
(let ((?x113 (- 17)))
(let ((?x142 (+ (+ (* 14 |v7:2|) (* 9 |v4:5|)) (* ?x140 |v6:3|))))
(let (($x130 (<= (+ (+ (* ?x22 |v7:2|) (* ?x60 |v7:2|)) (* (- 8) |v7:2|)) ?x129)))
(let ((?x122 (+ (+ (* ?x36 |v8:1|) (* (- 6) |v4:5|)) (* 2 |v9:0|))))
(let (($x153 (and (and (<= ?x122 ?x113) $x130) (or (<= ?x142 ?x113) (<= ?x150 (- 13))))))
(let ((?x104 (+ (+ (* 2 |v2:7|) (* (- 18) |v2:7|)) (* 10 |v4:5|))))
(let (($x115 (or (<= ?x104 (- 10)) (<= (+ (+ (* ?x22 |v7:2|) (* ?x19 |v2:7|)) (* ?x85 |v7:2|)) ?x113))))
(let (($x93 (<= (+ (+ (* ?x82 |v2:7|) (* ?x85 |v4:5|)) (* ?x89 |v6:3|)) 17)))
(let (($x79 (<= (+ (+ (* (- 5) |v8:1|) (* ?x74 |v8:1|)) (* ?x31 |v7:2|)) 8)))
(let ((?x56 (- 6)))
(let ((?x55 (+ (+ (* (- 8) |v0:9|) (* (- 18) |v5:4|)) (* (- 15) |v4:5|))))
(let (($x67 (or (<= ?x55 ?x56) (<= (+ (+ |v9:0| (* ?x60 |v2:7|)) (* ?x22 |v6:3|)) (- 16)))))
(let ((?x39 (- 4)))
(let (($x40 (<= (+ (+ (* 3 |v8:1|) (* ?x31 |v7:2|)) (* ?x36 |v1:8|)) ?x39)))
(let ((?x21 (+ (+ (* (- 13) |v5:4|) (* (- 16) |v9:0|)) (* ?x19 |v3:6|))))
(let (($x179 (or (and (or (or (<= ?x21 ?x22) $x40) $x67) (and (and $x79 $x93) $x115)) (and $x153 (or (<= ?x160 ?x129) (and (<= ?x168 ?x36) $x175))))))
(or $x179 (and $x232 $x287)))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

