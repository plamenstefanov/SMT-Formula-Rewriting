(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_268.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x264 (+ (+ (* 4 |v8:1|) (* (- 3) |v7:2|)) (* 0 |v3:6|))))
(let ((?x14 2))
(let ((?x255 (+ (+ (* 12 |v7:2|) (* (- 4) |v7:2|)) (* 10 |v2:7|))))
(let ((?x184 18))
(let ((?x249 (+ (+ (* 19 |v0:9|) (* (- 8) |v1:8|)) (* (- 20) |v6:3|))))
(let ((?x50 (- 5)))
(let ((?x239 (+ (+ (* (- 13) |v7:2|) (* 14 |v4:5|)) (* (- 6) |v9:0|))))
(let ((?x231 (+ (+ (* 16 |v3:6|) (* (- 1) |v1:8|)) (* (- 4) |v6:3|))))
(let ((?x223 (+ (+ (* 11 |v7:2|) (* (- 1) |v7:2|)) (* (- 17) |v7:2|))))
(let ((?x131 8))
(let (($x219 (<= (+ (+ (* ?x184 |v7:2|) (* 11 |v5:4|)) (* ?x184 |v7:2|)) ?x131)))
(let (($x242 (or (and $x219 (<= ?x223 (- 11))) (and (<= ?x231 9) (<= ?x239 ?x50)))))
(let (($x269 (or $x242 (and (<= ?x249 ?x184) (or (<= ?x255 ?x14) (<= ?x264 1))))))
(let ((?x209 (+ (+ (* 14 |v2:7|) (* (- 10) |v3:6|)) (* 3 |v8:1|))))
(let ((?x67 4))
(let ((?x200 (+ (+ (* (- 18) |v9:0|) (* (- 15) |v2:7|)) (* 5 |v4:5|))))
(let ((?x143 7))
(let (($x194 (<= (+ (+ (* ?x50 |v3:6|) (* ?x143 |v4:5|)) (* (- 18) |v8:1|)) ?x143)))
(let (($x188 (<= (+ (+ (* (- 13) |v2:7|) (* ?x184 |v9:0|)) (* ?x131 |v4:5|)) ?x14)))
(let ((?x179 (* ?x131 |v4:5|)))
(let (($x181 (<= (+ (+ (* (- 7) |v9:0|) (* (- 7) |v6:3|)) ?x179) ?x14)))
(let (($x214 (and $x181 (and (or $x188 $x194) (and (<= ?x200 ?x67) (<= ?x209 (- 16)))))))
(let ((?x19 (- 2)))
(let (($x169 (<= (+ (+ (* ?x143 |v5:4|) (* 11 |v9:0|)) (* ?x50 |v1:8|)) ?x19)))
(let ((?x162 (+ (+ (* (- 14) |v7:2|) (* (- 4) |v1:8|)) (* 10 |v0:9|))))
(let ((?x37 (- 17)))
(let ((?x151 (+ (+ (* 5 |v0:9|) (* 10 |v8:1|)) (* ?x131 |v3:6|))))
(let ((?x45 3))
(let (($x146 (<= (+ (+ (* ?x131 |v0:9|) (* 17 |v7:2|)) (* ?x143 |v6:3|)) ?x45)))
(let (($x136 (<= (+ (+ (* 19 |v7:2|) (* ?x131 |v1:8|)) (* ?x67 |v5:4|)) ?x37)))
(let ((?x118 5))
(let ((?x127 (+ (+ (* ?x118 |v5:4|) (* (- 11) |v5:4|)) (* (- 3) |v2:7|))))
(let (($x114 (<= (+ (+ (* (- 10) |v6:3|) (* ?x37 |v8:1|)) (* ?x19 |v1:8|)) 6)))
(let ((?x22 (- 15)))
(let (($x106 (<= (+ (+ (* ?x19 |v8:1|) (* ?x19 |v7:2|)) (* 20 |v2:7|)) ?x22)))
(let (($x172 (and (and (and $x106 $x114) (and (<= ?x127 ?x118) $x136)) (and (and $x146 (<= ?x151 ?x37)) (or (<= ?x162 ?x50) $x169)))))
(let ((?x98 (+ (+ (* 10 |v4:5|) (* (- 13) |v7:2|)) (* 11 |v2:7|))))
(let ((?x86 (* (- 1) |v7:2|)))
(let (($x89 (<= (+ (+ (* (- 18) |v3:6|) (* 20 |v3:6|)) ?x86) 16)))
(let ((?x77 19))
(let ((?x76 (+ (+ (* ?x67 |v4:5|) (* (- 13) |v0:9|)) (* 12 |v0:9|))))
(let ((?x26 17))
(let ((?x61 (+ (+ (* 6 |v9:0|) (* (- 8) |v7:2|)) (* ?x22 |v0:9|))))
(let (($x63 (or (<= (+ (+ (* ?x26 |v1:8|) (* ?x45 |v6:3|)) (* ?x26 |v6:3|)) ?x50) (<= ?x61 ?x26))))
(let ((?x36 (+ (+ (* ?x26 |v8:1|) (* 20 |v4:5|)) (* 11 |v4:5|))))
(let (($x23 (<= (+ (+ (* (- 18) |v7:2|) (* ?x14 |v9:0|)) (* ?x19 |v8:1|)) ?x22)))
(let (($x101 (and (and (and $x23 (<= ?x36 ?x37)) $x63) (or (or (<= ?x76 ?x77) $x89) (<= ?x98 ?x14)))))
(and (or $x101 $x172) (or $x214 $x269))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

