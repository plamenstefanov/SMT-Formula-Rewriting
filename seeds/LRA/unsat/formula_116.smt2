(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_116.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x169 15))
(let ((?x262 (+ (+ (* (- 18) |v9:0|) (* 3 |v8:1|)) (* ?x169 |v5:4|))))
(let ((?x255 (+ (+ (* (- 19) |v2:7|) (* 8 |v1:8|)) (* (- 16) |v1:8|))))
(let ((?x246 (+ (+ (* (- 14) |v3:6|) (* (- 11) |v3:6|)) (* (- 20) |v0:9|))))
(let ((?x92 (- 9)))
(let ((?x239 (+ (+ (* (- 5) |v5:4|) (* (- 4) |v1:8|)) (* 12 |v0:9|))))
(let ((?x10 (- 19)))
(let ((?x234 (+ (+ (* (- 15) |v9:0|) (* (- 13) |v1:8|)) (* 3 |v2:7|))))
(let ((?x207 17))
(let ((?x227 (+ (+ (* (- 15) |v4:5|) (* (- 1) |v7:2|)) (* 3 |v7:2|))))
(let ((?x98 (- 6)))
(let ((?x222 (+ (+ (* 19 |v4:5|) (* (- 3) |v0:9|)) (* ?x207 |v4:5|))))
(let (($x242 (and (and (<= ?x222 ?x98) (<= ?x227 ?x207)) (or (<= ?x234 ?x10) (<= ?x239 ?x92)))))
(let (($x266 (or $x242 (and (<= ?x246 ?x169) (or (<= ?x255 1) (<= ?x262 ?x169))))))
(let ((?x19 5))
(let ((?x213 (+ (+ (* 3 |v4:5|) (* ?x98 |v1:8|)) (* 16 |v5:4|))))
(let ((?x206 (+ (+ (* (- 13) |v2:7|) (* (- 4) |v7:2|)) (* 14 |v4:5|))))
(let ((?x48 (- 20)))
(let ((?x198 (+ (+ (* ?x92 |v3:6|) (* 2 |v6:3|)) (* 7 |v0:9|))))
(let ((?x112 (- 11)))
(let ((?x192 (* ?x112 |v3:6|)))
(let (($x194 (<= (+ (+ (* (- 13) |v9:0|) (* 2 |v0:9|)) ?x192) ?x19)))
(let ((?x185 (+ (+ (* 19 |v9:0|) (* ?x92 |v4:5|)) (* (- 5) |v1:8|))))
(let ((?x52 16))
(let ((?x179 (+ (+ (* (- 13) |v2:7|) (* (- 3) |v7:2|)) (* (- 18) |v7:2|))))
(let ((?x168 (+ (+ (* ?x112 |v2:7|) (* (- 16) |v2:7|)) (* 19 |v0:9|))))
(let (($x217 (and (and (<= ?x168 ?x169) (or (<= ?x179 ?x52) (<= ?x185 ?x92))) (and (and $x194 (<= ?x198 ?x48)) (and (<= ?x206 ?x207) (<= ?x213 ?x19))))))
(let ((?x35 7))
(let ((?x153 (+ (+ (* (- 17) |v4:5|) (* 10 |v8:1|)) (* 6 |v0:9|))))
(let ((?x62 (- 3)))
(let (($x146 (<= (+ (+ (* 18 |v5:4|) (* 10 |v7:2|)) |v4:5|) ?x62)))
(let ((?x138 (+ (+ (* ?x62 |v5:4|) (* 12 |v3:6|)) (* (- 2) |v3:6|))))
(let ((?x132 (+ (+ (* (- 15) |v2:7|) (* (- 2) |v7:2|)) (* 12 |v5:4|))))
(let (($x156 (and (and (<= ?x132 ?x98) (<= ?x138 11)) (and $x146 (<= ?x153 ?x35)))))
(let ((?x124 (+ (+ (* (- 4) |v7:2|) (* (- 5) |v5:4|)) (* 18 |v7:2|))))
(let ((?x69 (- 14)))
(let (($x117 (<= (+ (+ (* 18 |v9:0|) (* ?x112 |v9:0|)) (* ?x92 |v8:1|)) ?x69)))
(let (($x108 (<= (+ (+ (* ?x10 |v8:1|) (* 2 |v7:2|)) (* ?x98 |v5:4|)) (- 12))))
(let (($x99 (<= (+ (+ (* 10 |v5:4|) (* ?x92 |v3:6|)) (* ?x69 |v8:1|)) ?x98)))
(let ((?x85 10))
(let ((?x84 (+ (+ (* 9 |v4:5|) (* (- 2) |v0:9|)) (* (- 12) |v1:8|))))
(let ((?x68 (+ (+ (* 18 |v4:5|) (* ?x62 |v5:4|)) (* (- 4) |v6:3|))))
(let (($x56 (<= (+ (+ (* (- 15) |v4:5|) (* ?x48 |v9:0|)) (* ?x52 |v0:9|)) (- 8))))
(let ((?x38 12))
(let ((?x37 (+ (+ (* (- 1) |v5:4|) (* 13 |v1:8|)) (* ?x35 |v2:7|))))
(let ((?x22 3))
(let (($x23 (<= (+ (+ (* ?x10 |v5:4|) (* 6 |v6:3|)) (* ?x19 |v0:9|)) ?x22)))
(let (($x87 (and (or (or $x23 (<= ?x37 ?x38)) (and $x56 (<= ?x68 ?x69))) (<= ?x84 ?x85))))
(and (and $x87 (and (or (or $x99 $x108) (and $x117 (<= ?x124 ?x92))) $x156)) (and $x217 $x266)))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

