(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_270.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x109 9))
(let ((?x294 (+ (+ (* 3 |v1:8|) (* (- 20) |v2:7|)) (* 3 |v9:0|))))
(let ((?x288 (+ (+ (* 7 |v3:6|) (* (- 13) |v3:6|)) (* 3 |v7:2|))))
(let ((?x9 5))
(let ((?x120 (* (- 16) |v3:6|)))
(let (($x281 (<= (+ (+ (* 6 |v5:4|) (* (- 15) |v2:7|)) ?x120) ?x9)))
(let ((?x44 (- 18)))
(let ((?x274 (+ (+ (* 0 |v6:3|) (* (- 1) |v4:5|)) (* (- 10) |v7:2|))))
(let (($x297 (or (and (<= ?x274 ?x44) $x281) (and (<= ?x288 1) (<= ?x294 ?x109)))))
(let ((?x267 (+ (+ (* (- 16) |v7:2|) (* 16 |v5:4|)) (* 8 |v9:0|))))
(let (($x269 (and (<= (+ (+ |v3:6| (* ?x9 |v1:8|)) (* ?x9 |v3:6|)) (- 10)) (<= ?x267 17))))
(let ((?x90 (- 4)))
(let ((?x29 14))
(let ((?x30 (* ?x29 |v1:8|)))
(let (($x253 (<= (+ (+ (* 12 |v1:8|) (* (- 19) |v0:9|)) ?x30) ?x90)))
(let ((?x61 2))
(let ((?x247 (+ (+ (* (- 5) |v7:2|) (* 4 |v5:4|)) (* (- 13) |v8:1|))))
(let ((?x238 (+ (+ (* (- 13) |v6:3|) (* ?x9 |v1:8|)) (* 16 |v6:3|))))
(let ((?x127 7))
(let ((?x231 (* (- 20) |v2:7|)))
(let (($x240 (and (<= (+ (+ (* 15 |v1:8|) (* ?x109 |v6:3|)) ?x231) ?x127) (<= ?x238 20))))
(let ((?x223 (+ (+ (* 11 |v8:1|) (* ?x9 |v9:0|)) (* 18 |v1:8|))))
(let ((?x97 (- 11)))
(let ((?x184 (* ?x97 |v1:8|)))
(let (($x225 (and (<= (+ (+ (* ?x29 |v4:5|) (* (- 9) |v1:8|)) ?x184) ?x127) (<= ?x223 ?x9))))
(let ((?x210 (+ (+ (* 4 |v6:3|) (* (- 13) |v9:0|)) (* (- 17) |v3:6|))))
(let ((?x152 (- 17)))
(let ((?x204 (+ (+ (* 0 |v7:2|) (* ?x9 |v1:8|)) (* (- 2) |v9:0|))))
(let ((?x87 15))
(let ((?x160 (* ?x87 |v5:4|)))
(let (($x199 (<= (+ (+ (* 17 |v4:5|) (* 0 |v2:7|)) ?x160) ?x109)))
(let (($x192 (<= (+ (+ ?x184 (* (- 19) |v4:5|)) (* 12 |v6:3|)) (- 8))))
(let (($x242 (and (and (or $x192 $x199) (or (<= ?x204 ?x152) (<= ?x210 ?x9))) (and $x225 $x240))))
(let (($x178 (<= (+ (+ |v0:9| (* ?x44 |v6:3|)) (* 18 |v7:2|)) (- 12))))
(let (($x171 (<= (+ (+ (* ?x29 |v5:4|) (* (- 5) |v8:1|)) (* ?x97 |v3:6|)) ?x61)))
(let ((?x48 3))
(let (($x157 (<= (+ (+ (* (- 15) |v8:1|) (* ?x152 |v7:2|)) (* ?x127 |v5:4|)) ?x48)))
(let (($x166 (or $x157 (<= (+ (+ (* ?x90 |v5:4|) ?x160) (* ?x109 |v4:5|)) 10))))
(let ((?x146 18))
(let ((?x81 0))
(let ((?x134 (* ?x81 |v4:5|)))
(let ((?x33 (- 9)))
(let (($x138 (<= (+ (+ (* (- 2) |v0:9|) ?x134) (* 4 |v9:0|)) ?x33)))
(let (($x148 (or $x138 (<= (+ (+ (* (- 13) |v6:3|) (* ?x44 |v2:7|)) ?x134) ?x146))))
(let (($x131 (<= (+ (+ (* ?x33 |v0:9|) (* ?x127 |v1:8|)) (* (- 2) |v1:8|)) ?x127)))
(let ((?x105 (- 1)))
(let (($x132 (or (<= (+ (+ (* (- 15) |v2:7|) ?x120) (* ?x105 |v4:5|)) ?x105) $x131)))
(let (($x112 (<= (+ (+ (* (- 6) |v6:3|) (* ?x105 |v5:4|)) (* ?x109 |v7:2|)) ?x61)))
(let ((?x101 (+ (+ (* (- 14) |v9:0|) (* ?x97 |v8:1|)) (* (- 3) |v1:8|))))
(let ((?x76 12))
(let ((?x75 (+ (+ (* 20 |v0:9|) (* 13 |v4:5|)) (* (- 15) |v9:0|))))
(let (($x92 (and (<= ?x75 ?x76) (<= (+ (+ (* ?x81 |v7:2|) (* ?x33 |v6:3|)) (* ?x87 |v0:9|)) ?x90))))
(let ((?x60 (+ (+ (* (- 3) |v0:9|) (* (- 3) |v0:9|)) (* (- 6) |v0:9|))))
(let ((?x18 4))
(let (($x51 (<= (+ (+ (* (- 2) |v1:8|) (* ?x44 |v9:0|)) (* ?x48 |v2:7|)) ?x18)))
(let (($x37 (<= (+ (+ (* 13 |v5:4|) ?x30) (* ?x33 |v5:4|)) 11)))
(let (($x21 (<= (+ (+ (* ?x9 |v2:7|) (* (- 5) |v8:1|)) (* ?x18 |v0:9|)) ?x9)))
(let (($x115 (and (and (and $x21 $x37) (and $x51 (<= ?x60 ?x61))) (and $x92 (and (<= ?x101 ?x29) $x112)))))
(and (and $x115 (and (and $x132 $x148) (and $x166 (and $x171 $x178)))) (or $x242 (and (and (and (<= ?x247 ?x61) $x253) $x269) $x297))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

