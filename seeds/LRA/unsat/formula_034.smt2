(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_034.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x151 (+ (+ (* (- 7) |v3:6|) (* 20 |v2:7|)) (* (- 3) |v0:9|))))
(let ((?x11 (- 3)))
(let ((?x144 (+ (+ (* 5 |v4:5|) (* (- 8) |v9:0|)) (* (- 6) |v1:8|))))
(let (($x139 (<= (+ (+ |v2:7| (* 9 |v1:8|)) (* (- 20) |v5:4|)) (- 17))))
(let ((?x128 (+ (+ (* 11 |v0:9|) (* (- 7) |v3:6|)) (* (- 4) |v1:8|))))
(let ((?x28 (- 8)))
(let ((?x122 (+ (+ (* (- 6) |v9:0|) (* 15 |v0:9|)) (* (- 16) |v1:8|))))
(let ((?x109 (+ (+ (* (- 2) |v3:6|) (* 2 |v7:2|)) (* (- 7) |v7:2|))))
(let ((?x99 (+ (+ (* ?x11 |v4:5|) (* 12 |v3:6|)) (* 4 |v7:2|))))
(let (($x131 (and (or (<= ?x99 (- 2)) (<= ?x109 16)) (and (<= ?x122 ?x28) (<= ?x128 (- 14))))))
(let ((?x87 (+ (+ (* 17 |v2:7|) (* (- 4) |v7:2|)) (* 3 |v2:7|))))
(let ((?x75 (+ (+ (* (- 14) |v0:9|) (* 4 |v3:6|)) (* (- 20) |v7:2|))))
(let ((?x59 (+ (+ (* ?x11 |v4:5|) (* 2 |v6:3|)) (* 18 |v6:3|))))
(let ((?x47 (+ (+ (* ?x11 |v3:6|) (* 11 |v3:6|)) (* 6 |v1:8|))))
(let (($x91 (or (or (<= ?x47 13) (<= ?x59 10)) (and (<= ?x75 17) (<= ?x87 (- 17))))))
(let ((?x35 (+ (+ (* (- 19) |v8:1|) (* ?x28 |v6:3|)) (* 20 |v4:5|))))
(let (($x156 (and (or (<= ?x35 7) $x91) (and $x131 (and (and $x139 (<= ?x144 ?x11)) (<= ?x151 1))))))
(let (($x20 (<= (+ (+ |v0:9| (* ?x11 |v3:6|)) (* (- 16) |v2:7|)) 5)))
(and $x20 $x156))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

