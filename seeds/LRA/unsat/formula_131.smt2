(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_131.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x44 (- 6)))
(let ((?x285 (+ (+ (* 17 |v0:9|) (* 9 |v9:0|)) (* 18 |v3:6|))))
(let ((?x73 (- 12)))
(let ((?x279 (+ (+ (* (- 2) |v9:0|) (* (- 20) |v1:8|)) (* ?x44 |v3:6|))))
(let ((?x18 (- 14)))
(let ((?x272 (+ (+ (* 15 |v0:9|) (* 8 |v5:4|)) (* 13 |v7:2|))))
(let ((?x161 (- 8)))
(let ((?x266 (+ (+ (* (- 13) |v6:3|) (* 13 |v0:9|)) (* 7 |v0:9|))))
(let (($x288 (or (and (<= ?x266 ?x161) (<= ?x272 ?x18)) (or (<= ?x279 ?x73) (<= ?x285 ?x44)))))
(let ((?x258 (+ (+ (* (- 5) |v1:8|) (* 11 |v2:7|)) (* (- 16) |v7:2|))))
(let ((?x69 (- 19)))
(let ((?x252 (+ (+ (* 0 |v6:3|) (* (- 7) |v2:7|)) (* 14 |v8:1|))))
(let ((?x138 8))
(let ((?x245 (+ (+ (* 16 |v3:6|) (* (- 4) |v3:6|)) (* 5 |v4:5|))))
(let ((?x66 17))
(let (($x240 (<= (+ (+ (* (- 11) |v7:2|) (* ?x73 |v4:5|)) (* ?x161 |v5:4|)) ?x66)))
(let (($x289 (or (or (and $x240 (<= ?x245 ?x138)) (and (<= ?x252 ?x69) (<= ?x258 ?x18))) $x288)))
(let ((?x232 (+ (+ (* 9 |v0:9|) (* 7 |v8:1|)) (* (- 4) |v4:5|))))
(let ((?x81 15))
(let ((?x223 (+ (+ (* ?x69 |v8:1|) (* (- 1) |v4:5|)) (* 4 |v1:8|))))
(let (($x218 (<= (+ (+ |v1:8| (* 19 |v4:5|)) (* ?x161 |v3:6|)) (- 7))))
(let ((?x151 (- 2)))
(let ((?x197 (* ?x73 |v7:2|)))
(let (($x209 (<= (+ (+ (* 2 |v8:1|) (* 18 |v5:4|)) ?x197) ?x151)))
(let ((?x61 (- 20)))
(let (($x202 (<= (+ (+ ?x197 (* (- 9) |v2:7|)) (* 12 |v3:6|)) ?x61)))
(let ((?x99 13))
(let ((?x194 (+ (+ (* 19 |v9:0|) (* ?x44 |v7:2|)) (* (- 5) |v6:3|))))
(let ((?x34 (- 15)))
(let ((?x186 (+ (+ (* (- 9) |v9:0|) (* ?x34 |v2:7|)) (* (- 13) |v8:1|))))
(let (($x235 (and (and (and (<= ?x186 ?x34) (<= ?x194 ?x99)) (and $x202 $x209)) (and (or $x218 (<= ?x223 ?x81)) (<= ?x232 ?x161)))))
(let ((?x174 (+ (+ (* 14 |v2:7|) (* 3 |v5:4|)) (* (- 11) |v2:7|))))
(let (($x167 (<= (+ (+ (* ?x81 |v5:4|) (* ?x161 |v5:4|)) (* ?x61 |v9:0|)) 11)))
(let ((?x156 19))
(let (($x168 (and (<= (+ (+ |v3:6| (* ?x151 |v3:6|)) (* 5 |v5:4|)) ?x156) $x167)))
(let (($x146 (<= (+ (+ (* ?x138 |v9:0|) (* ?x66 |v1:8|)) (* (- 17) |v4:5|)) ?x138)))
(let ((?x49 (- 10)))
(let ((?x135 (+ (+ (* (- 11) |v9:0|) (* (- 16) |v4:5|)) (* (- 4) |v1:8|))))
(let ((?x119 (- 16)))
(let ((?x118 (+ (+ (* 5 |v6:3|) (* 10 |v5:4|)) (* 18 |v4:5|))))
(let (($x126 (or (<= ?x118 ?x119) (<= (+ (+ (* 18 |v9:0|) |v0:9|) (* ?x66 |v9:0|)) ?x49))))
(let (($x178 (and (and $x126 (or (<= ?x135 ?x49) $x146)) (and $x168 (<= ?x174 1)))))
(let ((?x103 7))
(let ((?x92 (+ (+ (* 0 |v3:6|) (* 5 |v2:7|)) (* (- 3) |v3:6|))))
(let (($x105 (and (<= ?x92 ?x49) (<= (+ (+ (* 20 |v9:0|) (* ?x99 |v3:6|)) |v8:1|) ?x103))))
(let (($x82 (<= (+ (+ (* ?x73 |v9:0|) (* (- 18) |v4:5|)) (* ?x49 |v8:1|)) ?x81)))
(let (($x70 (<= (+ (+ (* 3 |v7:2|) (* ?x61 |v2:7|)) (* ?x66 |v3:6|)) ?x69)))
(let ((?x52 (- 13)))
(let ((?x37 5))
(let ((?x36 (+ (+ (* 12 |v5:4|) (* 4 |v9:0|)) (* ?x34 |v7:2|))))
(let (($x54 (or (<= ?x36 ?x37) (<= (+ (+ (* ?x18 |v2:7|) (* ?x44 |v0:9|)) (* ?x49 |v8:1|)) ?x52))))
(let ((?x20 (+ (+ (* (- 1) |v7:2|) (* 14 |v1:8|)) (* ?x18 |v7:2|))))
(let (($x179 (or (and (and (<= ?x20 16) $x54) (or (and $x70 $x82) $x105)) $x178)))
(and $x179 (or $x235 $x289))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

