(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_263.m
(set-info :status unsat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x70 (- 11)))
(let ((?x362 (+ (+ (* (- 14) |v11:0|) (* 3 |v11:0|)) (* (- 3) |v2:9|))))
(let ((?x119 (- 2)))
(let ((?x114 (* 19 |v8:3|)))
(let ((?x353 (+ (+ (* 17 |v11:0|) (* 20 |v10:1|)) (* 16 |v9:2|))))
(let (($x366 (or (<= (+ ?x353 ?x114) ?x119) (<= (+ ?x362 (* 20 |v4:7|)) ?x70))))
(let ((?x143 8))
(let ((?x345 (+ (+ (* 14 |v4:7|) (* 12 |v1:10|)) (* (- 1) |v7:4|))))
(let ((?x337 (+ (+ (* 6 |v1:10|) (* (- 12) |v3:8|)) (* (- 8) |v4:7|))))
(let (($x349 (and (<= (+ ?x337 (* (- 4) |v11:0|)) ?x70) (<= (+ ?x345 (* 12 |v0:11|)) ?x143))))
(let ((?x245 (- 19)))
(let ((?x327 (+ (+ (* (- 10) |v8:3|) (* (- 18) |v10:1|)) (* ?x245 |v9:2|))))
(let ((?x92 (- 12)))
(let ((?x267 (* ?x92 |v11:0|)))
(let ((?x321 (+ (+ (* 14 |v7:4|) (* 5 |v5:6|)) (* (- 3) |v3:8|))))
(let (($x331 (or (<= (+ ?x321 ?x267) ?x119) (<= (+ ?x327 (* (- 6) |v0:11|)) ?x245))))
(let ((?x109 5))
(let ((?x313 (+ (+ (* 17 |v2:9|) (* ?x245 |v2:9|)) (* 20 |v0:11|))))
(let ((?x105 14))
(let ((?x306 (+ (+ (* 9 |v10:1|) (* 17 |v2:9|)) (* 13 |v6:5|))))
(let (($x317 (and (<= (+ ?x306 (* 13 |v3:8|)) ?x105) (<= (+ ?x313 (* 3 |v5:6|)) ?x109))))
(let ((?x75 20))
(let ((?x298 (+ (+ (+ |v11:0| (* (- 1) |v3:8|)) (* (- 7) |v4:7|)) (* (- 3) |v4:7|))))
(let ((?x289 (+ (+ (* 18 |v2:9|) (* 2 |v4:7|)) (* 9 |v6:5|))))
(let ((?x281 (+ (+ (* (- 9) |v8:3|) (* (- 15) |v1:10|)) (* (- 1) |v0:11|))))
(let ((?x18 (- 20)))
(let ((?x275 (+ (+ (+ ?x267 (* ?x105 |v2:9|)) (* 17 |v5:6|)) (* (- 7) |v2:9|))))
(let (($x301 (or (or (<= ?x275 ?x18) (<= (+ ?x281 (* (- 4) |v8:3|)) ?x92)) (or (<= (+ ?x289 (* 15 |v9:2|)) ?x75) (<= ?x298 ?x75)))))
(let ((?x263 (+ (+ (+ (* ?x105 |v9:2|) (* ?x92 |v10:1|)) (* (- 16) |v6:5|)) (* (- 4) |v0:11|))))
(let ((?x129 16))
(let ((?x253 (+ (+ (* (- 8) |v8:3|) (* ?x119 |v3:8|)) (* 10 |v11:0|))))
(let ((?x37 10))
(let ((?x243 (+ (+ (* ?x143 |v9:2|) (* (- 6) |v11:0|)) (* 13 |v7:4|))))
(let ((?x86 4))
(let ((?x235 (+ (+ (* 11 |v1:10|) (* (- 1) |v6:5|)) (* (- 10) |v3:8|))))
(let (($x249 (and (<= (+ ?x235 (* 15 |v0:11|)) ?x86) (<= (+ ?x243 (* ?x245 |v11:0|)) ?x37))))
(let (($x266 (and $x249 (or (<= (+ ?x253 (* ?x119 |v1:10|)) ?x129) (<= ?x263 (- 13))))))
(let ((?x13 3))
(let ((?x63 9))
(let ((?x220 (* ?x63 |v10:1|)))
(let ((?x223 (+ (+ (+ (* 11 |v0:11|) (* ?x75 |v8:3|)) ?x220) (* (- 1) |v11:0|))))
(let ((?x96 (- 1)))
(let ((?x97 (* ?x96 |v10:1|)))
(let ((?x216 (+ (+ (+ (* (- 15) |v0:11|) (* 2 |v4:7|)) ?x97) (* ?x109 |v11:0|))))
(let ((?x206 (+ (+ (* 13 |v1:10|) (* 2 |v8:3|)) (* (- 4) |v5:6|))))
(let ((?x60 (- 16)))
(let ((?x198 (+ (+ (+ (* ?x75 |v10:1|) (* (- 5) |v0:11|)) (* ?x75 |v7:4|)) (* 12 |v11:0|))))
(let (($x226 (and (and (<= ?x198 ?x60) (<= (+ ?x206 (* (- 9) |v7:4|)) ?x119)) (or (<= ?x216 ?x18) (<= ?x223 ?x13)))))
(let ((?x82 0))
(let ((?x187 (+ (+ (+ (* ?x86 |v11:0|) (* 7 |v6:5|)) (* ?x119 |v2:9|)) (* (- 9) |v9:2|))))
(let ((?x179 15))
(let ((?x174 (+ (+ (* (- 3) |v8:3|) (* ?x105 |v7:4|)) (* 13 |v5:6|))))
(let ((?x161 (+ (+ (+ (* (- 8) |v5:6|) (* ?x70 |v7:4|)) (* ?x18 |v7:4|)) (* ?x92 |v6:5|))))
(let ((?x41 11))
(let ((?x150 (+ (+ (+ (* ?x143 |v6:5|) (* ?x82 |v3:8|)) (* ?x75 |v10:1|)) (* ?x143 |v10:1|))))
(let (($x190 (or (and (<= ?x150 ?x41) (<= ?x161 1)) (and (<= (+ ?x174 (* (- 9) |v6:5|)) ?x179) (<= ?x187 ?x82)))))
(let ((?x136 (+ (+ (+ (* ?x129 |v0:11|) (* 12 |v5:6|)) (* ?x109 |v9:2|)) (* ?x82 |v4:7|))))
(let ((?x125 (+ (+ (+ (* ?x119 |v3:8|) (* (- 4) |v6:5|)) (* ?x86 |v2:9|)) |v6:5|)))
(let ((?x56 12))
(let (($x116 (<= (+ (+ (+ (* ?x63 |v9:2|) (* ?x105 |v0:11|)) (* ?x109 |v0:11|)) ?x114) ?x56)))
(let ((?x98 (+ (+ (+ (* ?x86 |v5:6|) (* 6 |v4:7|)) (* ?x92 |v0:11|)) ?x97)))
(let ((?x81 (+ (+ (+ (* (- 15) |v6:5|) (* ?x70 |v9:2|)) (* ?x75 |v8:3|)) (* (- 6) |v10:1|))))
(let ((?x58 (+ (+ (* 6 |v11:0|) (* (- 18) |v10:1|)) (* ?x56 |v4:7|))))
(let ((?x10 17))
(let ((?x39 (+ (+ (* (- 4) |v10:1|) (* (- 15) |v2:9|)) (* ?x37 |v5:6|))))
(let (($x65 (or (<= (+ ?x39 (* ?x41 |v2:9|)) ?x10) (<= (+ ?x58 (* ?x60 |v10:1|)) ?x63))))
(let (($x141 (and (or $x65 (and (<= ?x81 ?x82) (<= ?x98 7))) (or $x116 (or (<= ?x125 19) (<= ?x136 (- 13)))))))
(let (($x370 (or (and $x141 (or $x190 $x226)) (or (or $x266 $x301) (and (or $x317 $x331) (or $x349 $x366))))))
(let ((?x24 (+ (+ (+ (* ?x10 |v1:10|) (* ?x13 |v7:4|)) (* ?x18 |v9:2|)) (* 18 |v9:2|))))
(and (<= ?x24 ?x13) $x370)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

