(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_271.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x10 4))
(let ((?x102 (- 4)))
(let ((?x204 (* ?x102 |v0:9|)))
(let (($x289 (<= (+ (+ (* (- 13) |v1:8|) (* (- 6) |v0:9|)) ?x204) ?x10)))
(let ((?x282 (+ (+ (* (- 9) |v6:3|) (* 13 |v4:5|)) (* (- 15) |v3:6|))))
(let ((?x11 (* ?x10 |v8:1|)))
(let (($x277 (<= (+ (+ (* 7 |v4:5|) (* (- 18) |v2:7|)) ?x11) (- 19))))
(let ((?x81 1))
(let ((?x271 (+ (+ (* 12 |v5:4|) (* 20 |v3:6|)) (* (- 15) |v2:7|))))
(let ((?x26 (- 8)))
(let ((?x262 (+ (+ (* 9 |v6:3|) (* 13 |v7:2|)) (* 12 |v4:5|))))
(let ((?x255 (+ (+ (* (- 9) |v3:6|) (* (- 20) |v3:6|)) (* (- 16) |v5:4|))))
(let ((?x113 12))
(let ((?x247 (+ (+ (* ?x26 |v7:2|) (* 3 |v4:5|)) (* 19 |v0:9|))))
(let ((?x21 (- 6)))
(let ((?x242 (+ (+ (* 14 |v3:6|) (* 15 |v4:5|)) (* (- 1) |v6:3|))))
(let (($x265 (and (or (<= ?x242 ?x21) (<= ?x247 ?x113)) (and (<= ?x255 (- 19)) (<= ?x262 ?x26)))))
(let (($x292 (or $x265 (or (and (<= ?x271 ?x81) $x277) (or (<= ?x282 11) $x289)))))
(let ((?x42 (- 9)))
(let ((?x234 (+ (+ (* 2 |v7:2|) (* ?x102 |v2:7|)) (* (- 18) |v7:2|))))
(let ((?x227 (+ (+ (* ?x10 |v3:6|) (* 5 |v9:0|)) (* 20 |v5:4|))))
(let ((?x189 15))
(let ((?x110 17))
(let ((?x182 (* ?x110 |v2:7|)))
(let (($x221 (<= (+ (+ (* (- 18) |v1:8|) (* (- 3) |v4:5|)) ?x182) ?x189)))
(let ((?x147 (- 2)))
(let ((?x215 (+ (+ (* (- 11) |v2:7|) (* ?x110 |v3:6|)) (* 9 |v3:6|))))
(let (($x237 (and (or (<= ?x215 ?x147) $x221) (and (<= ?x227 6) (<= ?x234 ?x42)))))
(let ((?x74 14))
(let ((?x34 (- 1)))
(let (($x209 (or (<= (+ (+ (* 3 |v9:0|) |v4:5|) (* ?x113 |v5:4|)) ?x34) (<= (+ (+ (* (- 5) |v3:6|) ?x204) (* ?x147 |v2:7|)) ?x74))))
(let (($x194 (<= (+ (+ (* 5 |v2:7|) (* ?x189 |v7:2|)) (* ?x34 |v2:7|)) ?x34)))
(let ((?x18 (- 3)))
(let (($x186 (<= (+ (+ (* 0 |v1:8|) ?x182) (* 19 |v4:5|)) ?x18)))
(let (($x174 (<= (+ (+ (* ?x26 |v5:4|) (* ?x18 |v7:2|)) (* (- 11) |v1:8|)) ?x10)))
(let (($x175 (and (<= (+ (+ ?x11 (* (- 7) |v5:4|)) (* ?x113 |v2:7|)) ?x34) $x174)))
(let (($x176 (and (<= (+ (+ (* ?x21 |v5:4|) (* ?x74 |v8:1|)) (* ?x102 |v2:7|)) ?x74) $x175)))
(let ((?x46 3))
(let ((?x155 (+ (+ (* 19 |v8:1|) (* 16 |v2:7|)) (* ?x21 |v9:0|))))
(let ((?x146 (+ (+ (* 20 |v4:5|) (* (- 12) |v8:1|)) (* 16 |v5:4|))))
(let (($x137 (<= (+ (+ (* ?x74 |v3:6|) (* ?x26 |v1:8|)) (* ?x46 |v4:5|)) (- 10))))
(let ((?x129 5))
(let (($x138 (and (<= (+ (+ (* 7 |v6:3|) (* ?x21 |v0:9|)) |v3:6|) ?x129) $x137)))
(let (($x120 (<= (+ (+ (* ?x110 |v6:3|) (* ?x113 |v2:7|)) (* 6 |v2:7|)) ?x81)))
(let ((?x107 7))
(let (($x108 (<= (+ (+ (* 10 |v6:3|) (* ?x102 |v1:8|)) (* ?x21 |v2:7|)) ?x107)))
(let ((?x93 (+ (+ (* 16 |v4:5|) (* 9 |v9:0|)) (* (- 12) |v5:4|))))
(let ((?x80 (+ (+ (* (- 17) |v3:6|) (* ?x74 |v6:3|)) (* (- 11) |v0:9|))))
(let ((?x67 9))
(let ((?x66 (+ (+ (* 13 |v3:6|) (* (- 17) |v0:9|)) (* (- 17) |v7:2|))))
(let (($x54 (<= (+ (+ (* ?x42 |v6:3|) (* ?x46 |v2:7|)) (* (- 7) |v4:5|)) (- 20))))
(let (($x37 (<= (+ (+ (* ?x26 |v1:8|) (* 11 |v3:6|)) (* ?x34 |v5:4|)) ?x34)))
(let (($x38 (or (<= (+ (+ ?x11 (* (- 18) |v4:5|)) (* ?x18 |v8:1|)) ?x21) $x37)))
(let (($x123 (or (and $x38 (or $x54 (<= ?x66 ?x67))) (and (or (<= ?x80 ?x81) (<= ?x93 (- 16))) (and $x108 $x120)))))
(and (and $x123 (or (or $x138 (and (<= ?x146 ?x147) (<= ?x155 ?x46))) $x176)) (or (and (and (and $x186 $x194) $x209) $x237) $x292)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

