(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status unsat)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(assert (exists ((?x1 Real)) (forall ((?x2 Real)) (exists ((?x3 Real)) (let ((?v_4 (* 14 ?x1)) (?v_0 (* 20 ?x2)) (?v_5 (* 23 ?x1)) (?v_9 (* 71 ?x2)) (?v_2 (* (- 33) ?x3)) (?v_1 (* (- 24) ?x2)) (?v_3 (* (- 30) ?x2)) (?v_6 (* (- 98) ?x1)) (?v_7 (* (- 60) ?x3)) (?v_8 (* (- 74) ?x2)) (?v_11 (* (- 65) ?x2)) (?v_10 (* (- 42) ?x3))) (and (and (and (and (or (< (+ ?v_4 (* (- 86) ?x2)) 19) (or (>= (+ (+ (* (- 57) ?x1) ?v_0) (* (- 5) ?x3)) (- 80)) (< (+ (+ (* (- 60) ?x1) (* 53 ?x2)) ?v_2) (- 23)))) (or (or (< (+ (* 32 ?x1) ?v_0) (- 50)) (= (+ (+ (* 46 ?x1) (* (- 64) ?x2)) (* (- 4) ?x3)) 50)) (and (< (+ (* 5 ?x2) (* (- 44) ?x3)) (- 86)) (>= (* 28 ?x2) (- 80))))) (and (and (and (not (= (* (- 89) ?x3) 69)) (>= (+ (+ (* (- 52) ?x1) ?v_1) (* 64 ?x3)) (- 98))) (= (+ (* (- 94) ?x1) (* (- 1) ?x3)) 63)) (or (<= (+ (+ (* (- 74) ?x1) ?v_3) (* 8 ?x3)) 0) (not (= (+ (+ (* (- 97) ?x1) ?v_1) (* 36 ?x3)) 15))))) (and (= (+ (* (- 65) ?x1) (* 65 ?x3)) (- 4)) (>= (+ (* 20 ?x1) (* (- 42) ?x2)) (- 92)))) (or (or (or (and (or (<= (+ (+ (* (- 20) ?x1) (* 38 ?x2)) (* (- 61) ?x3)) (- 91)) (>= ?v_2 (- 23))) (or (= ?v_6 0) (<= (+ (* 33 ?x1) (* 35 ?x2)) (- 70)))) (or (and (not (= (+ (* 77 ?x2) (* 98 ?x3)) (- 54))) (= (+ (+ (* (- 18) ?x1) ?v_3) (* 82 ?x3)) (- 25))) (> (+ (+ ?v_5 (* (- 82) ?x2)) (* (- 24) ?x3)) 32))) (and (or (or (= (+ (+ (* (- 17) ?x1) (* (- 17) ?x2)) (* 4 ?x3)) (- 33)) (> (+ (* (- 1) ?x2) (* 53 ?x3)) (- 79))) (or (not (= (+ (* 78 ?x2) (* 25 ?x3)) 53)) (>= (+ (+ (* (- 61) ?x1) (* (- 13) ?x2)) (* 71 ?x3)) (- 41)))) (and (and (and (> (+ (+ ?v_4 (* 58 ?x2)) (* 32 ?x3)) 0) (< (+ (* (- 76) ?x1) (* 32 ?x2)) 0)) (and (>= (* (- 93) ?x2) 79) (<= (+ (+ (* (- 96) ?x1) (* 73 ?x2)) (* (- 53) ?x3)) 14))) (or (and (< (+ ?v_4 (* 76 ?x3)) 40) (<= (* 75 ?x3) 11)) (>= (+ (+ ?v_5 (* (- 10) ?x2)) (* 59 ?x3)) (- 5)))))) (or (and (or (and (or (> (* 3 ?x3) (- 78)) (> (+ ?v_6 (* 6 ?x2)) 0)) (or (< (+ (+ (* (- 80) ?x1) (* 57 ?x2)) ?v_7) (- 68)) (> (* (- 16) ?x1) 27))) (and (or (< (+ (* (- 70) ?x1) (* 74 ?x3)) 97) (<= (* (- 57) ?x3) 5)) (< (+ (+ (* 61 ?x1) ?v_8) (* (- 3) ?x3)) (- 92)))) (or (or (or (> (+ (+ (* (- 78) ?x1) ?v_9) (* 29 ?x3)) (- 21)) (< (+ (+ (* 70 ?x1) (* 59 ?x2)) (* (- 9) ?x3)) (- 11))) (not (= (+ (* 85 ?x1) (* (- 79) ?x2)) (- 25)))) (and (and (< (+ (+ (* (- 31) ?x1) ?v_11) ?v_7) 79) (< (+ (* (- 3) ?x1) ?v_1) 37)) (or (> (+ ?v_8 (* 70 ?x3)) (- 87)) (> (+ (* 7 ?x1) (* (- 2) ?x2)) 0))))) (and (and (and (= (+ (* (- 85) ?x2) ?v_10) 3) (= (+ (* 48 ?x1) (* 56 ?x3)) 51)) (and (< (+ (+ (* (- 27) ?x1) ?v_9) ?v_10) 4) (= (+ (* 92 ?x2) (* 61 ?x3)) (- 69)))) (and (and (> (+ (+ (* (- 87) ?x1) (* (- 40) ?x2)) (* (- 10) ?x3)) 92) (> (+ (* (- 90) ?x2) (* (- 18) ?x3)) (- 79))) (or (<= (+ ?v_5 ?v_11) 0) (> (+ (* (- 71) ?x1) (* 15 ?x3)) 38))))))))))))
(check-sat)
(exit)
