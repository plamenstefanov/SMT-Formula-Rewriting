(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_288.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x60 (- 18)))
(let ((?x260 (+ (+ (* 0 |v4:5|) (* ?x60 |v3:6|)) (* (- 7) |v4:5|))))
(let ((?x110 12))
(let ((?x256 (+ (+ (* 7 |v5:4|) (* 0 |v4:5|)) (* 19 |v5:4|))))
(let ((?x48 (- 1)))
(let ((?x250 (+ (+ (* (- 19) |v4:5|) (* (- 6) |v3:6|)) (* 16 |v0:9|))))
(let ((?x30 (- 12)))
(let ((?x242 (+ (+ (* 19 |v4:5|) (* 11 |v5:4|)) (* 2 |v0:9|))))
(let (($x263 (and (or (<= ?x242 ?x30) (<= ?x250 ?x48)) (and (<= ?x256 ?x110) (<= ?x260 ?x60)))))
(let ((?x51 (- 4)))
(let (($x235 (<= (+ (+ (* ?x51 |v7:2|) (* ?x60 |v2:7|)) (* (- 10) |v8:1|)) ?x51)))
(let ((?x190 17))
(let ((?x229 (+ (+ (* (- 9) |v5:4|) (* ?x48 |v1:8|)) (* (- 3) |v3:6|))))
(let ((?x107 13))
(let ((?x220 (+ (+ (* (- 11) |v8:1|) (* 11 |v4:5|)) (* (- 2) |v1:8|))))
(let ((?x215 (+ (+ (* 20 |v9:0|) (* (- 19) |v2:7|)) (* ?x107 |v7:2|))))
(let (($x264 (and (and (and (<= ?x215 ?x190) (<= ?x220 ?x107)) (or (<= ?x229 ?x190) $x235)) $x263)))
(let ((?x203 (* ?x60 |v3:6|)))
(let (($x205 (<= (+ (+ (* 4 |v5:4|) (* 0 |v4:5|)) ?x203) ?x60)))
(let ((?x57 (* (- 13) |v7:2|)))
(let (($x199 (<= (+ (+ (* 0 |v0:9|) (* 6 |v2:7|)) ?x57) 9)))
(let ((?x189 (+ (+ (* (- 19) |v1:8|) (* (- 3) |v9:0|)) (* (- 14) |v7:2|))))
(let (($x181 (<= (+ (+ |v3:6| (* 14 |v8:1|)) (* 6 |v5:4|)) 14)))
(let ((?x69 6))
(let ((?x70 (* ?x69 |v7:2|)))
(let ((?x72 4))
(let ((?x165 (+ (+ (* (- 2) |v6:3|) (* ?x107 |v4:5|)) (* (- 10) |v3:6|))))
(let (($x172 (or (<= ?x165 ?x72) (<= (+ (+ (* (- 10) |v4:5|) (* ?x30 |v4:5|)) ?x70) ?x30))))
(let (($x158 (<= (+ (+ (* (- 20) |v4:5|) (* (- 11) |v2:7|)) |v3:6|) (- 8))))
(let (($x208 (and (and $x158 $x172) (and (or $x181 (<= ?x189 ?x190)) (and $x199 $x205)))))
(let (($x147 (<= (+ (+ (* ?x72 |v6:3|) (* (- 8) |v0:9|)) (* ?x48 |v9:0|)) (- 17))))
(let ((?x136 (+ (+ (* 11 |v4:5|) (* (- 16) |v9:0|)) (* (- 7) |v6:3|))))
(let ((?x89 (- 11)))
(let ((?x124 (+ (+ (* ?x110 |v0:9|) (* 10 |v0:9|)) (* 19 |v2:7|))))
(let ((?x22 (- 3)))
(let (($x117 (<= (+ (+ (* ?x107 |v3:6|) (* ?x110 |v9:0|)) (* 0 |v1:8|)) ?x22)))
(let ((?x100 (+ (+ (* 5 |v0:9|) (* 18 |v8:1|)) (* 3 |v0:9|))))
(let ((?x88 (+ (+ (* ?x51 |v7:2|) (* 7 |v0:9|)) (* 15 |v0:9|))))
(let (($x80 (<= (+ (+ ?x70 (* ?x72 |v8:1|)) (* 18 |v2:7|)) (- 16))))
(let (($x64 (<= (+ (+ (* 7 |v9:0|) ?x57) (* ?x60 |v0:9|)) 10)))
(let ((?x50 (+ (+ (* 2 |v7:2|) (* (- 15) |v8:1|)) (* ?x48 |v3:6|))))
(let ((?x36 (+ (+ (* 2 |v9:0|) (* ?x30 |v1:8|)) (* (- 10) |v1:8|))))
(let ((?x21 (+ (+ (* (- 5) |v2:7|) (* (- 19) |v0:9|)) (* (- 15) |v9:0|))))
(let (($x66 (or (or (<= ?x21 ?x22) (<= ?x36 (- 13))) (and (<= ?x50 ?x51) $x64))))
(let (($x151 (and (and $x66 (or $x80 (or (<= ?x88 ?x89) (<= ?x100 (- 6))))) (and $x117 (or (<= ?x124 ?x89) (or (<= ?x136 ?x72) $x147))))))
(and $x151 (or $x208 $x264))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

