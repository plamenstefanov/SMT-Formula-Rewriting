(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_204.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x268 (+ (+ (* (- 5) |v0:9|) (* (- 12) |v3:6|)) (* (- 8) |v2:7|))))
(let ((?x47 (- 19)))
(let ((?x59 11))
(let ((?x70 (* ?x59 |v8:1|)))
(let (($x263 (<= (+ (+ (* 19 |v1:8|) (* 7 |v5:4|)) ?x70) ?x47)))
(let (($x256 (<= (+ (+ (* (- 18) |v5:4|) |v1:8|) (* (- 9) |v6:3|)) 9)))
(let ((?x249 (+ (+ (* 9 |v6:3|) (* ?x59 |v7:2|)) (* 12 |v6:3|))))
(let (($x272 (or (and (<= ?x249 (- 18)) $x256) (and $x263 (<= ?x268 (- 20))))))
(let ((?x237 (* 7 |v5:4|)))
(let (($x239 (<= (+ (+ (* (- 5) |v8:1|) (* 14 |v8:1|)) ?x237) (- 4))))
(let ((?x55 (- 3)))
(let ((?x233 (+ (+ (* (- 5) |v3:6|) (* 12 |v2:7|)) (* ?x47 |v7:2|))))
(let ((?x36 0))
(let ((?x226 (+ (+ (* (- 5) |v6:3|) (* 10 |v4:5|)) (* 8 |v6:3|))))
(let ((?x19 5))
(let ((?x220 (+ (+ (* 6 |v2:7|) (* 8 |v1:8|)) (* (- 6) |v6:3|))))
(let (($x273 (and (and (and (<= ?x220 ?x19) (<= ?x226 ?x36)) (or (<= ?x233 ?x55) $x239)) $x272)))
(let ((?x211 (+ (+ (* (- 6) |v4:5|) (* 3 |v5:4|)) (* 13 |v3:6|))))
(let ((?x204 (+ (+ (* (- 16) |v1:8|) (* 12 |v8:1|)) (* 2 |v9:0|))))
(let ((?x165 (- 17)))
(let ((?x197 (+ (+ (* (- 9) |v8:1|) (* 17 |v2:7|)) (* (- 4) |v7:2|))))
(let ((?x14 8))
(let ((?x189 (+ (+ (* 15 |v2:7|) (* ?x165 |v6:3|)) (* (- 8) |v7:2|))))
(let (($x214 (or (or (<= ?x189 ?x14) (<= ?x197 ?x165)) (or (<= ?x204 ?x59) (<= ?x211 (- 14))))))
(let ((?x91 (- 11)))
(let (($x182 (<= (+ (+ (* 4 |v5:4|) (* ?x36 |v1:8|)) (* ?x55 |v0:9|)) ?x91)))
(let ((?x131 15))
(let (($x176 (<= (+ (+ |v6:3| (* (- 1) |v0:9|)) (* 16 |v1:8|)) ?x131)))
(let (($x171 (<= (+ (+ (* ?x165 |v2:7|) (* ?x19 |v4:5|)) (* 3 |v3:6|)) ?x19)))
(let (($x162 (<= (+ (+ (* 4 |v9:0|) |v5:4|) (* 10 |v9:0|)) ?x55)))
(let ((?x44 (- 16)))
(let ((?x152 (+ (+ (* (- 10) |v6:3|) (* (- 1) |v3:6|)) (* 7 |v3:6|))))
(let ((?x52 (- 7)))
(let ((?x145 (+ (+ (* (- 8) |v9:0|) (* (- 5) |v8:1|)) (* (- 12) |v1:8|))))
(let ((?x118 (- 5)))
(let (($x136 (<= (+ (+ (* (- 1) |v0:9|) (* ?x131 |v0:9|)) (* ?x47 |v3:6|)) ?x118)))
(let ((?x112 17))
(let (($x126 (<= (+ (+ (* ?x118 |v0:9|) (* ?x55 |v4:5|)) (* (- 13) |v7:2|)) ?x112)))
(let ((?x111 (+ (+ (* 2 |v6:3|) (* (- 14) |v5:4|)) (* ?x91 |v0:9|))))
(let ((?x98 (* 3 |v5:4|)))
(let (($x101 (<= (+ (+ (* ?x91 |v7:2|) (* 16 |v9:0|)) ?x98) (- 15))))
(let ((?x86 (+ (+ (* (- 10) |v6:3|) (* (- 9) |v5:4|)) (* 10 |v8:1|))))
(let (($x79 (<= (+ (+ ?x70 (* 14 |v5:4|)) (* 6 |v6:3|)) ?x44)))
(let (($x67 (<= (+ (+ (* ?x59 |v5:4|) (* 4 |v7:2|)) (* ?x52 |v3:6|)) ?x59)))
(let (($x68 (and (<= (+ (+ (* ?x44 |v7:2|) (* ?x47 |v0:9|)) (* ?x52 |v4:5|)) ?x55) $x67)))
(let ((?x39 12))
(let ((?x38 (+ (+ (* (- 9) |v1:8|) (* 16 |v0:9|)) (* ?x36 |v6:3|))))
(let (($x23 (<= (+ (+ (* (- 10) |v7:2|) (* ?x14 |v8:1|)) (* ?x19 |v3:6|)) 13)))
(let (($x116 (or (and (and $x23 (<= ?x38 ?x39)) $x68) (or (and $x79 (<= ?x86 ?x19)) (or $x101 (<= ?x111 ?x112))))))
(let (($x157 (and $x116 (and $x126 (and $x136 (and (<= ?x145 ?x52) (<= ?x152 ?x44)))))))
(and $x157 (and (and (or (and $x162 $x171) (and $x176 $x182)) $x214) $x273)))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

