(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_048.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x114 11))
(let ((?x285 (+ (+ (* ?x114 |v1:8|) (* (- 8) |v6:3|)) (* (- 4) |v9:0|))))
(let ((?x241 (- 12)))
(let ((?x280 (+ (+ (* (- 19) |v3:6|) (* (- 1) |v0:9|)) (* 5 |v8:1|))))
(let ((?x42 4))
(let ((?x274 (+ (+ (* (- 8) |v7:2|) (* (- 1) |v0:9|)) (* (- 11) |v8:1|))))
(let ((?x10 10))
(let (($x269 (<= (+ (+ (* 20 |v9:0|) |v5:4|) (* 19 |v7:2|)) ?x10)))
(let ((?x260 (+ (+ (* 8 |v7:2|) (* (- 1) |v1:8|)) (* (- 11) |v5:4|))))
(let ((?x254 (+ (+ (* (- 7) |v3:6|) (* ?x10 |v0:9|)) (* 3 |v7:2|))))
(let ((?x69 (- 7)))
(let (($x246 (<= (+ (+ (* 2 |v6:3|) (* ?x241 |v5:4|)) (* ?x241 |v9:0|)) ?x69)))
(let ((?x236 (+ (+ (* (- 2) |v8:1|) (* (- 8) |v8:1|)) (* 0 |v1:8|))))
(let (($x264 (or (and (<= ?x236 (- 15)) $x246) (or (<= ?x254 ?x114) (<= ?x260 1)))))
(let (($x289 (or $x264 (or (and $x269 (<= ?x274 ?x42)) (or (<= ?x280 ?x241) (<= ?x285 ?x114))))))
(let ((?x83 14))
(let (($x225 (<= (+ (+ (* (- 19) |v2:7|) |v5:4|) (* (- 18) |v8:1|)) ?x83)))
(let ((?x95 (- 5)))
(let ((?x220 (+ (+ (* (- 16) |v7:2|) (* (- 18) |v4:5|)) (* 18 |v7:2|))))
(let ((?x213 (- 11)))
(let ((?x212 (+ (+ (* 0 |v6:3|) (* (- 1) |v5:4|)) (* (- 4) |v1:8|))))
(let ((?x203 (+ (+ (* (- 18) |v3:6|) (* (- 19) |v1:8|)) (* 12 |v8:1|))))
(let (($x227 (and (or (<= ?x203 (- 20)) (<= ?x212 ?x213)) (and (<= ?x220 ?x95) $x225))))
(let ((?x50 (- 10)))
(let ((?x178 (- 13)))
(let ((?x190 (+ (+ (* ?x178 |v4:5|) (* 8 |v7:2|)) (* (- 9) |v1:8|))))
(let (($x197 (and (<= ?x190 ?x178) (<= (+ (+ (* ?x95 |v7:2|) (* 18 |v1:8|)) |v8:1|) ?x50))))
(let ((?x183 (+ (+ (* ?x178 |v2:7|) (* (- 3) |v2:7|)) (* 18 |v6:3|))))
(let ((?x174 (+ (+ (* 15 |v9:0|) (* 6 |v7:2|)) (* 19 |v9:0|))))
(let (($x290 (and (and (and (or (<= ?x174 12) (<= ?x183 ?x178)) $x197) $x227) $x289)))
(let ((?x161 (+ (+ (* ?x50 |v2:7|) (* (- 6) |v9:0|)) (* 9 |v4:5|))))
(let (($x155 (<= (+ (+ |v2:7| (* 18 |v2:7|)) (* 6 |v9:0|)) (- 2))))
(let ((?x146 (- 19)))
(let ((?x147 (* ?x146 |v2:7|)))
(let (($x149 (<= (+ (+ (* (- 4) |v3:6|) (* 15 |v9:0|)) ?x147) ?x146)))
(let ((?x25 8))
(let ((?x138 (+ (+ (* 13 |v8:1|) (* ?x83 |v5:4|)) (* (- 14) |v7:2|))))
(let ((?x129 (- 4)))
(let ((?x128 (+ (+ (* 0 |v9:0|) (* ?x95 |v6:3|)) (* (- 9) |v0:9|))))
(let ((?x39 2))
(let (($x131 (or (<= (+ (+ (* ?x114 |v1:8|) |v8:1|) (* 17 |v6:3|)) ?x39) (<= ?x128 ?x129))))
(let (($x166 (or $x131 (or (or (<= ?x138 ?x25) $x149) (and $x155 (<= ?x161 5))))))
(let ((?x91 18))
(let ((?x108 (+ (+ (* (- 20) |v8:1|) (* 6 |v9:0|)) (* 13 |v2:7|))))
(let (($x99 (<= (+ (+ (* (- 18) |v2:7|) (* ?x91 |v2:7|)) (* ?x95 |v8:1|)) (- 3))))
(let (($x84 (<= (+ (+ (* ?x69 |v2:7|) (* ?x50 |v7:2|)) (* (- 17) |v5:4|)) ?x83)))
(let (($x76 (<= (+ (+ (* ?x69 |v7:2|) (* ?x42 |v8:1|)) (* 17 |v8:1|)) ?x42)))
(let ((?x64 6))
(let ((?x63 (+ (+ (* (- 6) |v5:4|) (* (- 9) |v2:7|)) (* 20 |v7:2|))))
(let (($x51 (<= (+ (+ (* ?x39 |v5:4|) (* ?x42 |v1:8|)) (* (- 16) |v6:3|)) ?x50)))
(let ((?x34 (- 6)))
(let (($x35 (<= (+ (+ (* ?x25 |v5:4|) (* ?x10 |v1:8|)) (* 17 |v5:4|)) ?x34)))
(let ((?x19 (+ (+ (* ?x10 |v9:0|) (* (- 17) |v3:6|)) (* (- 17) |v4:5|))))
(let (($x112 (or (or (and (<= ?x19 9) $x35) (or $x51 (<= ?x63 ?x64))) (or (or $x76 $x84) (and $x99 (<= ?x108 ?x91))))))
(and (or $x112 $x166) $x290))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

