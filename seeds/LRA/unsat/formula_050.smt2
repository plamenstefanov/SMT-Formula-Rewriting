(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_050.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x242 (+ (+ (* (- 14) |v8:1|) (* (- 14) |v8:1|)) (* 19 |v4:5|))))
(let ((?x73 (- 12)))
(let ((?x52 15))
(let ((?x57 (* ?x52 |v8:1|)))
(let (($x244 (and (<= (+ (+ (* (- 15) |v2:7|) (* ?x52 |v3:6|)) ?x57) ?x73) (<= ?x242 9))))
(let ((?x232 (+ (+ (* 17 |v1:8|) (* (- 13) |v6:3|)) (* (- 5) |v5:4|))))
(let ((?x181 0))
(let ((?x228 (+ (+ (* (- 3) |v3:6|) (* (- 7) |v1:8|)) (* 8 |v6:3|))))
(let ((?x22 14))
(let (($x223 (<= (+ (+ (* (- 19) |v9:0|) (* ?x22 |v7:2|)) (* ?x181 |v3:6|)) ?x22)))
(let ((?x214 (+ (+ (* (- 11) |v3:6|) (* (- 7) |v7:2|)) (* (- 13) |v9:0|))))
(let ((?x49 (- 11)))
(let ((?x208 (+ (+ (* (- 5) |v8:1|) (* (- 3) |v4:5|)) (* 7 |v6:3|))))
(let (($x202 (<= (+ (+ (* 5 |v9:0|) (* 7 |v1:8|)) |v2:7|) ?x73)))
(let ((?x88 (- 10)))
(let ((?x60 (- 7)))
(let ((?x128 (* ?x60 |v8:1|)))
(let (($x195 (<= (+ (+ (* 13 |v3:6|) (* 9 |v7:2|)) ?x128) ?x88)))
(let ((?x30 (- 13)))
(let (($x187 (<= (+ (+ (* ?x181 |v2:7|) (* (- 3) |v7:2|)) (* ?x88 |v1:8|)) ?x30)))
(let ((?x178 (+ (+ (* (- 15) |v9:0|) (* (- 3) |v0:9|)) (* 3 |v8:1|))))
(let ((?x168 (+ (+ (* 12 |v5:4|) (* (- 19) |v9:0|)) (* (- 15) |v0:9|))))
(let ((?x160 (+ (+ (* (- 6) |v0:9|) (* (- 19) |v8:1|)) (* 2 |v2:7|))))
(let (($x189 (and (and (<= ?x160 10) (<= ?x168 8)) (and (<= ?x178 ?x73) $x187))))
(let (($x218 (or $x189 (and (or $x195 $x202) (and (<= ?x208 ?x49) (<= ?x214 10))))))
(let (($x247 (and $x218 (and $x223 (and (and (<= ?x228 ?x181) (<= ?x232 2)) $x244)))))
(let (($x148 (<= (+ (+ (* 13 |v1:8|) (* ?x30 |v3:6|)) (* ?x60 |v5:4|)) 1)))
(let ((?x136 (* 11 |v6:3|)))
(let (($x149 (or (<= (+ (+ (* (- 20) |v7:2|) ?x136) ?x136) 19) $x148)))
(let (($x131 (<= (+ (+ (* (- 14) |v5:4|) (* ?x49 |v4:5|)) ?x128) (- 6))))
(let (($x121 (<= (+ (+ (* ?x60 |v6:3|) (* (- 14) |v8:1|)) (* ?x49 |v5:4|)) (- 17))))
(let ((?x113 (+ (+ (* 18 |v3:6|) (* (- 3) |v6:3|)) (* (- 16) |v1:8|))))
(let ((?x95 12))
(let ((?x104 (+ (+ (* ?x95 |v2:7|) (* 7 |v0:9|)) (* (- 17) |v4:5|))))
(let ((?x91 (- 5)))
(let ((?x90 (+ (+ (* (- 20) |v1:8|) (* (- 1) |v0:9|)) (* ?x88 |v3:6|))))
(let (($x151 (and (and (and (<= ?x90 ?x91) (<= ?x104 ?x95)) (and (<= ?x113 ?x22) $x121)) (and $x131 $x149))))
(let ((?x63 (- 15)))
(let (($x75 (and (<= (+ (+ (* 17 |v6:3|) ?x57) (* ?x60 |v9:0|)) ?x63) (<= (+ (+ (* ?x30 |v4:5|) |v1:8|) (* 6 |v5:4|)) ?x73))))
(let ((?x50 (* ?x49 |v5:4|)))
(let (($x53 (<= (+ (+ (* 13 |v7:2|) (* 18 |v8:1|)) ?x50) ?x52)))
(let ((?x38 (- 19)))
(let ((?x37 (+ (+ (* (- 9) |v1:8|) (* ?x30 |v6:3|)) (* (- 3) |v5:4|))))
(let ((?x20 (* 17 |v1:8|)))
(let (($x23 (<= (+ (+ (* 13 |v3:6|) (* (- 8) |v9:0|)) ?x20) ?x22)))
(or (and (or $x23 (and (or (<= ?x37 ?x38) $x53) $x75)) $x151) $x247)))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

