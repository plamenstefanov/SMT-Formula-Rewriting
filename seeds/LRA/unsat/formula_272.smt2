(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_272.m
(set-info :status unsat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x240 (+ (+ (* 15 |v6:5|) (* 17 |v7:4|)) (* (- 4) |v3:8|))))
(let ((?x230 (+ (+ (* 18 |v0:11|) (* (- 9) |v2:9|)) (* 3 |v10:1|))))
(let (($x244 (or (<= (+ ?x230 (* 5 |v11:0|)) 1) (<= (+ ?x240 (* (- 14) |v3:8|)) (- 1)))))
(let ((?x219 (+ (+ (* 13 |v6:5|) (* 9 |v1:10|)) (* (- 13) |v11:0|))))
(let ((?x210 (+ (+ (* (- 18) |v4:7|) (* (- 18) |v8:3|)) (* (- 12) |v5:6|))))
(let (($x224 (or (<= (+ ?x210 (* (- 11) |v11:0|)) 6) (<= (+ ?x219 (* (- 15) |v1:10|)) (- 14)))))
(let ((?x49 19))
(let ((?x198 (+ (+ (* 5 |v0:11|) (* (- 2) |v7:4|)) (* 18 |v5:6|))))
(let ((?x90 (- 7)))
(let ((?x190 (+ (+ (* ?x49 |v9:2|) (* 7 |v7:4|)) (* 10 |v1:10|))))
(let (($x204 (and (<= (+ ?x190 (* (- 16) |v0:11|)) ?x90) (<= (+ ?x198 (* 2 |v8:3|)) ?x49))))
(let ((?x181 (+ (+ (* 10 |v5:6|) (* 5 |v3:8|)) (* 11 |v7:4|))))
(let ((?x173 (+ (+ (* (- 3) |v9:2|) (* (- 9) |v1:10|)) (* 6 |v6:5|))))
(let (($x185 (or (<= (+ ?x173 (* 9 |v3:8|)) (- 16)) (<= (+ ?x181 (* (- 20) |v5:6|)) ?x90))))
(let ((?x165 9))
(let ((?x162 (+ (+ (* (- 20) |v8:3|) (* (- 2) |v11:0|)) (* 14 |v6:5|))))
(let (($x247 (and (<= (+ ?x162 (* (- 19) |v10:1|)) ?x165) (or (or $x185 $x204) (or $x224 $x244)))))
(let ((?x114 10))
(let ((?x146 (+ (+ (* (- 17) |v4:7|) (* (- 20) |v10:1|)) (* 11 |v6:5|))))
(let ((?x45 13))
(let ((?x74 (* (- 6) |v4:7|)))
(let ((?x134 (+ (+ (+ (* (- 19) |v6:5|) (* (- 17) |v10:1|)) ?x74) |v9:2|)))
(let ((?x120 (+ (+ (* (- 10) |v3:8|) (* ?x114 |v5:6|)) (* (- 17) |v7:4|))))
(let ((?x101 (* (- 3) |v9:2|)))
(let ((?x106 (+ (+ (+ (* (- 15) |v11:0|) (* 15 |v8:3|)) ?x101) (* (- 13) |v4:7|))))
(let (($x127 (or (<= ?x106 ?x45) (<= (+ ?x120 (* (- 9) |v5:6|)) (- 1)))))
(let ((?x88 (* 17 |v7:4|)))
(let ((?x85 (+ (+ (* 18 |v8:3|) (* 18 |v9:2|)) (* (- 5) |v1:10|))))
(let ((?x19 (- 11)))
(let ((?x72 (+ (+ (* 4 |v11:0|) (* 8 |v2:9|)) (* 7 |v0:11|))))
(let ((?x59 (+ (+ (+ (* ?x45 |v7:4|) (* ?x49 |v3:8|)) (* (- 6) |v7:4|)) (* 3 |v7:4|))))
(let ((?x24 5))
(let ((?x41 (+ (+ (+ |v11:0| (* (- 12) |v8:3|)) (* (- 15) |v2:9|)) (* 20 |v2:9|))))
(let (($x93 (or (and (<= ?x41 ?x24) (<= ?x59 16)) (or (<= (+ ?x72 ?x74) ?x19) (<= (+ ?x85 ?x88) ?x90)))))
(let (($x152 (and (and $x93 (and $x127 (<= ?x134 ?x45))) (<= (+ ?x146 (* (- 18) |v9:2|)) ?x114))))
(let ((?x27 7))
(let ((?x21 (+ (+ (* (- 19) |v1:10|) (* 18 |v11:0|)) (* ?x19 |v2:9|))))
(and (<= (+ ?x21 (* ?x24 |v7:4|)) ?x27) (and $x152 $x247))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

