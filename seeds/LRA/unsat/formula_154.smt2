(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_154.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x64 (- 6)))
(let ((?x37 (- 12)))
(let ((?x149 (* ?x37 |v6:3|)))
(let (($x273 (<= (+ (+ (* (- 5) |v9:0|) (* (- 19) |v7:2|)) ?x149) ?x64)))
(let ((?x29 19))
(let ((?x30 (* ?x29 |v8:1|)))
(let (($x266 (<= (+ (+ (* (- 11) |v6:3|) (* (- 9) |v8:1|)) ?x30) ?x37)))
(let ((?x54 (- 3)))
(let ((?x260 (+ (+ (* (- 19) |v0:9|) (* 16 |v1:8|)) (* 18 |v3:6|))))
(let ((?x254 (+ (+ (* 18 |v5:4|) (* (- 4) |v9:0|)) (* (- 13) |v2:7|))))
(let ((?x245 (+ (+ (* 11 |v2:7|) (* 15 |v1:8|)) (* 16 |v5:4|))))
(let ((?x92 (- 17)))
(let ((?x238 (+ (+ (* 18 |v4:5|) (* 5 |v3:6|)) (* 17 |v4:5|))))
(let ((?x143 (- 9)))
(let ((?x232 (+ (+ (* 15 |v5:4|) (* (- 14) |v2:7|)) (* 20 |v2:7|))))
(let ((?x223 (+ (+ (* 12 |v9:0|) (* 7 |v3:6|)) (* 13 |v2:7|))))
(let (($x249 (and (or (<= ?x223 (- 15)) (<= ?x232 ?x143)) (and (<= ?x238 ?x92) (<= ?x245 (- 13))))))
(let (($x276 (and $x249 (or (or (<= ?x254 2) (<= ?x260 ?x54)) (and $x266 $x273)))))
(let ((?x213 (+ (+ (* 3 |v2:7|) (* (- 20) |v5:4|)) (* ?x64 |v7:2|))))
(let ((?x153 4))
(let (($x208 (<= (+ (+ (* (- 2) |v6:3|) (* (- 19) |v9:0|)) |v2:7|) ?x153)))
(let ((?x199 15))
(let (($x200 (<= (+ (+ (* ?x153 |v7:2|) (* ?x54 |v3:6|)) (* (- 11) |v1:8|)) ?x199)))
(let ((?x190 (+ (+ (* (- 7) |v5:4|) (* (- 18) |v4:5|)) (* (- 4) |v7:2|))))
(let ((?x179 (+ (+ (* (- 18) |v1:8|) (* 11 |v9:0|)) (* 13 |v8:1|))))
(let ((?x171 (+ (+ (* ?x37 |v0:9|) (* 8 |v3:6|)) (* 16 |v3:6|))))
(let ((?x164 13))
(let ((?x163 (+ (+ (* (- 20) |v7:2|) (* 17 |v6:3|)) (* ?x143 |v6:3|))))
(let (($x166 (or (<= (+ (+ ?x149 (* ?x29 |v2:7|)) (* ?x153 |v8:1|)) (- 7)) (<= ?x163 ?x164))))
(let (($x217 (and (or $x166 (and (<= ?x171 ?x153) (<= ?x179 ?x37))) (or (or (<= ?x190 20) $x200) (or $x208 (<= ?x213 ?x64))))))
(let ((?x142 (+ (+ (* (- 16) |v9:0|) (* (- 1) |v8:1|)) (* 17 |v0:9|))))
(let ((?x128 12))
(let ((?x134 (+ (+ (* 3 |v0:9|) (* ?x128 |v0:9|)) (* 8 |v5:4|))))
(let ((?x76 (- 16)))
(let ((?x124 (+ (+ (* 7 |v8:1|) (* 11 |v8:1|)) (* ?x92 |v8:1|))))
(let ((?x79 (- 20)))
(let ((?x105 (- 11)))
(let ((?x115 (* ?x105 |v6:3|)))
(let ((?x48 18))
(let ((?x110 (* ?x48 |v4:5|)))
(let (($x118 (or (<= (+ (+ (* ?x105 |v9:0|) (* 6 |v7:2|)) ?x110) ?x64) (<= (+ (+ (* ?x54 |v0:9|) (* (- 8) |v7:2|)) ?x115) ?x79))))
(let ((?x104 (+ (+ (* 5 |v9:0|) (* (- 1) |v6:3|)) (* 16 |v0:9|))))
(let ((?x91 (+ (+ (* 3 |v7:2|) (* (- 8) |v4:5|)) (* ?x48 |v1:8|))))
(let (($x146 (and (or (or (<= ?x91 ?x92) (<= ?x104 ?x105)) $x118) (or (or (<= ?x124 ?x76) (<= ?x134 ?x128)) (<= ?x142 ?x143)))))
(let ((?x78 (+ (+ (* 3 |v6:3|) (* 9 |v2:7|)) (* ?x76 |v1:8|))))
(let ((?x62 (* 6 |v7:2|)))
(let (($x81 (or (<= (+ (+ (* ?x54 |v0:9|) (* 5 |v8:1|)) ?x62) ?x64) (<= ?x78 ?x79))))
(let ((?x47 (+ (+ (* (- 2) |v5:4|) (* 7 |v5:4|)) (* ?x29 |v1:8|))))
(let (($x38 (<= (+ (+ (* 17 |v3:6|) ?x30) (* 2 |v2:7|)) ?x37)))
(let ((?x18 11))
(let ((?x20 (+ (+ (* (- 2) |v4:5|) (* (- 10) |v7:2|)) (* ?x18 |v1:8|))))
(and (or (or (<= ?x20 ?x18) (or (or $x38 (<= ?x47 ?x48)) $x81)) $x146) (and $x217 $x276))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

