(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_192.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x240 (+ (+ (* (- 18) |v7:2|) (* 3 |v3:6|)) (* (- 16) |v4:5|))))
(let ((?x231 (+ (+ (* 4 |v1:8|) (* 13 |v8:1|)) (* 10 |v4:5|))))
(let ((?x80 (- 9)))
(let ((?x103 (* (- 19) |v3:6|)))
(let (($x226 (<= (+ (+ (* 3 |v6:3|) (* (- 2) |v1:8|)) ?x103) ?x80)))
(let ((?x219 (+ (+ (* ?x80 |v1:8|) (* (- 1) |v0:9|)) (* 14 |v4:5|))))
(let ((?x71 12))
(let ((?x213 (+ (+ (* 2 |v2:7|) (* (- 1) |v1:8|)) (* (- 18) |v3:6|))))
(let (($x234 (or (or (<= ?x213 ?x71) (<= ?x219 19)) (or $x226 (<= ?x231 0)))))
(let ((?x168 7))
(let ((?x204 (+ (+ (* (- 10) |v9:0|) (* (- 15) |v6:3|)) (* (- 6) |v4:5|))))
(let ((?x198 (+ (+ (* 3 |v5:4|) (* ?x71 |v7:2|)) (* 18 |v0:9|))))
(let ((?x188 (+ (+ (* ?x168 |v2:7|) (* (- 17) |v8:1|)) (* 14 |v0:9|))))
(let (($x182 (<= (+ (+ |v0:9| (* 18 |v7:2|)) (* (- 5) |v7:2|)) (- 11))))
(let (($x207 (or (and $x182 (<= ?x188 13)) (or (<= ?x198 11) (<= ?x204 ?x168)))))
(let ((?x174 (- 18)))
(let ((?x173 (+ (+ (* ?x168 |v8:1|) (* 14 |v1:8|)) (* (- 16) |v2:7|))))
(let ((?x94 (- 17)))
(let ((?x161 (+ (+ (* 11 |v6:3|) (* (- 8) |v4:5|)) (* (- 2) |v0:9|))))
(let ((?x146 (+ (+ (* (- 6) |v6:3|) (* (- 13) |v6:3|)) (* ?x80 |v5:4|))))
(let ((?x18 16))
(let ((?x19 (* ?x18 |v2:7|)))
(let (($x138 (<= (+ (+ (* 4 |v7:2|) (* (- 15) |v9:0|)) ?x19) (- 11))))
(let ((?x128 (+ (+ (* (- 6) |v5:4|) (* ?x71 |v8:1|)) (* 20 |v3:6|))))
(let ((?x120 (+ (+ (* (- 1) |v5:4|) (* (- 14) |v5:4|)) (* 19 |v4:5|))))
(let (($x164 (and (and (<= ?x120 17) (<= ?x128 0)) (or (and $x138 (<= ?x146 6)) (<= ?x161 ?x94)))))
(let ((?x93 (+ (+ (* (- 16) |v1:8|) (* (- 15) |v1:8|)) (* 2 |v1:8|))))
(let (($x107 (or (<= ?x93 ?x94) (<= (+ (+ |v7:2| (* 15 |v3:6|)) ?x103) (- 7)))))
(let ((?x82 (+ (+ (* 4 |v5:4|) (* (- 10) |v3:6|)) (* ?x80 |v9:0|))))
(let ((?x70 (+ (+ (* (- 15) |v3:6|) (* 10 |v3:6|)) (* (- 16) |v5:4|))))
(let (($x58 (<= (+ (+ |v1:8| (* ?x18 |v8:1|)) (* (- 10) |v8:1|)) (- 12))))
(let ((?x52 (- 10)))
(let ((?x51 (+ (+ (* (- 20) |v3:6|) (* ?x18 |v1:8|)) (* (- 1) |v9:0|))))
(let ((?x37 14))
(let ((?x36 (+ (+ (* 18 |v5:4|) (* (- 12) |v8:1|)) (* (- 6) |v1:8|))))
(let ((?x9 20))
(let (($x39 (and (<= (+ (+ (* ?x9 |v6:3|) (* (- 16) |v7:2|)) ?x19) ?x9) (<= ?x36 ?x37))))
(let (($x109 (or (or $x39 (and (<= ?x51 ?x52) $x58)) (and (and (<= ?x70 ?x71) (<= ?x82 8)) $x107))))
(and (and $x109 $x164) (and (and (<= ?x173 ?x174) $x207) (or $x234 (<= ?x240 1)))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

