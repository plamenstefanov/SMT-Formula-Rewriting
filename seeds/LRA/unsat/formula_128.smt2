(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_128.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x190 (- 3)))
(let ((?x54 (- 7)))
(let ((?x241 (* ?x54 |v2:7|)))
(let ((?x237 (- 15)))
(let ((?x258 (+ (+ (* (- 16) |v8:1|) (* (- 17) |v7:2|)) (* 0 |v2:7|))))
(let (($x265 (and (<= ?x258 ?x237) (<= (+ (+ (* 4 |v4:5|) (* ?x190 |v4:5|)) ?x241) ?x190))))
(let ((?x124 (- 12)))
(let ((?x234 (* ?x124 |v1:8|)))
(let (($x252 (<= (+ (+ (* 13 |v1:8|) (* 17 |v0:9|)) ?x234) ?x237)))
(let ((?x129 16))
(let (($x247 (<= (+ (+ ?x241 (* (- 19) |v0:9|)) (* (- 17) |v9:0|)) ?x129)))
(let ((?x132 (- 6)))
(let (($x267 (and (<= (+ (+ (* 19 |v2:7|) ?x234) (* ?x237 |v8:1|)) ?x132) (or (and $x247 $x252) $x265))))
(let ((?x225 (+ (+ (* 18 |v2:7|) (* 3 |v5:4|)) (* 4 |v6:3|))))
(let ((?x214 (+ (+ (* 17 |v3:6|) (* (- 11) |v8:1|)) (* ?x124 |v0:9|))))
(let ((?x34 7))
(let ((?x207 (* (- 19) |v0:9|)))
(let (($x209 (<= (+ (+ (* (- 14) |v4:5|) (* (- 20) |v8:1|)) ?x207) ?x34)))
(let ((?x200 (+ (+ (* (- 1) |v2:7|) (* (- 14) |v5:4|)) (* 20 |v3:6|))))
(let (($x229 (and (and (<= ?x200 ?x34) $x209) (and (<= ?x214 ?x132) (<= ?x225 9)))))
(let ((?x192 (+ (+ (* (- 5) |v0:9|) (* 15 |v1:8|)) (* ?x190 |v9:0|))))
(let ((?x141 (- 5)))
(let (($x185 (<= (+ (+ (* 20 |v0:9|) (* (- 16) |v7:2|)) |v4:5|) ?x141)))
(let ((?x177 (+ (+ (* ?x129 |v0:9|) (* 14 |v3:6|)) (* 10 |v2:7|))))
(let ((?x170 (+ (+ (* (- 14) |v0:9|) (* (- 14) |v7:2|)) (* ?x132 |v0:9|))))
(let (($x195 (and (and (<= ?x170 ?x141) (<= ?x177 (- 11))) (or $x185 (<= ?x192 ?x54)))))
(let ((?x160 (+ (+ (* 12 |v8:1|) (* ?x132 |v9:0|)) (* 14 |v6:3|))))
(let ((?x153 (+ (+ (* (- 16) |v1:8|) (* 3 |v7:2|)) (* 12 |v5:4|))))
(let ((?x143 (+ (+ (* (- 2) |v6:3|) (* 13 |v8:1|)) (* ?x141 |v4:5|))))
(let (($x146 (and (<= (+ (+ (* ?x124 |v8:1|) (* ?x124 |v2:7|)) (* ?x129 |v3:6|)) ?x132) (<= ?x143 (- 19)))))
(let ((?x92 17))
(let ((?x118 (+ (+ (* 6 |v5:4|) (* (- 1) |v9:0|)) (* 0 |v4:5|))))
(let ((?x62 15))
(let (($x112 (<= (+ (+ (* (- 13) |v1:8|) |v5:4|) (* (- 14) |v6:3|)) ?x62)))
(let ((?x10 (- 18)))
(let ((?x103 (+ (+ (* 20 |v7:2|) (* (- 4) |v2:7|)) (* 11 |v5:4|))))
(let ((?x97 (+ (+ (* 3 |v1:8|) (* ?x92 |v3:6|)) (* 20 |v2:7|))))
(let (($x121 (or (and (<= ?x97 (- 9)) (<= ?x103 ?x10)) (and $x112 (<= ?x118 ?x92)))))
(let ((?x22 (- 4)))
(let ((?x29 20))
(let ((?x30 (* ?x29 |v8:1|)))
(let (($x85 (<= (+ (+ (* 6 |v5:4|) (* 11 |v8:1|)) ?x30) ?x22)))
(let ((?x76 (+ (+ (* (- 10) |v0:9|) (* (- 10) |v8:1|)) (* ?x10 |v6:3|))))
(let (($x66 (<= (+ (+ (* ?x54 |v1:8|) (* (- 9) |v3:6|)) (* ?x62 |v4:5|)) 6)))
(let ((?x19 (- 13)))
(let ((?x50 (+ (+ (* (- 8) |v3:6|) (* 10 |v1:8|)) (* ?x22 |v0:9|))))
(let (($x38 (<= (+ (+ (* (- 1) |v7:2|) ?x30) (* ?x34 |v0:9|)) (- 2))))
(let (($x23 (<= (+ (+ (* ?x10 |v9:0|) (* 12 |v8:1|)) (* ?x19 |v7:2|)) ?x22)))
(let (($x87 (or (and (and $x23 $x38) (and (<= ?x50 ?x19) $x66)) (or (<= ?x76 ?x10) $x85))))
(and (and $x87 (or $x121 (and $x146 (and (<= ?x153 ?x124) (<= ?x160 ?x54))))) (and (or $x195 $x229) $x267))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

