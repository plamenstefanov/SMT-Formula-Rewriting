(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_150.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x171 (+ (+ (* 3 |v1:8|) (* 5 |v7:2|)) (* 16 |v7:2|))))
(let (($x163 (<= (+ (+ (* 5 |v7:2|) |v2:7|) (* 17 |v9:0|)) (- 11))))
(let ((?x43 12))
(let ((?x157 (+ (+ (* (- 18) |v5:4|) (* (- 3) |v4:5|)) (* 11 |v6:3|))))
(let ((?x146 (+ (+ (* (- 5) |v1:8|) (* ?x43 |v8:1|)) (* (- 18) |v3:6|))))
(let ((?x137 (+ (+ (* 8 |v5:4|) (* (- 12) |v2:7|)) (* 13 |v5:4|))))
(let ((?x127 (+ (+ (* (- 11) |v9:0|) (* 18 |v6:3|)) (* (- 1) |v8:1|))))
(let ((?x119 (+ (+ (* 5 |v3:6|) (* 10 |v5:4|)) (* 7 |v4:5|))))
(let (($x140 (or (and (<= ?x119 16) (<= ?x127 20)) (<= ?x137 (- 13)))))
(let ((?x91 (- 18)))
(let ((?x107 (+ (+ (* (- 12) |v7:2|) (* 13 |v4:5|)) (* 20 |v5:4|))))
(let ((?x73 2))
(let ((?x47 (* 9 |v0:9|)))
(let (($x100 (<= (+ (+ (* 9 |v4:5|) (* 4 |v6:3|)) ?x47) ?x73)))
(let ((?x90 (+ (+ (* 5 |v2:7|) (* (- 12) |v4:5|)) (* ?x43 |v1:8|))))
(let (($x82 (<= (+ (+ (* ?x73 |v8:1|) (* ?x73 |v6:3|)) (* (- 8) |v2:7|)) 17)))
(let ((?x14 (- 1)))
(let ((?x65 (* (- 11) |v9:0|)))
(let (($x67 (<= (+ (+ (* 13 |v4:5|) (* (- 5) |v4:5|)) ?x65) ?x14)))
(let (($x55 (<= (+ (+ (* ?x43 |v5:4|) ?x47) (* (- 9) |v9:0|)) (- 8))))
(let ((?x37 (+ (+ (* 7 |v3:6|) (* (- 16) |v5:4|)) (* (- 17) |v4:5|))))
(let ((?x21 5))
(let ((?x20 (+ (+ (* 19 |v1:8|) (* ?x14 |v0:9|)) (* (- 20) |v0:9|))))
(let (($x111 (or (or (and (<= ?x20 ?x21) (<= ?x37 (- 14))) (and $x55 $x67)) (or (or $x82 (<= ?x90 ?x91)) (or $x100 (<= ?x107 ?x91))))))
(let (($x167 (and $x111 (or $x140 (or (<= ?x146 3) (and (<= ?x157 ?x43) $x163))))))
(and $x167 (<= ?x171 (- 16)))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

