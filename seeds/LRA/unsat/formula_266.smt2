(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_266.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x114 (- 12)))
(let (($x266 (<= (+ (+ (* 5 |v7:2|) (* (- 6) |v7:2|)) |v5:4|) ?x114)))
(let ((?x32 16))
(let ((?x54 (* 18 |v6:3|)))
(let (($x261 (<= (+ (+ (* 20 |v3:6|) (* (- 6) |v0:9|)) ?x54) ?x32)))
(let ((?x255 (+ (+ (* 17 |v5:4|) (* (- 1) |v7:2|)) (* (- 18) |v4:5|))))
(let ((?x138 (* 7 |v8:1|)))
(let (($x248 (<= (+ (+ (* 5 |v5:4|) (* (- 15) |v1:8|)) ?x138) 1)))
(let ((?x89 2))
(let ((?x239 (+ (+ (* 12 |v7:2|) (* (- 5) |v8:1|)) (* (- 16) |v7:2|))))
(let ((?x232 (* 20 |v3:6|)))
(let (($x234 (<= (+ (+ (* (- 6) |v1:8|) (* (- 7) |v2:7|)) ?x232) (- 4))))
(let (($x223 (<= (+ (+ (* ?x114 |v1:8|) |v5:4|) (* (- 13) |v9:0|)) (- 4))))
(let ((?x19 (- 14)))
(let ((?x215 (+ (+ (* 4 |v5:4|) (* (- 15) |v4:5|)) (* 15 |v7:2|))))
(let (($x269 (and (or (and (<= ?x215 ?x19) $x223) (or $x234 (<= ?x239 ?x89))) (and (or $x248 (<= ?x255 9)) (and $x261 $x266)))))
(let ((?x205 (+ (+ (* ?x114 |v0:9|) (* 0 |v0:9|)) (* 11 |v8:1|))))
(let ((?x103 15))
(let ((?x166 (* ?x89 |v1:8|)))
(let (($x200 (<= (+ (+ (* 17 |v7:2|) (* 11 |v1:8|)) ?x166) ?x103)))
(let ((?x67 14))
(let ((?x68 (* ?x67 |v7:2|)))
(let (($x195 (<= (+ (+ (* 5 |v1:8|) (* 10 |v0:9|)) ?x68) (- 20))))
(let ((?x10 (- 19)))
(let ((?x189 (* 12 |v7:2|)))
(let (($x191 (<= (+ (+ (* 7 |v1:8|) (* (- 5) |v8:1|)) ?x189) ?x10)))
(let ((?x182 (+ (+ (* (- 5) |v3:6|) (* ?x32 |v2:7|)) (* (- 15) |v5:4|))))
(let (($x210 (or (<= ?x182 (- 20)) (and (or $x191 $x195) (and $x200 (<= ?x205 (- 1)))))))
(let ((?x14 (- 5)))
(let (($x172 (<= (+ (+ (* 13 |v4:5|) ?x166) (* 9 |v8:1|)) ?x14)))
(let ((?x161 (+ (+ (* (- 8) |v8:1|) (* 8 |v9:0|)) (* (- 15) |v8:1|))))
(let ((?x125 8))
(let (($x157 (<= (+ (+ (* (- 15) |v6:3|) (* ?x89 |v6:3|)) (* ?x103 |v9:0|)) ?x125)))
(let ((?x147 (+ (+ (* 10 |v0:9|) (* ?x114 |v0:9|)) (* 11 |v7:2|))))
(let (($x149 (or (<= (+ (+ (* 3 |v0:9|) (* ?x10 |v3:6|)) ?x138) ?x67) (<= ?x147 18))))
(let ((?x127 (+ (+ (* (- 15) |v1:8|) (* 10 |v1:8|)) (* ?x125 |v5:4|))))
(let ((?x106 (* (- 8) |v7:2|)))
(let (($x129 (and (<= (+ (+ (* (- 3) |v3:6|) (* ?x114 |v4:5|)) ?x106) ?x67) (<= ?x127 ?x19))))
(let ((?x96 (+ (+ (* ?x89 |v5:4|) (* (- 17) |v6:3|)) (* (- 15) |v7:2|))))
(let (($x109 (or (<= ?x96 (- 2)) (<= (+ (+ (* (- 3) |v4:5|) (* ?x103 |v5:4|)) ?x106) ?x19))))
(let ((?x22 (- 10)))
(let ((?x84 (* ?x14 |v8:1|)))
(let (($x86 (<= (+ (+ (* 17 |v7:2|) (* 4 |v2:7|)) ?x84) ?x22)))
(let (($x78 (<= (+ (+ ?x68 (* 4 |v3:6|)) (* (- 13) |v5:4|)) (- 17))))
(let (($x62 (<= (+ (+ ?x54 (* (- 11) |v5:4|)) (* 0 |v5:4|)) (- 7))))
(let ((?x49 0))
(let ((?x48 (+ (+ (* ?x10 |v7:2|) (* 5 |v6:3|)) (* (- 2) |v6:3|))))
(let (($x35 (<= (+ (+ (* ?x19 |v5:4|) (* (- 8) |v8:1|)) (* ?x32 |v1:8|)) ?x22)))
(let (($x36 (and (<= (+ (+ (* ?x10 |v2:7|) (* ?x14 |v5:4|)) (* ?x19 |v3:6|)) ?x22) $x35)))
(let (($x176 (or (or (and $x36 (or (<= ?x48 ?x49) $x62)) (and (and $x78 $x86) $x109)) (or (or $x129 $x149) (and $x157 (or (<= ?x161 ?x67) $x172))))))
(and $x176 (and $x210 $x269)))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

