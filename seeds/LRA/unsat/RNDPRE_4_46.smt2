(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status unsat)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(assert (forall ((?x1 Real)) (exists ((?x2 Real)) (forall ((?x3 Real)) (exists ((?x4 Real)) (let ((?v_0 (* 73 ?x2)) (?v_16 (* 42 ?x1)) (?v_15 (* 5 ?x3)) (?v_11 (* 92 ?x4)) (?v_13 (* 25 ?x1)) (?v_12 (* 82 ?x3)) (?v_4 (* 66 ?x1)) (?v_3 (* 55 ?x3)) (?v_2 (* (- 33) ?x4)) (?v_6 (* (- 23) ?x3)) (?v_19 (* (- 48) ?x2)) (?v_8 (* (- 5) ?x3)) (?v_17 (* (- 69) ?x3)) (?v_1 (* (- 84) ?x2)) (?v_10 (* (- 68) ?x2)) (?v_14 (* (- 40) ?x2)) (?v_7 (* (- 26) ?x1)) (?v_18 (* (- 13) ?x1)) (?v_5 (* (- 59) ?x2)) (?v_9 (* (- 8) ?x1))) (and (or (and (or (and (< (+ (+ (* (- 64) ?x1) (* (- 73) ?x3)) ?v_2) 94) (= (+ (+ (* 75 ?x1) (* 94 ?x2)) (* 58 ?x4)) 87)) (and (< (+ (+ (* (- 12) ?x1) (* 8 ?x2)) (* 93 ?x3)) 49) (not (= (+ (* 2 ?x3) (* (- 78) ?x4)) 68)))) (or (or (>= (+ ?v_6 (* (- 44) ?x4)) (- 14)) (< (+ (* 77 ?x1) ?v_0) (- 2))) (or (= (+ (+ ?v_16 ?v_19) (* 82 ?x4)) (- 63)) (< (+ (* (- 36) ?x1) (* (- 48) ?x3)) (- 5))))) (and (or (and (and (<= (+ (+ (* 93 ?x1) (* 18 ?x3)) (* (- 14) ?x4)) 14) (>= (+ (* (- 27) ?x2) ?v_8) (- 35))) (or (< (+ (* 50 ?x1) (* 10 ?x2)) (- 35)) (= (+ (+ (* 1 ?x1) (* 74 ?x2)) (* 74 ?x3)) 0))) (or (> (+ (+ (* 99 ?x1) (* (- 35) ?x3)) (* 12 ?x4)) 83) (>= (+ (+ (+ (* (- 1) ?x1) (* (- 81) ?x2)) ?v_15) (* (- 97) ?x4)) 0))) (and (and (>= (+ (* (- 39) ?x2) (* (- 28) ?x3)) 88) (>= (+ (+ (+ (* (- 9) ?x1) (* (- 17) ?x2)) ?v_17) (* (- 68) ?x4)) 73)) (or (>= (+ (+ (* (- 80) ?x1) (* (- 30) ?x2)) (* 95 ?x3)) 0) (>= (* (- 42) ?x4) 0))))) (and (and (or (or (or (or (not (= (+ (+ (* 36 ?x2) (* 28 ?x3)) (* 69 ?x4)) (- 31))) (>= (+ (+ (* 5 ?x1) (* (- 32) ?x3)) (* 7 ?x4)) (- 95))) (or (> (+ (+ (+ (* (- 24) ?x1) ?v_0) (* (- 100) ?x3)) (* 51 ?x4)) (- 55)) (> (+ (+ (* 95 ?x2) (* (- 2) ?x3)) (* 16 ?x4)) 68))) (or (or (= (+ (* (- 9) ?x3) ?v_11) (- 96)) (= (+ ?v_1 (* (- 6) ?x4)) (- 96))) (or (not (= (+ (+ (+ (* (- 99) ?x1) ?v_10) (* (- 51) ?x3)) (* (- 65) ?x4)) (- 70))) (>= (+ (+ ?v_14 (* 96 ?x3)) (* 30 ?x4)) 0)))) (or (< (+ (+ (* 6 ?x1) (* (- 58) ?x2)) (* (- 75) ?x4)) 31) (>= (+ ?v_7 (* 97 ?x3)) 67))) (and (and (and (and (= (+ (+ (+ ?v_13 (* 33 ?x2)) ?v_12) (* (- 94) ?x4)) (- 21)) (> (+ (* 21 ?x1) (* 14 ?x4)) 32)) (and (<= (+ (+ ?v_18 ?v_1) (* 3 ?x4)) (- 54)) (>= (+ (+ (* (- 3) ?x1) (* (- 72) ?x2)) (* (- 82) ?x3)) 40))) (or (< (+ (+ (+ ?v_4 (* 14 ?x2)) (* (- 24) ?x3)) (* 88 ?x4)) (- 23)) (<= (+ (+ (* (- 56) ?x1) (* (- 26) ?x3)) ?v_2) 44))) (and (and (or (= (+ (+ (+ (* (- 34) ?x1) (* (- 19) ?x2)) (* (- 15) ?x3)) (* (- 99) ?x4)) 81) (not (= (+ (+ (* (- 69) ?x1) (* (- 22) ?x3)) (* 19 ?x4)) 0))) (or (= (+ (+ (+ (* 51 ?x1) (* (- 83) ?x2)) (* 94 ?x3)) (* 75 ?x4)) 63) (> (+ (* 54 ?x1) (* (- 83) ?x3)) (- 76)))) (or (< (+ (+ (+ (* 2 ?x1) (* (- 64) ?x2)) ?v_3) (* 68 ?x4)) 0) (>= (+ (+ (+ (* 28 ?x1) ?v_5) ?v_3) (* 33 ?x4)) (- 20)))))) (and (or (and (or (and (<= (+ (+ ?v_4 (* (- 75) ?x2)) (* (- 34) ?x3)) 0) (>= (+ (+ (* 46 ?x1) (* (- 38) ?x3)) (* (- 8) ?x4)) 0)) (or (not (= (+ (+ (* 3 ?x1) ?v_5) (* (- 97) ?x3)) 0)) (= (+ (+ (+ ?v_9 (* 97 ?x2)) ?v_6) (* (- 2) ?x4)) (- 90)))) (or (> (+ (+ (* (- 49) ?x1) (* (- 1) ?x3)) (* (- 58) ?x4)) 0) (< (+ ?v_7 (* (- 40) ?x4)) 0))) (or (and (or (= (+ (+ (* 34 ?x2) ?v_8) (* 73 ?x4)) 69) (not (= (+ (* 98 ?x2) (* 53 ?x4)) 0))) (or (not (= (+ (+ (* (- 26) ?x2) (* 80 ?x3)) (* (- 25) ?x4)) 71)) (= (+ (+ (+ (* 96 ?x1) (* 40 ?x2)) (* 19 ?x3)) (* (- 10) ?x4)) 0))) (and (>= (+ (+ (+ ?v_9 ?v_10) (* (- 60) ?x3)) ?v_11) (- 8)) (and (> (+ (+ (* (- 52) ?x2) ?v_12) (* 63 ?x4)) 89) (not (= (+ (+ (* 90 ?x1) (* 52 ?x2)) (* (- 60) ?x4)) 86)))))) (or (or (and (or (< (+ (+ (+ ?v_13 (* 20 ?x2)) (* (- 96) ?x3)) (* 86 ?x4)) 28) (>= (+ (* 26 ?x1) (* (- 12) ?x2)) 88)) (>= (+ (+ (* (- 45) ?x1) ?v_14) (* 68 ?x3)) (- 35))) (or (<= (+ (+ (+ (* 43 ?x1) (* 17 ?x2)) ?v_15) (* 95 ?x4)) 0) (>= (+ (+ (* 70 ?x1) (* 69 ?x2)) (* 48 ?x3)) 0))) (and (or (and (< (+ (+ ?v_16 (* (- 36) ?x2)) (* 26 ?x4)) (- 53)) (<= (+ (+ (* 30 ?x1) ?v_17) (* 4 ?x4)) (- 48))) (and (> (+ ?v_18 (* (- 8) ?x3)) (- 16)) (< (* (- 21) ?x3) 67))) (or (<= (+ (* 21 ?x2) (* (- 1) ?x4)) (- 4)) (= (+ (+ (+ (* 81 ?x1) ?v_19) (* 86 ?x3)) (* 56 ?x4)) 0)))))))))))))
(check-sat)
(exit)
