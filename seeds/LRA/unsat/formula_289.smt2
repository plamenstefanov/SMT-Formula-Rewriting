(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_289.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x22 (- 19)))
(let ((?x19 (- 14)))
(let ((?x78 (* ?x19 |v9:0|)))
(let (($x280 (<= (+ (+ (* (- 2) |v5:4|) (* 19 |v9:0|)) ?x78) ?x22)))
(let ((?x275 (+ (+ (* 6 |v5:4|) (* (- 16) |v1:8|)) (* 3 |v8:1|))))
(let ((?x89 18))
(let ((?x268 (+ (+ (* 10 |v1:8|) (* (- 15) |v4:5|)) (* (- 17) |v2:7|))))
(let ((?x121 8))
(let ((?x75 5))
(let ((?x184 (* ?x75 |v3:6|)))
(let (($x263 (<= (+ (+ (* (- 16) |v7:2|) (* (- 2) |v4:5|)) ?x184) ?x121)))
(let ((?x255 (+ (+ (* (- 20) |v7:2|) (* (- 12) |v6:3|)) (* 7 |v0:9|))))
(let ((?x243 (+ (+ (* 2 |v3:6|) (* 15 |v0:9|)) (* 2 |v5:4|))))
(let ((?x47 (- 12)))
(let ((?x235 (+ (+ (* (- 3) |v0:9|) (* 15 |v9:0|)) (* (- 6) |v5:4|))))
(let (($x283 (or (and (and (<= ?x235 ?x47) (<= ?x243 ?x89)) (<= ?x255 13)) (or (or $x263 (<= ?x268 ?x89)) (and (<= ?x275 13) $x280)))))
(let ((?x209 3))
(let ((?x29 (* (- 8) |v3:6|)))
(let (($x227 (<= (+ (+ (* 17 |v6:3|) (* 6 |v0:9|)) ?x29) ?x209)))
(let (($x222 (<= (+ (+ (* ?x75 |v9:0|) (* ?x75 |v9:0|)) (* (- 9) |v4:5|)) ?x89)))
(let ((?x39 12))
(let (($x214 (<= (+ (+ (* (- 1) |v2:7|) (* ?x209 |v1:8|)) (* ?x19 |v8:1|)) ?x39)))
(let ((?x202 (+ (+ (* (- 16) |v9:0|) (* ?x22 |v9:0|)) (* (- 5) |v0:9|))))
(let ((?x193 (* ?x22 |v9:0|)))
(let (($x195 (<= (+ (+ (* 14 |v4:5|) (* (- 15) |v7:2|)) ?x193) ?x19)))
(let (($x189 (<= (+ (+ (* 6 |v1:8|) ?x184) (* ?x121 |v6:3|)) 1)))
(let ((?x171 (- 18)))
(let (($x180 (<= (+ (+ (* (- 2) |v7:2|) (* ?x171 |v6:3|)) (* ?x22 |v0:9|)) ?x171)))
(let (($x174 (<= (+ (+ |v7:2| (* 6 |v2:7|)) (* ?x171 |v8:1|)) (- 7))))
(let (($x230 (or (and (and $x174 $x180) (and $x189 $x195)) (or (or (<= ?x202 16) $x214) (or $x222 $x227)))))
(let ((?x94 (- 5)))
(let ((?x160 (+ (+ (* (- 7) |v7:2|) (* ?x39 |v5:4|)) (* (- 4) |v4:5|))))
(let ((?x153 (+ (+ (* 10 |v3:6|) (* (- 17) |v8:1|)) (* 15 |v3:6|))))
(let ((?x110 17))
(let ((?x142 (+ (+ (* (- 4) |v1:8|) (* (- 13) |v0:9|)) (* ?x22 |v2:7|))))
(let ((?x52 9))
(let ((?x53 (* ?x52 |v0:9|)))
(let (($x133 (<= (+ (+ (* 14 |v7:2|) (* (- 11) |v3:6|)) ?x53) ?x22)))
(let (($x122 (<= (+ (+ (* ?x39 |v6:3|) (* (- 15) |v0:9|)) (* ?x94 |v9:0|)) ?x121)))
(let ((?x113 (- 16)))
(let (($x114 (<= (+ (+ (* (- 6) |v7:2|) (* ?x52 |v2:7|)) (* ?x110 |v9:0|)) ?x113)))
(let ((?x103 (+ (+ (* (- 17) |v1:8|) (* (- 2) |v3:6|)) (* 4 |v1:8|))))
(let (($x164 (and (and (<= ?x103 19) (or $x114 $x122)) (and (and $x133 (<= ?x142 ?x110)) (and (<= ?x153 ?x75) (<= ?x160 ?x94))))))
(let (($x95 (<= (+ (+ (* (- 3) |v8:1|) (* ?x89 |v2:7|)) (* ?x52 |v3:6|)) ?x94)))
(let (($x76 (<= (+ (+ (* (- 15) |v1:8|) (* ?x47 |v1:8|)) (* ?x39 |v2:7|)) ?x75)))
(let (($x83 (or $x76 (<= (+ (+ (* 20 |v1:8|) ?x78) (* ?x52 |v4:5|)) ?x75))))
(let ((?x62 (- 6)))
(let (($x63 (<= (+ (+ ?x53 (* 20 |v7:2|)) (* 11 |v4:5|)) ?x62)))
(let ((?x44 (- 17)))
(let ((?x45 (* ?x44 |v1:8|)))
(let (($x64 (and (<= (+ (+ (* 20 |v5:4|) (* ?x39 |v5:4|)) ?x45) ?x47) $x63)))
(let ((?x21 (+ (+ (* 19 |v9:0|) (* (- 8) |v8:1|)) (* ?x19 |v6:3|))))
(let (($x34 (and (<= ?x21 ?x22) (<= (+ (+ (* 4 |v9:0|) ?x29) |v6:3|) 20))))
(or (and (or (and $x34 $x64) (or $x83 $x95)) $x164) (and $x230 $x283))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

