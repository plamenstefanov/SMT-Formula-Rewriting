(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_085.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x217 (+ (+ (* 10 |v0:9|) (* (- 7) |v8:1|)) (* (- 14) |v0:9|))))
(let ((?x113 (- 20)))
(let ((?x182 (* ?x113 |v7:2|)))
(let (($x211 (<= (+ (+ (* (- 16) |v5:4|) (* 20 |v5:4|)) ?x182) (- 19))))
(let ((?x89 6))
(let ((?x201 (+ (+ (* (- 13) |v9:0|) (* (- 11) |v6:3|)) (* 15 |v3:6|))))
(let ((?x190 (- 13)))
(let ((?x195 (+ (+ (* ?x190 |v2:7|) (* 9 |v8:1|)) (* (- 2) |v6:3|))))
(let (($x220 (and (<= ?x195 ?x190) (and (and (<= ?x201 ?x89) $x211) (<= ?x217 2)))))
(let (($x185 (<= (+ (+ (* 7 |v5:4|) (* 4 |v9:0|)) ?x182) 12)))
(let ((?x174 (+ (+ (* ?x89 |v8:1|) (* (- 8) |v8:1|)) (* (- 15) |v4:5|))))
(let ((?x76 (- 18)))
(let ((?x165 (+ (+ (* 2 |v9:0|) (* 3 |v4:5|)) (* (- 3) |v7:2|))))
(let ((?x10 5))
(let ((?x160 (+ (+ (* (- 3) |v8:1|) (* 8 |v1:8|)) (* ?x76 |v9:0|))))
(let (($x187 (and (or (<= ?x160 ?x10) (<= ?x165 ?x76)) (and (<= ?x174 16) $x185))))
(let ((?x155 (+ (+ (* 17 |v1:8|) (* (- 7) |v9:0|)) (* 3 |v6:3|))))
(let ((?x143 (+ (+ (* 9 |v5:4|) (* (- 7) |v2:7|)) (* (- 3) |v5:4|))))
(let ((?x117 (* 19 |v9:0|)))
(let (($x136 (<= (+ (+ (* 2 |v9:0|) (* 4 |v4:5|)) ?x117) 16)))
(let ((?x110 (- 2)))
(let (($x125 (<= (+ (+ ?x117 (* (- 11) |v4:5|)) (* (- 9) |v4:5|)) ?x110)))
(let ((?x112 (+ (+ (* (- 11) |v8:1|) (* (- 15) |v3:6|)) (* ?x110 |v0:9|))))
(let ((?x103 (+ (+ (* (- 15) |v3:6|) (* (- 11) |v2:7|)) (* 0 |v5:4|))))
(let ((?x92 9))
(let ((?x91 (+ (+ (* (- 14) |v9:0|) (* (- 3) |v9:0|)) (* ?x89 |v5:4|))))
(let ((?x14 (- 5)))
(let ((?x83 (+ (+ (* ?x76 |v5:4|) (* 17 |v5:4|)) (* (- 16) |v2:7|))))
(let (($x116 (or (or (<= ?x83 ?x14) (<= ?x91 ?x92)) (and (<= ?x103 (- 17)) (<= ?x112 ?x113)))))
(let ((?x68 (+ (+ (* (- 3) |v6:3|) (* ?x10 |v2:7|)) (* (- 17) |v2:7|))))
(let ((?x30 (- 3)))
(let (($x60 (<= (+ (+ (* ?x14 |v2:7|) (* (- 14) |v9:0|)) (* ?x10 |v9:0|)) ?x30)))
(let ((?x26 (- 15)))
(let ((?x49 (+ (+ (* 10 |v2:7|) (* 8 |v1:8|)) (* ?x10 |v0:9|))))
(let (($x39 (<= (+ (+ (* ?x26 |v7:2|) (* ?x30 |v2:7|)) (* 17 |v3:6|)) 15)))
(let (($x23 (<= (+ (+ (* ?x10 |v7:2|) (* ?x14 |v1:8|)) (* 19 |v6:3|)) (- 6))))
(let (($x73 (and $x23 (and (or $x39 (<= ?x49 ?x26)) (and $x60 (<= ?x68 (- 1)))))))
(and (or $x73 (or $x116 (or $x125 (or $x136 (<= ?x143 (- 1)))))) (and (or (<= ?x155 ?x113) $x187) $x220))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

