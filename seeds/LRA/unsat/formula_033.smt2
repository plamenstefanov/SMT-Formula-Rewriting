(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_033.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x102 2))
(let ((?x277 (+ (+ (* 6 |v6:3|) (* 15 |v3:6|)) (* 7 |v9:0|))))
(let ((?x270 (+ (+ (* (- 9) |v1:8|) (* 7 |v4:5|)) (* (- 12) |v1:8|))))
(let ((?x184 10))
(let (($x272 (or (<= (+ (+ |v9:0| (* (- 4) |v0:9|)) (* ?x102 |v9:0|)) ?x184) (<= ?x270 (- 9)))))
(let ((?x61 6))
(let ((?x253 (+ (+ (* (- 16) |v5:4|) (* (- 15) |v7:2|)) (* 4 |v1:8|))))
(let ((?x246 (+ (+ (* (- 13) |v2:7|) (* 9 |v1:8|)) (* 3 |v8:1|))))
(let (($x237 (<= (+ (+ |v3:6| (* 14 |v2:7|)) (* (- 14) |v5:4|)) (- 1))))
(let ((?x74 (- 14)))
(let ((?x231 (+ (+ (* (- 18) |v7:2|) (* (- 20) |v3:6|)) (* 0 |v8:1|))))
(let (($x256 (and (and (<= ?x231 ?x74) $x237) (or (<= ?x246 1) (<= ?x253 ?x61)))))
(let ((?x199 4))
(let ((?x222 (+ (+ (* (- 16) |v0:9|) (* 18 |v7:2|)) (* 5 |v8:1|))))
(let ((?x22 12))
(let ((?x216 (+ (+ (* 14 |v3:6|) (* ?x74 |v4:5|)) (* (- 11) |v5:4|))))
(let ((?x209 (+ (+ (* 20 |v7:2|) (* (- 18) |v5:4|)) (* (- 3) |v4:5|))))
(let ((?x99 7))
(let (($x211 (and (<= (+ (+ (* ?x184 |v3:6|) (* ?x184 |v7:2|)) (* ?x199 |v7:2|)) ?x99) (<= ?x209 ?x199))))
(let ((?x14 (- 11)))
(let ((?x192 (+ (+ (* 20 |v1:8|) (* 8 |v3:6|)) (* ?x14 |v7:2|))))
(let ((?x54 20))
(let (($x188 (<= (+ (+ (* (- 7) |v1:8|) (* ?x184 |v3:6|)) (* ?x54 |v1:8|)) ?x54)))
(let ((?x140 (- 20)))
(let (($x180 (<= (+ (+ (* 8 |v1:8|) |v9:0|) (* 8 |v4:5|)) ?x140)))
(let ((?x19 3))
(let ((?x175 (+ (+ (* ?x61 |v8:1|) (* (- 15) |v2:7|)) (* (- 6) |v0:9|))))
(let (($x226 (or (or (or (<= ?x175 ?x19) $x180) (or $x188 (<= ?x192 ?x14))) (or $x211 (or (<= ?x216 ?x22) (<= ?x222 ?x199))))))
(let ((?x118 5))
(let ((?x163 (+ (+ (* (- 18) |v1:8|) (* 8 |v4:5|)) (* 14 |v4:5|))))
(let ((?x33 18))
(let ((?x155 (+ (+ (* ?x118 |v1:8|) (* 17 |v0:9|)) (* 14 |v7:2|))))
(let ((?x25 15))
(let ((?x146 (+ (+ (* (- 12) |v6:3|) (* ?x140 |v0:9|)) (* (- 5) |v3:6|))))
(let ((?x135 (+ (+ (* (- 7) |v8:1|) (* ?x25 |v9:0|)) (* 11 |v8:1|))))
(let (($x166 (and (and (<= ?x135 (- 6)) (<= ?x146 ?x25)) (and (<= ?x155 ?x33) (<= ?x163 ?x118)))))
(let (($x127 (<= (+ (+ (* ?x118 |v9:0|) (* ?x99 |v3:6|)) (* (- 19) |v3:6|)) ?x99)))
(let ((?x115 (+ (+ (* (- 7) |v0:9|) (* (- 2) |v7:2|)) (* (- 12) |v8:1|))))
(let ((?x101 (+ (+ (* (- 7) |v7:2|) (* (- 10) |v9:0|)) (* ?x99 |v2:7|))))
(let ((?x90 8))
(let ((?x89 (+ (+ (* (- 1) |v6:3|) (* (- 13) |v5:4|)) (* 0 |v5:4|))))
(let (($x129 (and (or (<= ?x89 ?x90) (<= ?x101 ?x102)) (or (<= ?x115 (- 2)) $x127))))
(let ((?x77 (- 13)))
(let ((?x76 (+ (+ (* 19 |v2:7|) (* (- 7) |v5:4|)) (* ?x74 |v1:8|))))
(let (($x62 (<= (+ (+ (* ?x25 |v4:5|) (* ?x54 |v1:8|)) (* 13 |v4:5|)) ?x61)))
(let ((?x47 (+ (+ (* ?x33 |v9:0|) (* 0 |v9:0|)) (* (- 16) |v7:2|))))
(let (($x36 (<= (+ (+ (* ?x25 |v7:2|) (* 11 |v7:2|)) (* ?x33 |v1:8|)) ?x22)))
(let (($x23 (<= (+ (+ (* (- 17) |v6:3|) (* ?x14 |v4:5|)) (* ?x19 |v7:2|)) ?x22)))
(let (($x81 (and $x23 (and (and $x36 (<= ?x47 17)) (or $x62 (<= ?x76 ?x77))))))
(and (or $x81 (and $x129 $x166)) (or $x226 (and $x256 (and $x272 (<= ?x277 ?x102)))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

