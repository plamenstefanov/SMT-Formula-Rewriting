(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_016.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x117 (- 8)))
(let ((?x158 (+ (+ (* (- 1) |v0:9|) (* (- 14) |v2:7|)) (* 10 |v4:5|))))
(let ((?x151 (+ (+ (* (- 12) |v8:1|) (* (- 5) |v4:5|)) (* 15 |v3:6|))))
(let ((?x142 (+ (+ (* 13 |v2:7|) (* (- 9) |v4:5|)) (* ?x117 |v2:7|))))
(let ((?x69 15))
(let ((?x133 (+ (+ (* 5 |v5:4|) (* (- 11) |v9:0|)) (* 16 |v7:2|))))
(let (($x161 (and (and (<= ?x133 ?x69) (<= ?x142 (- 4))) (or (<= ?x151 (- 5)) (<= ?x158 ?x117)))))
(let ((?x124 (+ (+ (* ?x117 |v1:8|) (* (- 15) |v1:8|)) (* 6 |v6:3|))))
(let ((?x112 (+ (+ (* 5 |v6:3|) (* 13 |v5:4|)) (* 18 |v7:2|))))
(let ((?x99 (+ (+ (* 6 |v9:0|) (* 20 |v7:2|)) (* (- 12) |v1:8|))))
(let ((?x26 10))
(let ((?x87 (+ (+ (* (- 6) |v8:1|) (* (- 2) |v9:0|)) (* (- 6) |v3:6|))))
(let (($x128 (and (or (<= ?x87 ?x26) (<= ?x99 (- 11))) (or (<= ?x112 (- 10)) (<= ?x124 3)))))
(let (($x75 (<= (+ (+ (* (- 16) |v8:1|) (* ?x69 |v0:9|)) (* ?x26 |v0:9|)) 14)))
(let ((?x59 (* (- 1) |v0:9|)))
(let (($x62 (<= (+ (+ (* 9 |v6:3|) (* 6 |v3:6|)) ?x59) 1)))
(let ((?x47 (+ (+ (* 6 |v8:1|) (* (- 4) |v8:1|)) (* 2 |v3:6|))))
(let (($x34 (<= (+ (+ |v5:4| (* ?x26 |v7:2|)) (* (- 19) |v2:7|)) 18)))
(let (($x163 (or (and $x34 (and (or (<= ?x47 8) $x62) $x75)) (or $x128 $x161))))
(let ((?x13 16))
(let ((?x20 (+ (+ (* 0 |v2:7|) (* ?x13 |v3:6|)) (* 12 |v6:3|))))
(or (<= ?x20 ?x13) $x163)))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

