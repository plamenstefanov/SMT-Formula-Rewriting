(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_278.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x161 19))
(let ((?x273 (+ (+ (* 14 |v8:1|) (* 0 |v4:5|)) (* (- 6) |v1:8|))))
(let ((?x29 20))
(let ((?x267 (+ (+ (* (- 4) |v4:5|) (* (- 18) |v2:7|)) (* (- 19) |v8:1|))))
(let ((?x10 (- 20)))
(let ((?x261 (+ (+ (* 0 |v3:6|) (* 17 |v3:6|)) (* (- 8) |v9:0|))))
(let ((?x53 14))
(let ((?x255 (+ (+ (* 13 |v1:8|) (* (- 5) |v8:1|)) (* (- 3) |v6:3|))))
(let (($x276 (or (and (<= ?x255 ?x53) (<= ?x261 ?x10)) (and (<= ?x267 ?x29) (<= ?x273 ?x161)))))
(let ((?x246 (+ (+ (* (- 15) |v6:3|) (* ?x161 |v5:4|)) (* (- 12) |v9:0|))))
(let ((?x239 (+ (+ (* (- 18) |v2:7|) (* 15 |v4:5|)) (* (- 2) |v8:1|))))
(let ((?x158 17))
(let ((?x232 (+ (+ (* (- 12) |v0:9|) (* 12 |v0:9|)) (* 9 |v5:4|))))
(let ((?x26 2))
(let ((?x168 12))
(let ((?x212 (* ?x168 |v4:5|)))
(let (($x234 (and (<= (+ (+ (* ?x161 |v3:6|) (* 8 |v0:9|)) ?x212) ?x26) (<= ?x232 ?x158))))
(let ((?x207 (- 3)))
(let (($x217 (<= (+ (+ ?x212 (* (- 7) |v9:0|)) (* (- 9) |v6:3|)) ?x207)))
(let ((?x209 (+ (+ (* 13 |v0:9|) (* (- 2) |v9:0|)) (* ?x207 |v7:2|))))
(let ((?x199 (+ (+ (* (- 16) |v3:6|) (* (- 15) |v4:5|)) (* 6 |v8:1|))))
(let ((?x190 (+ (+ (* (- 14) |v1:8|) (* (- 12) |v2:7|)) (* 4 |v0:9|))))
(let (($x219 (and (and (<= ?x190 (- 18)) (<= ?x199 ?x161)) (or (<= ?x209 7) $x217))))
(let ((?x81 (- 15)))
(let ((?x180 (+ (+ (* ?x26 |v7:2|) (* (- 19) |v4:5|)) (* (- 4) |v8:1|))))
(let ((?x146 (- 8)))
(let (($x169 (<= (+ (+ (* ?x158 |v6:3|) (* ?x161 |v7:2|)) (* 6 |v6:3|)) ?x168)))
(let (($x175 (or $x169 (<= (+ (+ (* 5 |v0:9|) |v1:8|) (* ?x10 |v8:1|)) ?x146))))
(let (($x278 (or (and (and $x175 (<= ?x180 ?x81)) $x219) (and (and $x234 (or (<= ?x239 ?x29) (<= ?x246 (- 10)))) $x276))))
(let ((?x151 (+ (+ (* ?x146 |v1:8|) (* 13 |v9:0|)) (* (- 11) |v2:7|))))
(let ((?x140 (+ (+ (* (- 19) |v2:7|) (* 15 |v0:9|)) (* (- 6) |v2:7|))))
(let ((?x94 (- 4)))
(let ((?x132 (+ (+ (* (- 17) |v8:1|) (* 11 |v4:5|)) (* (- 11) |v9:0|))))
(let ((?x125 (+ (+ (* 18 |v3:6|) (* 5 |v7:2|)) (* 11 |v7:2|))))
(let ((?x114 (+ (+ (* (- 13) |v1:8|) (* (- 6) |v9:0|)) (* 0 |v5:4|))))
(let (($x143 (or (or (<= ?x114 18) (<= ?x125 ?x81)) (and (<= ?x132 ?x94) (<= ?x140 (- 13))))))
(let ((?x50 (- 7)))
(let ((?x100 (+ (+ (* (- 11) |v4:5|) (* ?x94 |v9:0|)) (* (- 9) |v9:0|))))
(let ((?x88 (- 2)))
(let (($x89 (<= (+ (+ (* ?x29 |v9:0|) (* ?x81 |v0:9|)) (* 0 |v1:8|)) ?x88)))
(let ((?x22 4))
(let ((?x75 (+ (+ (* (- 17) |v9:0|) (* 15 |v1:8|)) (* 13 |v2:7|))))
(let ((?x65 (+ (+ (* (- 17) |v3:6|) (* 3 |v8:1|)) (* 3 |v0:9|))))
(let (($x103 (and (and (<= ?x65 (- 1)) (<= ?x75 ?x22)) (and $x89 (<= ?x100 ?x50)))))
(let ((?x52 (+ (+ (* 13 |v5:4|) (* 3 |v6:3|)) (* ?x50 |v1:8|))))
(let ((?x14 (- 5)))
(let (($x37 (<= (+ (+ (* ?x26 |v8:1|) (* ?x29 |v4:5|)) (* (- 12) |v1:8|)) ?x14)))
(let (($x23 (<= (+ (+ (* ?x10 |v9:0|) (* ?x14 |v4:5|)) (* 16 |v7:2|)) ?x22)))
(let (($x155 (and (or (and (or $x23 $x37) (<= ?x52 ?x53)) $x103) (or $x143 (<= ?x151 8)))))
(and $x155 $x278)))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

