(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_121.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x136 19))
(let ((?x227 (+ (+ (* (- 13) |v6:3|) (* (- 10) |v6:3|)) (* (- 11) |v4:5|))))
(let ((?x103 4))
(let (($x222 (<= (+ (+ |v5:4| (* (- 12) |v3:6|)) (* 15 |v4:5|)) ?x103)))
(let (($x216 (<= (+ (+ (* 11 |v6:3|) (* ?x136 |v9:0|)) (* ?x136 |v1:8|)) (- 14))))
(let ((?x206 (+ (+ (* 20 |v6:3|) (* 12 |v8:1|)) (* (- 10) |v9:0|))))
(let ((?x195 (+ (+ (* 3 |v9:0|) (* 0 |v0:9|)) (* 15 |v7:2|))))
(let ((?x77 6))
(let ((?x187 (+ (+ (* 10 |v4:5|) (* ?x77 |v0:9|)) (* 5 |v2:7|))))
(let ((?x35 (- 10)))
(let ((?x180 (+ (+ (* (- 20) |v8:1|) (* ?x103 |v5:4|)) (* 17 |v9:0|))))
(let ((?x23 (- 6)))
(let ((?x137 (* ?x136 |v0:9|)))
(let (($x175 (<= (+ (+ (* 5 |v7:2|) (* 16 |v8:1|)) ?x137) ?x23)))
(let (($x231 (or (and (and $x175 (<= ?x180 ?x35)) (or (<= ?x187 ?x77) (<= ?x195 ?x136))) (and (and (<= ?x206 (- 19)) $x216) (or $x222 (<= ?x227 ?x136))))))
(let ((?x126 (- 17)))
(let ((?x168 (+ (+ (* (- 2) |v7:2|) (* (- 3) |v6:3|)) (* (- 18) |v9:0|))))
(let ((?x160 (+ (+ (* ?x126 |v2:7|) (* (- 9) |v5:4|)) (* (- 12) |v0:9|))))
(let ((?x149 (+ (+ (* (- 2) |v4:5|) (* (- 11) |v1:8|)) (* ?x35 |v3:6|))))
(let ((?x15 (- 13)))
(let (($x139 (<= (+ (+ (* 11 |v1:8|) (* 3 |v1:8|)) ?x137) ?x15)))
(let (($x170 (and (and $x139 (or (<= ?x149 (- 8)) (<= ?x160 ?x126))) (<= ?x168 ?x126))))
(let (($x127 (<= (+ (+ (* (- 20) |v6:3|) (* (- 7) |v9:0|)) |v6:3|) ?x126)))
(let ((?x115 (+ (+ (* 5 |v0:9|) (* 17 |v3:6|)) (* (- 4) |v5:4|))))
(let ((?x68 10))
(let ((?x94 (+ (+ (* ?x68 |v2:7|) (* (- 1) |v5:4|)) (* 0 |v3:6|))))
(let (($x105 (or (<= ?x94 ?x68) (<= (+ (+ (* ?x35 |v1:8|) (* 2 |v6:3|)) |v6:3|) ?x103))))
(let ((?x84 (+ (+ (* (- 16) |v6:3|) (* 8 |v3:6|)) (* (- 18) |v8:1|))))
(let ((?x76 (+ (+ (* ?x68 |v7:2|) (* 20 |v3:6|)) (* 11 |v9:0|))))
(let ((?x61 (+ (+ (* (- 16) |v1:8|) (* ?x23 |v8:1|)) (* (- 4) |v8:1|))))
(let ((?x50 (+ (+ (* 13 |v9:0|) (* (- 3) |v7:2|)) (* 5 |v9:0|))))
(let ((?x33 (* (- 16) |v6:3|)))
(let (($x19 (<= (+ (+ |v5:4| (* 11 |v4:5|)) (* ?x15 |v4:5|)) 8)))
(let (($x37 (or $x19 (<= (+ (+ (* ?x23 |v1:8|) (* (- 1) |v9:0|)) ?x33) ?x35))))
(let (($x107 (and (and $x37 (or (<= ?x50 14) (<= ?x61 16))) (or (and (<= ?x76 ?x77) (<= ?x84 ?x15)) $x105))))
(and (and $x107 (and (<= ?x115 ?x23) $x127)) (or $x170 $x231))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

