(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_175.m
(set-info :status unsat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x292 (+ (+ (* (- 19) |v2:9|) (* 9 |v2:9|)) (* 18 |v5:6|))))
(let ((?x79 (- 13)))
(let ((?x51 (- 9)))
(let ((?x140 (* ?x51 |v5:6|)))
(let ((?x278 (+ (+ (+ (* 4 |v5:6|) (* (- 3) |v0:11|)) ?x140) (* 2 |v4:7|))))
(let ((?x27 (- 20)))
(let ((?x31 15))
(let ((?x32 (* ?x31 |v1:10|)))
(let ((?x271 (+ (+ (* (- 7) |v1:10|) (* 5 |v3:8|)) (* (- 11) |v4:7|))))
(let ((?x130 0))
(let ((?x68 14))
(let ((?x69 (* ?x68 |v11:0|)))
(let ((?x263 (+ (+ (* 20 |v5:6|) (* (- 1) |v9:2|)) (* 12 |v1:10|))))
(let ((?x255 (+ (+ (* 5 |v7:4|) (* (- 14) |v2:9|)) (* (- 12) |v10:1|))))
(let (($x266 (and (<= (+ ?x255 (* (- 14) |v1:10|)) ?x27) (<= (+ ?x263 ?x69) ?x130))))
(let ((?x96 (- 7)))
(let ((?x245 (+ (+ (+ (* ?x31 |v4:7|) (* ?x130 |v1:10|)) (* (- 18) |v3:8|)) (* ?x96 |v2:9|))))
(let ((?x106 (- 3)))
(let ((?x198 (* ?x106 |v5:6|)))
(let ((?x236 (+ (+ (+ (* (- 19) |v7:4|) (* 7 |v9:2|)) ?x198) (* 10 |v2:9|))))
(let ((?x116 (- 10)))
(let ((?x225 (+ (+ (* (- 17) |v7:4|) (* ?x96 |v4:7|)) (* (- 18) |v2:9|))))
(let ((?x217 (+ (+ (+ (* 19 |v8:3|) (* (- 1) |v6:5|)) |v0:11|) (* (- 16) |v3:8|))))
(let (($x248 (and (and (<= ?x217 ?x79) (<= (+ ?x225 (* ?x106 |v3:8|)) ?x116)) (or (<= ?x236 (- 6)) (<= ?x245 ?x96)))))
(let ((?x205 (+ (+ (* 18 |v4:7|) (* ?x27 |v9:2|)) (* 17 |v4:7|))))
(let ((?x60 4))
(let ((?x72 (- 15)))
(let ((?x147 (* ?x72 |v6:5|)))
(let (($x201 (<= (+ (+ (+ (* 6 |v3:8|) (* ?x72 |v11:0|)) ?x198) ?x147) ?x60)))
(let ((?x40 5))
(let ((?x190 (+ (+ (* ?x106 |v0:11|) (* 17 |v1:10|)) (* 11 |v5:6|))))
(let ((?x177 (+ (+ (* 10 |v7:4|) (* 10 |v8:3|)) (* ?x79 |v6:5|))))
(let (($x194 (and (<= (+ ?x177 (* 7 |v0:11|)) (- 17)) (<= (+ ?x190 (* 7 |v6:5|)) ?x40))))
(let (($x210 (and $x194 (and $x201 (<= (+ ?x205 (* 3 |v9:2|)) 11)))))
(let ((?x168 (- 14)))
(let ((?x165 (+ (+ (* 12 |v9:2|) (* 2 |v0:11|)) (* ?x116 |v10:1|))))
(let ((?x157 (+ (+ (+ ?x147 (* 6 |v11:0|)) (* (- 2) |v5:6|)) (* ?x68 |v5:6|))))
(let (($x145 (<= (+ (+ (+ (* ?x130 |v7:4|) ?x140) (* ?x40 |v8:3|)) (* ?x31 |v11:0|)) ?x31)))
(let ((?x137 (+ (+ (+ (* ?x130 |v4:7|) (* 20 |v8:3|)) (* ?x79 |v11:0|)) (* 8 |v3:8|))))
(let (($x171 (or (and (<= ?x137 ?x68) $x145) (or (<= ?x157 ?x96) (<= (+ ?x165 (* 18 |v10:1|)) ?x168)))))
(let (($x283 (or (or $x171 $x210) (or $x248 (and $x266 (or (<= (+ ?x271 ?x32) ?x27) (<= ?x278 ?x79)))))))
(let ((?x123 7))
(let ((?x122 (+ (+ (+ (* ?x27 |v1:10|) (* ?x51 |v11:0|)) (* ?x116 |v8:3|)) (* 2 |v2:9|))))
(let ((?x104 (+ (+ (* ?x96 |v3:8|) (* (- 11) |v2:9|)) (* (- 19) |v6:5|))))
(let ((?x89 (+ (+ (+ ?x32 (* ?x51 |v8:3|)) (* 19 |v4:7|)) (* ?x72 |v5:6|))))
(let ((?x76 18))
(let ((?x77 (* ?x76 |v4:7|)))
(let (($x92 (or (<= (+ (+ (+ (* ?x27 |v7:4|) ?x69) (* ?x72 |v8:3|)) ?x77) ?x79) (<= ?x89 (- 8)))))
(let (($x126 (or $x92 (and (<= (+ ?x104 (* ?x106 |v8:3|)) 8) (<= ?x122 ?x123)))))
(let ((?x10 10))
(let ((?x57 (+ (+ (* (- 16) |v7:4|) (* ?x51 |v4:7|)) (* (- 19) |v8:3|))))
(let ((?x44 (+ (+ (+ ?x32 (* 3 |v4:7|)) (* ?x40 |v8:3|)) (* (- 1) |v11:0|))))
(let ((?x21 (+ (+ (* ?x10 |v9:2|) (* (- 1) |v0:11|)) (* 20 |v11:0|))))
(let (($x128 (and (<= (+ ?x21 (* 12 |v5:6|)) ?x27) (and (or (<= ?x44 ?x27) (<= (+ ?x57 (* ?x60 |v2:9|)) ?x10)) $x126))))
(and (or $x128 $x283) (<= (+ ?x292 (* ?x60 |v1:10|)) 13)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

