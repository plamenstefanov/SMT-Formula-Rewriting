(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_280.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x80 18))
(let (($x288 (<= (+ (+ (* (- 13) |v7:2|) (* (- 4) |v9:0|)) |v7:2|) ?x80)))
(let ((?x86 6))
(let ((?x283 (+ (+ (* 4 |v9:0|) (* (- 20) |v5:4|)) (* 14 |v2:7|))))
(let ((?x35 (- 10)))
(let ((?x276 (+ (+ (* ?x80 |v0:9|) (* (- 12) |v8:1|)) (* (- 9) |v8:1|))))
(let ((?x129 (- 14)))
(let ((?x270 (+ (+ (* (- 3) |v6:3|) (* 14 |v6:3|)) (* 4 |v5:4|))))
(let ((?x44 7))
(let ((?x121 (- 18)))
(let (($x260 (<= (+ (+ (* 2 |v4:5|) (* ?x129 |v2:7|)) (* ?x129 |v7:2|)) ?x121)))
(let ((?x132 (- 19)))
(let ((?x253 (+ (+ (* (- 11) |v6:3|) (* ?x129 |v9:0|)) (* 14 |v1:8|))))
(let (($x267 (or (and (<= ?x253 ?x132) $x260) (<= (+ (+ (* 13 |v6:3|) (* ?x35 |v5:4|)) |v2:7|) ?x44))))
(let (($x291 (and $x267 (and (or (<= ?x270 ?x129) (<= ?x276 ?x35)) (and (<= ?x283 ?x86) $x288)))))
(let ((?x53 4))
(let (($x246 (<= (+ (+ (* ?x121 |v0:9|) (* ?x44 |v3:6|)) (* (- 7) |v6:3|)) ?x53)))
(let ((?x239 (+ (+ (* (- 4) |v4:5|) (* 17 |v2:7|)) (* (- 15) |v0:9|))))
(let ((?x229 (+ (+ (* (- 11) |v2:7|) (* 16 |v1:8|)) (* ?x35 |v1:8|))))
(let ((?x69 (- 11)))
(let ((?x220 (* ?x69 |v6:3|)))
(let (($x223 (<= (+ (+ (* 11 |v5:4|) (* ?x129 |v8:1|)) ?x220) (- 6))))
(let ((?x10 (- 9)))
(let ((?x213 (+ (+ (* 14 |v6:3|) (* 14 |v8:1|)) (* ?x129 |v4:5|))))
(let ((?x113 (- 4)))
(let ((?x202 (* ?x113 |v9:0|)))
(let (($x198 (<= (+ (+ (* ?x35 |v6:3|) (* ?x121 |v4:5|)) (* 20 |v0:9|)) 0)))
(let (($x206 (and $x198 (<= (+ (+ (* ?x113 |v3:6|) (* ?x113 |v1:8|)) ?x202) 2))))
(let (($x249 (or (or $x206 (<= ?x213 ?x10)) (and (and $x223 (<= ?x229 (- 15))) (and (<= ?x239 ?x53) $x246)))))
(let ((?x146 (* 5 |v1:8|)))
(let ((?x180 (+ (+ (* 13 |v8:1|) (* (- 7) |v4:5|)) (* ?x35 |v2:7|))))
(let (($x187 (or (<= ?x180 5) (<= (+ (+ (* 3 |v1:8|) (* ?x129 |v0:9|)) ?x146) ?x132))))
(let ((?x173 (* ?x113 |v3:6|)))
(let (($x176 (<= (+ (+ (* 19 |v3:6|) (* (- 13) |v6:3|)) ?x173) (- 5))))
(let ((?x72 13))
(let ((?x142 (* ?x132 |v2:7|)))
(let (($x164 (<= (+ (+ (* (- 3) |v6:3|) (* (- 20) |v3:6|)) ?x142) ?x72)))
(let ((?x155 (+ (+ (* (- 8) |v1:8|) (* (- 12) |v1:8|)) (* ?x35 |v9:0|))))
(let (($x158 (and (<= (+ (+ (* 12 |v8:1|) ?x142) ?x146) ?x35) (<= ?x155 (- 1)))))
(let (($x139 (<= (+ (+ (* ?x129 |v3:6|) (* ?x132 |v0:9|)) (* (- 3) |v4:5|)) 10)))
(let ((?x126 (+ (+ (* ?x121 |v7:2|) (* 8 |v2:7|)) (* (- 16) |v3:6|))))
(let (($x189 (and (and (and (<= ?x126 ?x80) $x139) $x158) (and (or $x164 $x176) $x187))))
(let ((?x115 (+ (+ (* 10 |v7:2|) (* (- 20) |v8:1|)) (* ?x113 |v8:1|))))
(let ((?x102 (+ (+ (* (- 2) |v7:2|) (* ?x86 |v1:8|)) (* 16 |v4:5|))))
(let (($x91 (<= (+ (+ (* (- 8) |v1:8|) (* ?x86 |v2:7|)) (* ?x35 |v7:2|)) (- 8))))
(let (($x81 (<= (+ (+ (* ?x69 |v5:4|) (* ?x72 |v8:1|)) (* 20 |v7:2|)) ?x80)))
(let ((?x61 (+ (+ (* ?x53 |v8:1|) (* (- 17) |v9:0|)) (* 8 |v4:5|))))
(let ((?x19 9))
(let (($x64 (and (<= (+ (+ (* ?x19 |v2:7|) (* ?x44 |v6:3|)) (* ?x10 |v3:6|)) ?x19) (<= ?x61 3))))
(let ((?x37 (+ (+ (* (- 7) |v4:5|) (* (- 16) |v0:9|)) (* ?x35 |v4:5|))))
(let (($x23 (<= (+ (+ (* ?x10 |v6:3|) (* 8 |v1:8|)) (* ?x19 |v8:1|)) 12)))
(let (($x119 (and (or (and $x23 (<= ?x37 11)) $x64) (and (and $x81 $x91) (and (<= ?x102 15) (<= ?x115 ?x72))))))
(and (and $x119 $x189) (and $x249 $x291)))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

