(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_088.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x70 3))
(let (($x253 (<= (+ (+ |v4:5| (* (- 2) |v4:5|)) (* 20 |v9:0|)) ?x70)))
(let ((?x45 (- 20)))
(let ((?x129 (* (- 6) |v0:9|)))
(let (($x249 (<= (+ (+ (* (- 18) |v7:2|) (* 10 |v4:5|)) ?x129) ?x45)))
(let ((?x242 (+ (+ (* 12 |v8:1|) (* 19 |v3:6|)) (* 7 |v6:3|))))
(let ((?x235 (+ (+ (* 18 |v9:0|) (* (- 18) |v5:4|)) (* (- 8) |v1:8|))))
(let (($x255 (or (or (<= ?x235 (- 3)) (<= ?x242 17)) (and $x249 $x253))))
(let ((?x225 (+ (+ (* (- 4) |v8:1|) (* (- 14) |v6:3|)) (* (- 18) |v6:3|))))
(let ((?x64 10))
(let ((?x219 (+ (+ (* 15 |v9:0|) (* (- 1) |v3:6|)) (* ?x70 |v2:7|))))
(let ((?x33 (- 9)))
(let ((?x211 (* 18 |v9:0|)))
(let (($x213 (<= (+ (+ (* 20 |v1:8|) (* 19 |v7:2|)) ?x211) ?x33)))
(let ((?x61 5))
(let ((?x204 (+ (+ (* (- 16) |v2:7|) (* 12 |v9:0|)) (* 12 |v1:8|))))
(let (($x256 (and (or (and (<= ?x204 ?x61) $x213) (or (<= ?x219 ?x64) (<= ?x225 ?x70))) $x255)))
(let ((?x194 (+ (+ (* (- 16) |v4:5|) (* (- 4) |v4:5|)) (* (- 7) |v0:9|))))
(let ((?x185 (+ (+ (* 12 |v5:4|) (* ?x70 |v7:2|)) (* (- 11) |v2:7|))))
(let ((?x164 15))
(let ((?x176 (+ (+ (* (- 12) |v0:9|) (* ?x33 |v7:2|)) (* 2 |v2:7|))))
(let ((?x169 (+ (+ (* ?x164 |v3:6|) (* (- 18) |v1:8|)) (* 16 |v6:3|))))
(let (($x198 (or (or (<= ?x169 (- 12)) (<= ?x176 ?x164)) (and (<= ?x185 8) (<= ?x194 18)))))
(let ((?x158 (+ (+ (* (- 11) |v4:5|) (* ?x64 |v5:4|)) (* 7 |v9:0|))))
(let (($x149 (<= (+ (+ (* (- 17) |v7:2|) |v6:3|) (* 9 |v7:2|)) 0)))
(let ((?x10 14))
(let (($x131 (<= (+ (+ (* 2 |v4:5|) (* (- 1) |v1:8|)) ?x129) ?x10)))
(let (($x140 (and $x131 (<= (+ (+ |v5:4| (* ?x70 |v9:0|)) (* ?x64 |v7:2|)) 8))))
(let ((?x83 (- 4)))
(let ((?x121 (+ (+ (* 11 |v6:3|) (* ?x45 |v3:6|)) (* (- 14) |v8:1|))))
(let ((?x108 (+ (+ (* (- 10) |v9:0|) (* (- 18) |v3:6|)) (* ?x10 |v4:5|))))
(let ((?x22 16))
(let ((?x75 (* (- 2) |v4:5|)))
(let (($x101 (<= (+ (+ (* 6 |v8:1|) (* (- 15) |v2:7|)) ?x75) ?x22)))
(let ((?x79 (- 18)))
(let (($x91 (<= (+ (+ (* ?x83 |v5:4|) (* 17 |v9:0|)) (* ?x22 |v1:8|)) ?x79)))
(let (($x111 (and (or (<= (+ (+ (* ?x70 |v6:3|) ?x75) (* ?x61 |v2:7|)) ?x79) $x91) (and $x101 (<= ?x108 (- 15))))))
(let ((?x51 (+ (+ (* 20 |v6:3|) (* ?x45 |v6:3|)) (* 0 |v6:3|))))
(let (($x66 (or (<= ?x51 (- 6)) (<= (+ (+ (* (- 13) |v9:0|) |v1:8|) (* ?x61 |v9:0|)) ?x64))))
(let (($x37 (<= (+ (+ (* ?x22 |v3:6|) (* (- 1) |v0:9|)) (* ?x33 |v8:1|)) (- 5))))
(let ((?x21 (+ (+ (* ?x10 |v2:7|) (* 4 |v9:0|)) (* (- 7) |v8:1|))))
(and (or (and (and (and (<= ?x21 ?x22) $x37) $x66) $x111) (<= ?x121 ?x83)) (or (or (and $x140 (and $x149 (<= ?x158 ?x45))) $x198) $x256))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

