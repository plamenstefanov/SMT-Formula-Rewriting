(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_200.m
(set-info :status unsat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x57 (- 3)))
(let ((?x162 (+ (+ (* (- 1) |v3:8|) (* 20 |v5:6|)) (* 15 |v3:8|))))
(let ((?x151 (+ (+ (+ (* ?x57 |v9:2|) (* (- 15) |v9:2|)) (* ?x57 |v0:11|)) (* 4 |v3:8|))))
(let ((?x143 (+ (+ (+ (* (- 17) |v6:5|) |v6:5|) (* (- 18) |v8:3|)) (* 20 |v9:2|))))
(let ((?x130 (+ (+ (* (- 18) |v3:8|) (* (- 15) |v5:6|)) (* (- 10) |v7:4|))))
(let ((?x118 (+ (+ (* 4 |v2:9|) (* 3 |v11:0|)) (* (- 10) |v9:2|))))
(let (($x135 (and (<= (+ ?x118 (* 4 |v6:5|)) ?x57) (<= (+ ?x130 (* 15 |v6:5|)) 5))))
(let ((?x40 (- 5)))
(let ((?x100 (+ (+ (* 10 |v3:8|) (* 19 |v4:7|)) (* (- 9) |v3:8|))))
(let ((?x32 15))
(let ((?x85 (+ (+ (* ?x40 |v8:3|) (* 13 |v10:1|)) (* (- 12) |v0:11|))))
(let (($x106 (and (<= (+ ?x85 (* 3 |v5:6|)) ?x32) (<= (+ ?x100 (* 14 |v5:6|)) ?x40))))
(let ((?x50 (- 15)))
(let ((?x72 (+ (+ (* (- 20) |v9:2|) (* (- 6) |v9:2|)) (* 0 |v8:3|))))
(let ((?x63 (+ (+ (+ (* ?x50 |v4:7|) (* (- 19) |v3:8|)) (* ?x57 |v8:3|)) (* (- 16) |v8:3|))))
(let (($x77 (or (<= ?x63 (- 11)) (<= (+ ?x72 (* 0 |v10:1|)) ?x50))))
(let (($x155 (or (and $x77 $x106) (and $x135 (or (<= ?x143 8) (<= ?x151 (- 6)))))))
(let ((?x46 (+ (+ (+ (* ?x32 |v4:7|) (* 20 |v1:10|)) (* ?x40 |v3:8|)) (* 8 |v8:3|))))
(let (($x167 (or (<= ?x46 13) (or $x155 (<= (+ ?x162 (* (- 13) |v9:2|)) ?x57)))))
(let ((?x21 (+ (+ (* (- 11) |v3:8|) (* (- 20) |v9:2|)) (* 19 |v6:5|))))
(and (<= (+ ?x21 (* (- 2) |v8:3|)) (- 13)) $x167))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

