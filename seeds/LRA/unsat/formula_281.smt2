(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_281.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x165 (+ (+ (* (- 18) |v3:6|) (* 6 |v4:5|)) (* 5 |v9:0|))))
(let ((?x105 (- 5)))
(let ((?x156 (+ (+ (* 8 |v9:0|) (* (- 17) |v2:7|)) (* 9 |v1:8|))))
(let ((?x149 (+ (+ (* 9 |v2:7|) (* 16 |v3:6|)) (* 3 |v1:8|))))
(let ((?x138 (+ (+ (* 18 |v5:4|) (* (- 9) |v6:3|)) (* (- 18) |v0:9|))))
(let ((?x22 8))
(let ((?x132 (+ (+ (* (- 18) |v8:1|) (* 19 |v7:2|)) (* (- 1) |v2:7|))))
(let (($x158 (or (or (and (<= ?x132 ?x22) (<= ?x138 ?x105)) (<= ?x149 2)) (<= ?x156 ?x105))))
(let ((?x65 4))
(let ((?x122 (+ (+ (* (- 7) |v1:8|) (* (- 1) |v5:4|)) (* 11 |v9:0|))))
(let ((?x111 (+ (+ (* (- 12) |v8:1|) (* ?x105 |v6:3|)) (* (- 9) |v0:9|))))
(let ((?x96 (+ (+ (* (- 17) |v9:0|) (* 12 |v0:9|)) (* 16 |v6:3|))))
(let (($x88 (<= (+ (+ |v6:3| (* 17 |v7:2|)) (* (- 20) |v8:1|)) 18)))
(let (($x125 (and (and $x88 (<= ?x96 2)) (or (<= ?x111 20) (<= ?x122 ?x65)))))
(let (($x75 (<= (+ (+ (* ?x65 |v0:9|) (* 5 |v8:1|)) (* ?x65 |v3:6|)) 13)))
(let ((?x60 (+ (+ (* (- 3) |v1:8|) (* 14 |v4:5|)) (* (- 16) |v7:2|))))
(let ((?x49 (+ (+ (* 13 |v6:3|) (* 0 |v9:0|)) (* 12 |v6:3|))))
(let ((?x36 (+ (+ (* (- 17) |v7:2|) (* 12 |v5:4|)) (* (- 17) |v1:8|))))
(let (($x77 (and (and (<= ?x36 19) (<= ?x49 (- 16))) (and (<= ?x60 (- 13)) $x75))))
(let ((?x21 (+ (+ (* (- 7) |v4:5|) (* 14 |v2:7|)) (* (- 18) |v6:3|))))
(and (and (<= ?x21 ?x22) (and $x77 $x125)) (and $x158 (<= ?x165 20))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

