(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_103.m
(set-info :status unsat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x78 9))
(let ((?x24 13))
(let ((?x160 (* ?x24 |v5:6|)))
(let ((?x280 (+ (+ (+ (* (- 7) |v10:1|) (* (- 7) |v10:1|)) ?x160) (* 5 |v5:6|))))
(let ((?x267 (+ (+ (* (- 5) |v5:6|) (* (- 12) |v2:9|)) (* 0 |v9:2|))))
(let ((?x64 12))
(let ((?x257 (+ (+ (* (- 2) |v8:3|) (* (- 2) |v0:11|)) (* 5 |v3:8|))))
(let (($x271 (and (<= (+ ?x257 (* 8 |v6:5|)) ?x64) (<= (+ ?x267 (* 2 |v7:4|)) (- 9)))))
(let ((?x69 (- 3)))
(let ((?x248 (+ (+ (* (- 15) |v11:0|) (* (- 14) |v9:2|)) (* 3 |v0:11|))))
(let ((?x40 20))
(let ((?x243 (+ (+ (+ (* 8 |v3:8|) |v0:11|) (* (- 7) |v2:9|)) (* (- 14) |v0:11|))))
(let (($x272 (or (and (<= ?x243 ?x40) (<= (+ ?x248 (* (- 13) |v1:10|)) ?x69)) $x271)))
(let ((?x137 (- 20)))
(let ((?x233 (+ (+ (* 6 |v11:0|) (* ?x40 |v9:2|)) (* 3 |v4:7|))))
(let ((?x36 (- 15)))
(let ((?x225 (+ (+ (* 4 |v10:1|) (* (- 11) |v7:4|)) (* (- 6) |v1:10|))))
(let (($x237 (or (<= (+ ?x225 (* 7 |v6:5|)) ?x36) (<= (+ ?x233 (* ?x24 |v11:0|)) ?x137))))
(let ((?x219 (- 14)))
(let ((?x216 (+ (+ (* 4 |v1:10|) (* (- 16) |v3:8|)) (* 17 |v3:8|))))
(let ((?x201 (+ (+ (* ?x64 |v10:1|) (* (- 13) |v0:11|)) (* 18 |v6:5|))))
(let ((?x113 (- 11)))
(let ((?x189 (+ (+ (* 7 |v1:10|) (* (- 19) |v11:0|)) (* 8 |v8:3|))))
(let (($x205 (and (<= (+ ?x189 (* (- 6) |v4:7|)) ?x113) (<= (+ ?x201 (* 16 |v9:2|)) ?x40))))
(let ((?x181 (+ (+ (* 7 |v7:4|) (* 3 |v7:4|)) (* ?x137 |v4:7|))))
(let ((?x79 (* ?x78 |v9:2|)))
(let ((?x173 (+ (+ (+ (* ?x69 |v6:5|) (* ?x24 |v7:4|)) (* 6 |v9:2|)) ?x79)))
(let ((?x165 (+ (+ (+ ?x160 (* 6 |v5:6|)) (* ?x69 |v11:0|)) (* (- 12) |v6:5|))))
(let ((?x45 8))
(let ((?x155 (+ (+ (* 16 |v1:10|) (* (- 16) |v1:10|)) (* ?x64 |v2:9|))))
(let (($x185 (or (or (<= (+ ?x155 (* ?x78 |v0:11|)) ?x45) (<= ?x165 10)) (and (<= ?x173 ?x113) (<= (+ ?x181 |v0:11|) 10)))))
(let (($x274 (and (or $x185 $x205) (or (and (<= (+ ?x216 (* (- 19) |v10:1|)) ?x219) $x237) $x272))))
(let ((?x146 6))
(let ((?x145 (+ (+ (+ (* (- 4) |v3:8|) (* ?x137 |v10:1|)) (* ?x69 |v6:5|)) (* 7 |v5:6|))))
(let ((?x127 (+ (+ (* (- 5) |v10:1|) (* (- 9) |v1:10|)) (* (- 12) |v3:8|))))
(let ((?x105 (* (- 17) |v10:1|)))
(let ((?x119 (+ (+ (+ (* ?x113 |v11:0|) (* (- 7) |v6:5|)) ?x105) (* (- 7) |v5:6|))))
(let ((?x109 (- 2)))
(let ((?x108 (+ (+ (+ (* (- 10) |v1:10|) (* (- 10) |v11:0|)) ?x105) (* (- 1) |v9:2|))))
(let ((?x27 (- 16)))
(let ((?x91 (- 7)))
(let ((?x92 (* ?x91 |v2:9|)))
(let ((?x95 (+ (+ (+ (* (- 19) |v11:0|) (* 18 |v0:11|)) ?x92) (* ?x27 |v5:6|))))
(let (($x132 (or (and (<= ?x95 ?x27) (<= ?x108 ?x109)) (and (<= ?x119 ?x36) (<= (+ ?x127 (* ?x78 |v8:3|)) 11)))))
(let ((?x81 5))
(let ((?x80 (+ (+ (+ (* ?x69 |v11:0|) (* ?x36 |v11:0|)) (* 18 |v10:1|)) ?x79)))
(let ((?x61 (+ (+ (* (- 1) |v7:4|) (* ?x45 |v5:6|)) (* 2 |v10:1|))))
(let ((?x48 (- 5)))
(let ((?x46 (* ?x45 |v5:6|)))
(let ((?x47 (+ (+ (+ (* (- 19) |v4:7|) (* ?x36 |v1:10|)) (* ?x40 |v6:5|)) ?x46)))
(let ((?x21 (+ (+ (* 11 |v6:5|) (* (- 4) |v8:3|)) (* (- 12) |v9:2|))))
(let (($x84 (and (and (<= (+ ?x21 (* ?x24 |v3:8|)) ?x27) (<= ?x47 ?x48)) (or (<= (+ ?x61 (* (- 1) |v10:1|)) ?x64) (<= ?x80 ?x81)))))
(and (or (and (or $x84 $x132) (<= ?x145 ?x146)) $x274) (<= ?x280 ?x78)))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

