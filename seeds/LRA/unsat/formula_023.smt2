(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_023.m
(set-info :status unsat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x230 (+ (+ (* (- 11) |v9:0|) (* (- 11) |v3:6|)) (* 9 |v6:3|))))
(let ((?x14 (- 16)))
(let (($x223 (<= (+ (+ |v7:2| (* 20 |v6:3|)) (* 9 |v3:6|)) ?x14)))
(let ((?x19 12))
(let ((?x189 (* (- 13) |v6:3|)))
(let (($x217 (<= (+ (+ (* 0 |v2:7|) (* (- 7) |v8:1|)) ?x189) ?x19)))
(let (($x212 (<= (+ (+ (* 4 |v2:7|) (* (- 15) |v8:1|)) |v1:8|) ?x14)))
(let (($x205 (<= (+ (+ (* (- 9) |v2:7|) |v2:7|) (* 14 |v2:7|)) ?x14)))
(let ((?x199 (+ (+ (* 2 |v2:7|) (* (- 3) |v9:0|)) (* (- 8) |v4:5|))))
(let (($x192 (<= (+ (+ (* (- 17) |v9:0|) (* 8 |v1:8|)) ?x189) (- 1))))
(let ((?x142 (- 12)))
(let ((?x182 (+ (+ (* ?x19 |v6:3|) (* 11 |v7:2|)) (* 10 |v8:1|))))
(let (($x234 (and (or (and (<= ?x182 ?x142) $x192) (and (<= ?x199 1) $x205)) (and (and $x212 $x217) (and $x223 (<= ?x230 (- 1)))))))
(let ((?x171 (+ (+ (* (- 7) |v6:3|) (* 11 |v3:6|)) (* 3 |v8:1|))))
(let ((?x22 11))
(let ((?x121 (* ?x22 |v2:7|)))
(let (($x164 (<= (+ (+ (* 7 |v2:7|) (* ?x142 |v3:6|)) ?x121) 6)))
(let ((?x153 (- 7)))
(let ((?x117 (* 18 |v8:1|)))
(let (($x154 (<= (+ (+ (* (- 14) |v8:1|) (* (- 14) |v3:6|)) ?x117) ?x153)))
(let ((?x79 20))
(let ((?x144 (+ (+ (* 15 |v2:7|) (* (- 2) |v6:3|)) (* ?x142 |v0:9|))))
(let (($x131 (<= (+ (+ ?x121 (* (- 8) |v0:9|)) (* (- 20) |v9:0|)) 1)))
(let (($x119 (<= (+ (+ (* (- 15) |v5:4|) (* (- 6) |v4:5|)) ?x117) (- 17))))
(let ((?x108 (+ (+ (* (- 19) |v3:6|) (* 0 |v4:5|)) (* 18 |v2:7|))))
(let ((?x100 9))
(let ((?x98 (* (- 3) |v9:0|)))
(let (($x101 (<= (+ (+ (* (- 4) |v2:7|) (* 16 |v7:2|)) ?x98) ?x100)))
(let (($x175 (and (or (and $x101 (<= ?x108 8)) (and $x119 $x131)) (or (or (<= ?x144 ?x79) $x154) (and $x164 (<= ?x171 7))))))
(let ((?x86 (+ (+ (* ?x79 |v3:6|) (* (- 10) |v2:7|)) (* (- 19) |v2:7|))))
(let ((?x57 0))
(let ((?x36 (- 19)))
(let ((?x75 (* ?x36 |v3:6|)))
(let (($x88 (and (<= (+ (+ (* (- 9) |v4:5|) (* ?x57 |v8:1|)) ?x75) ?x57) (<= ?x86 (- 5)))))
(let ((?x66 (+ (+ (* ?x57 |v1:8|) (* (- 4) |v6:3|)) (* 5 |v9:0|))))
(let ((?x50 (* (- 17) |v9:0|)))
(let (($x53 (<= (+ (+ (* (- 6) |v3:6|) (* (- 18) |v0:9|)) ?x50) (- 3))))
(let ((?x38 (+ (+ (* 14 |v8:1|) (* (- 9) |v3:6|)) (* ?x36 |v9:0|))))
(let (($x89 (or (or (<= ?x38 (- 5)) (or $x53 (<= ?x66 4))) $x88)))
(let (($x23 (<= (+ (+ (* (- 18) |v6:3|) (* ?x14 |v2:7|)) (* ?x19 |v5:4|)) ?x22)))
(and (or $x23 $x89) (and $x175 $x234)))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

