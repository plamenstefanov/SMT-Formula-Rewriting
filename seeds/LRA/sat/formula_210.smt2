(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_210.m
(set-info :status unknown)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x129 9))
(let ((?x293 (+ (+ (* (- 18) |v5:4|) (* 16 |v3:6|)) (* 19 |v4:5|))))
(let ((?x59 (- 10)))
(let ((?x287 (+ (+ (* 13 |v7:2|) (* (- 18) |v7:2|)) (* (- 12) |v4:5|))))
(let ((?x73 11))
(let ((?x172 (* ?x73 |v0:9|)))
(let (($x281 (<= (+ (+ (* (- 13) |v0:9|) (* (- 16) |v9:0|)) ?x172) 1)))
(let ((?x275 (+ (+ (* (- 8) |v2:7|) (* (- 18) |v0:9|)) (* 5 |v1:8|))))
(let (($x296 (and (or (<= ?x275 1) $x281) (or (<= ?x287 ?x59) (<= ?x293 ?x129)))))
(let ((?x266 (+ (+ (* (- 8) |v9:0|) (* (- 4) |v4:5|)) (* (- 8) |v3:6|))))
(let ((?x84 12))
(let ((?x177 (- 11)))
(let ((?x194 (* ?x177 |v0:9|)))
(let (($x268 (and (<= (+ (+ (* ?x177 |v7:2|) (* (- 6) |v3:6|)) ?x194) ?x84) (<= ?x266 ?x59))))
(let ((?x256 (+ (+ (* (- 15) |v7:2|) (* 3 |v2:7|)) (* 5 |v6:3|))))
(let ((?x247 (+ (+ (* 20 |v4:5|) (* ?x73 |v9:0|)) (* (- 18) |v9:0|))))
(let ((?x101 20))
(let ((?x241 (+ (+ (* (- 3) |v7:2|) (* 2 |v1:8|)) (* (- 18) |v3:6|))))
(let ((?x31 (- 15)))
(let ((?x232 (+ (+ (* 5 |v3:6|) (* 8 |v5:4|)) (* (- 9) |v5:4|))))
(let (($x225 (<= (+ (+ (* ?x59 |v5:4|) (* 16 |v2:7|)) (* ?x59 |v7:2|)) 6)))
(let ((?x14 (- 1)))
(let ((?x213 (+ (+ (* (- 5) |v2:7|) (* (- 5) |v2:7|)) (* (- 3) |v0:9|))))
(let ((?x206 (+ (+ (* (- 7) |v2:7|) (* (- 6) |v2:7|)) (* ?x14 |v6:3|))))
(let ((?x19 4))
(let ((?x191 (+ (+ (* (- 4) |v1:8|) (* 15 |v0:9|)) (* ?x73 |v3:6|))))
(let (($x199 (and (<= ?x191 (- 2)) (<= (+ (+ (* ?x84 |v1:8|) ?x194) (* (- 6) |v6:3|)) ?x19))))
(let (($x251 (or (or $x199 (or (<= ?x206 ?x59) (<= ?x213 ?x14))) (and (and $x225 (<= ?x232 ?x31)) (and (<= ?x241 ?x101) (<= ?x247 ?x84))))))
(let ((?x49 (- 20)))
(let ((?x181 (+ (+ (* 15 |v7:2|) (* ?x177 |v8:1|)) (* 5 |v2:7|))))
(let (($x183 (and (<= (+ (+ (* (- 19) |v3:6|) |v0:9|) ?x172) (- 9)) (<= ?x181 ?x49))))
(let ((?x167 (+ (+ (* (- 9) |v7:2|) (* (- 19) |v9:0|)) (* (- 4) |v5:4|))))
(let ((?x36 (- 12)))
(let ((?x159 (+ (+ (* 13 |v6:3|) (* 17 |v2:7|)) (* 3 |v6:3|))))
(let ((?x120 (- 6)))
(let ((?x147 (+ (+ (* (- 18) |v6:3|) (* (- 17) |v6:3|)) (* (- 14) |v9:0|))))
(let ((?x141 (+ (+ (* ?x129 |v1:8|) (* 5 |v5:4|)) (* 5 |v0:9|))))
(let ((?x104 3))
(let ((?x126 (+ (+ (* (- 4) |v6:3|) (* ?x120 |v5:4|)) (* 19 |v6:3|))))
(let (($x135 (and (<= ?x126 ?x84) (<= (+ (+ (* ?x129 |v2:7|) (* (- 16) |v7:2|)) |v4:5|) ?x104))))
(let (($x185 (or (or $x135 (and (<= ?x141 (- 13)) (<= ?x147 ?x120))) (and (and (<= ?x159 ?x36) (<= ?x167 ?x49)) $x183))))
(let ((?x45 5))
(let (($x112 (<= (+ (+ (* ?x104 |v1:8|) (* 10 |v6:3|)) (* ?x31 |v4:5|)) ?x45)))
(let ((?x100 (+ (+ (* (- 17) |v7:2|) (* (- 18) |v6:3|)) (* ?x84 |v5:4|))))
(let (($x90 (<= (+ (+ (* ?x84 |v8:1|) (* (- 16) |v2:7|)) (* ?x84 |v4:5|)) ?x19)))
(let (($x82 (<= (+ (+ (* ?x31 |v9:0|) (* ?x73 |v2:7|)) (* 15 |v3:6|)) (- 5))))
(let ((?x66 (+ (+ (* (- 14) |v6:3|) (* ?x59 |v7:2|)) (* (- 2) |v8:1|))))
(let (($x53 (<= (+ (+ (* (- 8) |v9:0|) (* ?x45 |v4:5|)) (* ?x49 |v0:9|)) 0)))
(let ((?x35 (+ (+ (* (- 19) |v2:7|) (* ?x31 |v1:8|)) (* (- 16) |v1:8|))))
(let ((?x22 (- 17)))
(let (($x23 (<= (+ (+ (* (- 16) |v9:0|) (* ?x14 |v7:2|)) (* ?x19 |v0:9|)) ?x22)))
(let (($x115 (or (and (or $x23 (<= ?x35 ?x36)) (or $x53 (<= ?x66 ?x31))) (or (or $x82 $x90) (or (<= ?x100 ?x101) $x112)))))
(and (and $x115 $x185) (or $x251 (and (and (<= ?x256 ?x73) $x268) $x296))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

