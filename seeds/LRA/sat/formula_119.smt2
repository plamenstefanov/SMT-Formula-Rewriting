(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_119.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x33 (- 20)))
(let ((?x131 13))
(let ((?x132 (* ?x131 |v9:0|)))
(let (($x294 (<= (+ (+ (* 4 |v1:8|) (* 8 |v9:0|)) ?x132) ?x33)))
(let ((?x249 (- 13)))
(let (($x289 (<= (+ (+ |v3:6| (* 11 |v7:2|)) (* 17 |v9:0|)) ?x249)))
(let ((?x283 (+ (+ (* 6 |v1:8|) (* (- 14) |v5:4|)) (* (- 17) |v8:1|))))
(let ((?x275 (+ (+ (* (- 8) |v6:3|) (* 15 |v0:9|)) (* 14 |v5:4|))))
(let ((?x267 (+ (+ (* ?x131 |v7:2|) (* 7 |v7:2|)) (* 0 |v7:2|))))
(let ((?x30 (- 9)))
(let (($x269 (and (<= (+ (+ (* (- 5) |v7:2|) |v9:0|) (* ?x249 |v6:3|)) ?x30) (<= ?x267 (- 5)))))
(let ((?x251 (+ (+ (* 4 |v0:9|) (* (- 1) |v3:6|)) (* ?x249 |v1:8|))))
(let ((?x58 17))
(let ((?x244 (+ (+ (* 18 |v5:4|) (* (- 3) |v6:3|)) (* 18 |v8:1|))))
(let (($x297 (or (or (or (<= ?x244 ?x58) (<= ?x251 (- 16))) $x269) (and (or (<= ?x275 ?x249) (<= ?x283 (- 19))) (or $x289 $x294)))))
(let ((?x39 (- 10)))
(let ((?x235 (+ (+ (* (- 3) |v5:4|) (* ?x39 |v6:3|)) (* 19 |v6:3|))))
(let ((?x229 (+ (+ (* (- 2) |v3:6|) (* 20 |v2:7|)) (* 12 |v9:0|))))
(let ((?x108 (- 11)))
(let ((?x220 (+ (+ (* (- 6) |v5:4|) (* (- 8) |v0:9|)) (* 8 |v7:2|))))
(let ((?x21 (- 1)))
(let ((?x210 (+ (+ (* (- 2) |v0:9|) (* (- 2) |v9:0|)) (* (- 2) |v8:1|))))
(let (($x238 (and (or (<= ?x210 ?x21) (<= ?x220 ?x108)) (or (<= ?x229 5) (<= ?x235 ?x39)))))
(let ((?x42 18))
(let ((?x182 (* ?x42 |v7:2|)))
(let (($x204 (<= (+ (+ (* ?x33 |v0:9|) (* 19 |v4:5|)) ?x182) (- 12))))
(let ((?x18 (- 14)))
(let ((?x198 (+ (+ (* 7 |v4:5|) (* (- 18) |v1:8|)) (* (- 4) |v2:7|))))
(let ((?x10 (- 2)))
(let ((?x192 (+ (+ (* ?x108 |v4:5|) (* (- 18) |v9:0|)) (* 10 |v2:7|))))
(let (($x187 (<= (+ (+ (* ?x21 |v8:1|) ?x182) (* 2 |v6:3|)) (- 19))))
(let (($x298 (or (or (or (or $x187 (<= ?x192 ?x10)) (and (<= ?x198 ?x18) $x204)) $x238) $x297)))
(let ((?x77 19))
(let ((?x174 (+ (+ (* 16 |v6:3|) (* 7 |v8:1|)) (* 5 |v4:5|))))
(let ((?x165 (* 11 |v7:2|)))
(let (($x176 (or (<= (+ (+ (* ?x39 |v7:2|) (* 11 |v0:9|)) ?x165) ?x10) (<= ?x174 ?x77))))
(let ((?x54 10))
(let ((?x158 (+ (+ (* (- 4) |v0:9|) (* ?x131 |v4:5|)) (* 20 |v0:9|))))
(let ((?x150 (+ (+ (* (- 12) |v6:3|) (* (- 15) |v7:2|)) (* 15 |v1:8|))))
(let ((?x128 (+ (+ (* 16 |v8:1|) (* (- 16) |v5:4|)) (* ?x39 |v5:4|))))
(let (($x138 (and (<= ?x128 ?x10) (<= (+ (+ ?x132 (* 3 |v3:6|)) (* ?x10 |v7:2|)) ?x42))))
(let ((?x116 (+ (+ (* ?x108 |v1:8|) (* 7 |v1:8|)) (* 9 |v9:0|))))
(let ((?x47 3))
(let (($x119 (or (<= (+ (+ |v7:2| (* 2 |v0:9|)) (* ?x21 |v1:8|)) ?x47) (<= ?x116 14))))
(let (($x97 (<= (+ (+ (* (- 17) |v4:5|) (* ?x33 |v5:4|)) (* ?x47 |v8:1|)) ?x33)))
(let ((?x86 (* 4 |v0:9|)))
(let (($x98 (or (<= (+ (+ (* 8 |v1:8|) (* ?x18 |v7:2|)) ?x86) ?x30) $x97)))
(let ((?x76 (+ (+ (* 2 |v7:2|) (* 7 |v4:5|)) (* ?x10 |v2:7|))))
(let ((?x50 (- 3)))
(let (($x63 (<= (+ (+ (* ?x54 |v1:8|) (* ?x58 |v8:1|)) (* 20 |v7:2|)) ?x50)))
(let (($x64 (or (<= (+ (+ (* ?x39 |v7:2|) (* ?x42 |v0:9|)) (* ?x47 |v6:3|)) ?x50) $x63)))
(let (($x22 (<= (+ (+ (* ?x10 |v0:9|) (* (- 18) |v4:5|)) (* ?x18 |v4:5|)) ?x21)))
(let (($x35 (and $x22 (<= (+ (+ (* 20 |v3:6|) |v4:5|) (* ?x30 |v4:5|)) ?x33))))
(let (($x179 (or (and (or $x35 $x64) (and (<= ?x76 ?x77) $x98)) (or (or $x119 $x138) (or (and (<= ?x150 ?x77) (<= ?x158 ?x54)) $x176)))))
(or $x179 $x298))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

