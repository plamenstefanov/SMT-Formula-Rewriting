(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_013.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x80 (- 18)))
(let ((?x242 (+ (+ (* 10 |v9:0|) (* 4 |v4:5|)) (* ?x80 |v4:5|))))
(let ((?x235 (+ (+ (* (- 11) |v6:3|) (* 17 |v5:4|)) (* (- 12) |v5:4|))))
(let ((?x50 (- 11)))
(let ((?x225 (+ (+ (* 6 |v2:7|) (* (- 1) |v3:6|)) (* 8 |v5:4|))))
(let ((?x217 (+ (+ (* (- 7) |v7:2|) (* (- 1) |v9:0|)) (* 11 |v4:5|))))
(let ((?x30 (- 3)))
(let ((?x31 (* ?x30 |v0:9|)))
(let (($x211 (<= (+ (+ (* ?x80 |v3:6|) (* (- 13) |v0:9|)) ?x31) 18)))
(let (($x238 (or (or $x211 (<= ?x217 8)) (or (<= ?x225 ?x50) (<= ?x235 (- 6))))))
(let ((?x86 9))
(let ((?x200 (+ (+ (* 2 |v4:5|) (* 2 |v7:2|)) (* 3 |v5:4|))))
(let ((?x125 20))
(let ((?x114 3))
(let ((?x115 (* ?x114 |v8:1|)))
(let (($x196 (<= (+ (+ (* (- 17) |v1:8|) (* 7 |v8:1|)) ?x115) ?x125)))
(let (($x190 (<= (+ (+ (* 6 |v0:9|) |v7:2|) (* (- 16) |v2:7|)) (- 8))))
(let ((?x185 (+ (+ (* (- 1) |v6:3|) (* ?x50 |v9:0|)) (* (- 7) |v9:0|))))
(let ((?x177 (+ (+ (* (- 17) |v0:9|) (* (- 19) |v1:8|)) (* (- 5) |v4:5|))))
(let (($x204 (and (<= ?x177 ?x30) (or (and (<= ?x185 ?x86) $x190) (and $x196 (<= ?x200 ?x86))))))
(let ((?x163 (+ (+ (* 5 |v4:5|) (* (- 1) |v2:7|)) (* 16 |v8:1|))))
(let ((?x155 (+ (+ (* (- 16) |v6:3|) (* ?x125 |v5:4|)) (* 5 |v3:6|))))
(let ((?x146 (+ (+ (* (- 16) |v2:7|) (* 13 |v0:9|)) (* 11 |v1:8|))))
(let ((?x94 (- 1)))
(let ((?x140 (+ (+ (* 14 |v0:9|) (* 14 |v1:8|)) (* (- 14) |v3:6|))))
(let (($x166 (and (or (<= ?x140 ?x94) (<= ?x146 ?x125)) (and (<= ?x155 ?x114) (<= ?x163 ?x30)))))
(let ((?x131 (+ (+ (* (- 15) |v4:5|) (* ?x125 |v9:0|)) (* 11 |v5:4|))))
(let (($x122 (<= (+ (+ ?x115 (* 2 |v4:5|)) (* (- 16) |v7:2|)) ?x80)))
(let ((?x108 (+ (+ (* (- 13) |v3:6|) (* 4 |v7:2|)) (* (- 6) |v1:8|))))
(let ((?x100 (+ (+ (* (- 5) |v0:9|) (* ?x94 |v7:2|)) (* 19 |v4:5|))))
(let ((?x33 (- 5)))
(let (($x89 (<= (+ (+ (* 7 |v9:0|) (* ?x50 |v4:5|)) (* ?x86 |v1:8|)) ?x33)))
(let ((?x79 (+ (+ (* ?x30 |v7:2|) (* 6 |v8:1|)) (* 14 |v9:0|))))
(let (($x111 (and (or (<= ?x79 ?x80) $x89) (or (<= ?x100 10) (<= ?x108 (- 2))))))
(let ((?x66 6))
(let ((?x65 (+ (+ (* (- 8) |v3:6|) (* 4 |v4:5|)) (* (- 20) |v2:7|))))
(let ((?x49 (+ (+ (* (- 16) |v3:6|) (* 15 |v7:2|)) (* 13 |v6:3|))))
(let (($x34 (<= (+ (+ (* (- 2) |v5:4|) (* (- 13) |v3:6|)) ?x31) ?x33)))
(let ((?x20 7))
(let ((?x19 (+ (+ (* (- 13) |v5:4|) (* (- 13) |v1:8|)) (* (- 15) |v3:6|))))
(let (($x112 (or (and (or (<= ?x19 ?x20) $x34) (or (<= ?x49 ?x50) (<= ?x65 ?x66))) $x111)))
(or (or $x112 (and (or $x122 (<= ?x131 ?x86)) $x166)) (and $x204 (and $x238 (<= ?x242 ?x80))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

