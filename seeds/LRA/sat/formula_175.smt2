(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_175.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x156 (+ (+ (* 9 |v0:9|) (* 18 |v7:2|)) (* 4 |v3:6|))))
(let ((?x146 (+ (+ (* 18 |v1:8|) (* (- 5) |v6:3|)) (* 7 |v4:5|))))
(let ((?x19 4))
(let ((?x117 (* ?x19 |v1:8|)))
(let (($x136 (<= (+ (+ (* 15 |v5:4|) (* (- 20) |v1:8|)) ?x117) 20)))
(let ((?x129 (+ (+ (* 3 |v8:1|) (* (- 5) |v7:2|)) (* (- 11) |v9:0|))))
(let (($x122 (<= (+ (+ (* (- 6) |v7:2|) ?x117) (* (- 19) |v8:1|)) (- 20))))
(let ((?x109 (+ (+ (* (- 2) |v3:6|) (* 18 |v0:9|)) (* (- 17) |v2:7|))))
(let (($x138 (or (and (<= ?x109 20) $x122) (and (<= ?x129 (- 4)) $x136))))
(let ((?x96 (+ (+ (* (- 19) |v0:9|) (* (- 2) |v4:5|)) (* (- 15) |v6:3|))))
(let ((?x78 15))
(let ((?x68 (* 8 |v6:3|)))
(let (($x99 (and (<= (+ (+ (* ?x19 |v7:2|) (* (- 7) |v8:1|)) ?x68) ?x78) (<= ?x96 (- 11)))))
(let (($x79 (<= (+ (+ ?x68 (* (- 1) |v5:4|)) (* (- 14) |v5:4|)) ?x78)))
(let ((?x62 (+ (+ (* (- 10) |v6:3|) (* (- 17) |v7:2|)) (* (- 7) |v6:3|))))
(let (($x47 (<= (+ (+ (* (- 9) |v8:1|) |v3:6|) (* 11 |v7:2|)) 6)))
(let ((?x14 (- 15)))
(let ((?x36 (+ (+ (* 3 |v9:0|) (* 11 |v3:6|)) (* (- 16) |v8:1|))))
(let ((?x22 (- 5)))
(let (($x23 (<= (+ (+ (* (- 3) |v3:6|) (* ?x14 |v2:7|)) (* ?x19 |v0:9|)) ?x22)))
(let (($x101 (or (or $x23 (and (<= ?x36 ?x14) $x47)) (and (or (<= ?x62 (- 18)) $x79) $x99))))
(or (or $x101 (and $x138 (<= ?x146 9))) (<= ?x156 13))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

