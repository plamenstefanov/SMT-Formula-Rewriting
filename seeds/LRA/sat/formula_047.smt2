(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_047.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x243 (+ (+ (* (- 4) |v0:9|) (* 9 |v0:9|)) (* 4 |v9:0|))))
(let ((?x132 19))
(let ((?x236 (+ (+ (* 2 |v8:1|) (* 20 |v9:0|)) (* 6 |v8:1|))))
(let ((?x230 (+ (+ (* (- 2) |v5:4|) (* (- 17) |v9:0|)) (* 3 |v5:4|))))
(let (($x245 (and (and (<= ?x230 (- 14)) (<= ?x236 ?x132)) (<= ?x243 (- 3)))))
(let ((?x83 8))
(let ((?x92 5))
(let ((?x179 (* ?x92 |v7:2|)))
(let (($x223 (<= (+ (+ (* (- 11) |v0:9|) (* 20 |v7:2|)) ?x179) ?x83)))
(let ((?x150 9))
(let ((?x218 (+ (+ (* (- 12) |v2:7|) (* 14 |v7:2|)) (* 11 |v3:6|))))
(let ((?x210 (+ (+ (* ?x150 |v5:4|) (* (- 4) |v8:1|)) (* (- 2) |v2:7|))))
(let ((?x202 (+ (+ (* (- 18) |v0:9|) (* (- 18) |v7:2|)) (* 14 |v2:7|))))
(let (($x225 (or (or (<= ?x202 1) (<= ?x210 (- 3))) (and (<= ?x218 ?x150) $x223))))
(let ((?x192 (+ (+ (* 10 |v4:5|) (* (- 7) |v7:2|)) (* (- 15) |v9:0|))))
(let (($x186 (<= (+ (+ (* 3 |v3:6|) ?x179) (* (- 17) |v8:1|)) (- 12))))
(let ((?x57 20))
(let ((?x173 (+ (+ (* (- 11) |v3:6|) (* 12 |v2:7|)) (* (- 8) |v3:6|))))
(let ((?x167 (+ (+ (* (- 1) |v0:9|) (* 18 |v2:7|)) (* 17 |v1:8|))))
(let ((?x159 (+ (+ (* ?x132 |v8:1|) (* (- 14) |v3:6|)) (* 12 |v4:5|))))
(let (($x188 (and (and (<= ?x159 ?x150) (<= ?x167 (- 20))) (or (<= ?x173 ?x57) $x186))))
(let ((?x149 (+ (+ (* (- 7) |v1:8|) (* ?x57 |v5:4|)) (* (- 15) |v8:1|))))
(let ((?x138 (+ (+ (* (- 6) |v5:4|) (* ?x132 |v4:5|)) (* (- 8) |v7:2|))))
(let ((?x29 17))
(let ((?x124 (* (- 11) |v3:6|)))
(let (($x141 (or (<= (+ (+ (* 18 |v3:6|) (* ?x92 |v2:7|)) ?x124) ?x29) (<= ?x138 11))))
(let ((?x18 (- 2)))
(let (($x118 (<= (+ (+ (* (- 16) |v1:8|) (* ?x83 |v7:2|)) (* ?x29 |v5:4|)) ?x18)))
(let (($x110 (<= (+ (+ (* (- 7) |v1:8|) (* ?x92 |v2:7|)) (* ?x57 |v0:9|)) ?x83)))
(let ((?x67 (- 18)))
(let (($x100 (<= (+ (+ (* ?x92 |v8:1|) (* 4 |v6:3|)) (* ?x57 |v8:1|)) ?x67)))
(let ((?x86 (* 10 |v4:5|)))
(let (($x89 (<= (+ (+ (* 16 |v5:4|) (* ?x83 |v1:8|)) ?x86) (- 20))))
(let ((?x76 (+ (+ (* ?x67 |v8:1|) (* 18 |v8:1|)) (* (- 13) |v1:8|))))
(let (($x61 (<= (+ (+ (* 10 |v3:6|) (* ?x18 |v1:8|)) (* ?x57 |v7:2|)) (- 10))))
(let ((?x47 (+ (+ (* (- 4) |v2:7|) (* ?x18 |v1:8|)) (* (- 19) |v6:3|))))
(let (($x34 (<= (+ (+ (* 2 |v1:8|) (* ?x29 |v9:0|)) |v9:0|) 6)))
(let ((?x20 (+ (+ (* 0 |v4:5|) (* (- 14) |v3:6|)) (* ?x18 |v0:9|))))
(let (($x102 (or (or (or (<= ?x20 ?x18) $x34) (and (<= ?x47 16) $x61)) (and (or (<= ?x76 (- 5)) $x89) $x100))))
(and (or $x102 (or (or (and $x110 $x118) $x141) (<= ?x149 ?x150))) (or (and $x188 (<= ?x192 (- 13))) (or $x225 $x245)))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

