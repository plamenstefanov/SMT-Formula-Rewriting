(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_060.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x168 (+ (+ (* (- 4) |v4:5|) (* 6 |v6:3|)) (* 5 |v2:7|))))
(let ((?x157 (+ (+ (* (- 9) |v9:0|) (* (- 18) |v9:0|)) (* 14 |v3:6|))))
(let ((?x149 (+ (+ (* 6 |v2:7|) (* (- 3) |v0:9|)) (* 5 |v6:3|))))
(let ((?x136 (+ (+ (* 20 |v3:6|) (* (- 5) |v0:9|)) (* (- 15) |v1:8|))))
(let ((?x124 (+ (+ (* (- 10) |v6:3|) (* 14 |v4:5|)) (* 12 |v0:9|))))
(let (($x161 (and (or (<= ?x124 10) (<= ?x136 (- 4))) (and (<= ?x149 7) (<= ?x157 11)))))
(let ((?x110 (+ (+ (* 17 |v8:1|) (* (- 1) |v4:5|)) (* 13 |v0:9|))))
(let ((?x75 (- 18)))
(let ((?x98 (+ (+ (* (- 6) |v4:5|) (* (- 13) |v4:5|)) (* 18 |v4:5|))))
(let ((?x22 (- 17)))
(let ((?x89 (+ (+ (* (- 14) |v7:2|) (* 18 |v7:2|)) (* 9 |v4:5|))))
(let ((?x48 (- 9)))
(let ((?x77 (+ (+ (* 20 |v5:4|) (* (- 13) |v8:1|)) (* ?x75 |v1:8|))))
(let (($x114 (and (or (<= ?x77 ?x48) (<= ?x89 ?x22)) (or (<= ?x98 ?x75) (<= ?x110 (- 10))))))
(let ((?x65 (- 13)))
(let ((?x64 (+ (+ (* (- 12) |v9:0|) (* (- 3) |v5:4|)) (* (- 20) |v9:0|))))
(let ((?x50 (+ (+ (* (- 8) |v3:6|) (* 2 |v9:0|)) (* ?x48 |v6:3|))))
(let ((?x35 (+ (+ (* ?x22 |v3:6|) (* (- 12) |v2:7|)) (* 16 |v1:8|))))
(let (($x67 (and (or (<= ?x35 4) (<= ?x50 (- 2))) (<= ?x64 ?x65))))
(let ((?x21 (+ (+ (* 3 |v8:1|) (* 18 |v6:3|)) (* 17 |v2:7|))))
(or (or (or (<= ?x21 ?x22) $x67) (or $x114 $x161)) (<= ?x168 7)))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

