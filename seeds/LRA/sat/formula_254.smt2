(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_254.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x130 (- 17)))
(let ((?x276 (+ (+ (* (- 7) |v4:5|) (* 13 |v0:9|)) (* (- 10) |v4:5|))))
(let (($x269 (<= (+ (+ |v9:0| (* (- 11) |v6:3|)) (* (- 12) |v4:5|)) (- 8))))
(let ((?x262 (+ (+ (* (- 4) |v0:9|) (* (- 18) |v8:1|)) (* (- 6) |v1:8|))))
(let ((?x14 13))
(let ((?x255 (+ (+ (* (- 2) |v7:2|) (* 2 |v0:9|)) (* 14 |v5:4|))))
(let ((?x248 (+ (+ (* (- 11) |v0:9|) (* ?x14 |v7:2|)) (* 4 |v0:9|))))
(let (($x271 (or (or (<= ?x248 (- 12)) (<= ?x255 ?x14)) (and (<= ?x262 6) $x269))))
(let ((?x76 7))
(let ((?x238 (+ (+ (* (- 16) |v1:8|) (* ?x130 |v5:4|)) (* 5 |v0:9|))))
(let ((?x217 (- 7)))
(let ((?x232 (+ (+ (* (- 3) |v8:1|) (* 11 |v0:9|)) (* (- 10) |v7:2|))))
(let ((?x224 (+ (+ (* ?x217 |v6:3|) (* 17 |v1:8|)) (* 4 |v8:1|))))
(let ((?x30 (- 11)))
(let ((?x213 (+ (+ (* 0 |v9:0|) (* 19 |v7:2|)) (* ?x14 |v8:1|))))
(let (($x241 (or (and (<= ?x213 ?x30) (<= ?x224 16)) (or (<= ?x232 ?x217) (<= ?x238 ?x76)))))
(let ((?x205 (+ (+ (* (- 20) |v4:5|) (* ?x76 |v5:4|)) (* (- 20) |v0:9|))))
(let ((?x199 (+ (+ (* (- 19) |v7:2|) (* (- 20) |v1:8|)) (* 12 |v5:4|))))
(let ((?x18 (- 9)))
(let ((?x181 (* (- 16) |v5:4|)))
(let (($x193 (<= (+ (+ (* (- 3) |v3:6|) (* 14 |v1:8|)) ?x181) ?x18)))
(let ((?x38 (- 5)))
(let (($x194 (or (<= (+ (+ ?x181 (* ?x18 |v8:1|)) (* 6 |v0:9|)) ?x38) $x193)))
(let (($x279 (and (or (or $x194 (and (<= ?x199 (- 1)) (<= ?x205 ?x130))) $x241) (or $x271 (<= ?x276 ?x130)))))
(let ((?x26 (- 19)))
(let ((?x173 (+ (+ (* (- 4) |v1:8|) (* ?x38 |v9:0|)) (* 10 |v5:4|))))
(let ((?x96 0))
(let ((?x149 (* (- 6) |v8:1|)))
(let (($x175 (and (<= (+ (+ (* ?x30 |v6:3|) (* (- 3) |v0:9|)) ?x149) ?x96) (<= ?x173 ?x26))))
(let ((?x160 (+ (+ (* 20 |v1:8|) (* 2 |v9:0|)) (* 18 |v8:1|))))
(let (($x162 (or (<= (+ (+ (* (- 2) |v5:4|) ?x149) (* ?x130 |v9:0|)) ?x130) (<= ?x160 ?x18))))
(let ((?x88 (- 10)))
(let ((?x140 (+ (+ (* 11 |v9:0|) (* (- 15) |v7:2|)) (* ?x76 |v9:0|))))
(let ((?x132 (+ (+ (* (- 18) |v0:9|) (* 18 |v2:7|)) (* ?x130 |v1:8|))))
(let ((?x123 (+ (+ (* (- 3) |v1:8|) (* 18 |v4:5|)) (* (- 14) |v7:2|))))
(let ((?x113 14))
(let ((?x110 18))
(let ((?x111 (* ?x110 |v4:5|)))
(let (($x114 (<= (+ (+ (* 19 |v5:4|) (* (- 13) |v9:0|)) ?x111) ?x113)))
(let (($x143 (or (or $x114 (<= ?x123 3)) (or (<= ?x132 9) (<= ?x140 ?x88)))))
(let ((?x70 (- 4)))
(let (($x99 (<= (+ (+ (* ?x38 |v9:0|) (* 12 |v3:6|)) (* ?x96 |v8:1|)) ?x70)))
(let (($x89 (<= (+ (+ (* ?x30 |v9:0|) (* ?x76 |v8:1|)) (* 2 |v8:1|)) ?x88)))
(let ((?x75 (+ (+ (* ?x70 |v4:5|) (* (- 20) |v3:6|)) (* (- 18) |v2:7|))))
(let ((?x43 (- 18)))
(let ((?x44 (* ?x43 |v3:6|)))
(let (($x66 (<= (+ (+ (* 3 |v5:4|) (* 4 |v6:3|)) ?x44) ?x43)))
(let (($x55 (<= (+ (+ ?x44 (* (- 13) |v0:9|)) (* 5 |v9:0|)) 9)))
(let (($x39 (<= (+ (+ (* ?x26 |v0:9|) (* ?x30 |v1:8|)) (* (- 1) |v2:7|)) ?x38)))
(let (($x22 (<= (+ (+ (* (- 20) |v6:3|) (* ?x14 |v5:4|)) (* ?x18 |v5:4|)) (- 15))))
(let (($x102 (and (and $x22 (and $x39 $x55)) (or (and $x66 (<= ?x75 ?x76)) (and $x89 $x99)))))
(or (and $x102 (or $x143 (and $x162 $x175))) $x279)))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

