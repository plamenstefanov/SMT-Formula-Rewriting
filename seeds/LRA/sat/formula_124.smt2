(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_124.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x142 13))
(let ((?x273 (+ (+ (* (- 8) |v0:9|) (* 5 |v2:7|)) (* 15 |v3:6|))))
(let ((?x116 5))
(let ((?x268 (+ (+ (* (- 13) |v0:9|) (* (- 14) |v1:8|)) (* (- 10) |v2:7|))))
(let ((?x139 (- 16)))
(let ((?x262 (+ (+ (* 17 |v6:3|) (* 7 |v9:0|)) (* (- 3) |v7:2|))))
(let ((?x251 (+ (+ (* (- 6) |v7:2|) (* 17 |v0:9|)) (* (- 4) |v8:1|))))
(let ((?x106 9))
(let ((?x244 (+ (+ (* 2 |v6:3|) (* 3 |v7:2|)) (* (- 3) |v4:5|))))
(let ((?x125 (- 14)))
(let ((?x237 (+ (+ (* (- 8) |v0:9|) (* (- 1) |v0:9|)) (* 16 |v1:8|))))
(let ((?x210 (- 10)))
(let ((?x231 (+ (+ (* (- 18) |v3:6|) (* (- 18) |v2:7|)) (* (- 7) |v3:6|))))
(let (($x255 (and (or (<= ?x231 ?x210) (<= ?x237 ?x125)) (and (<= ?x244 ?x106) (<= ?x251 (- 5))))))
(let ((?x10 (- 7)))
(let (($x223 (<= (+ (+ (* (- 19) |v0:9|) (* 12 |v2:7|)) |v9:0|) ?x10)))
(let ((?x83 4))
(let ((?x215 (+ (+ (* ?x210 |v0:9|) (* 8 |v6:3|)) (* (- 11) |v2:7|))))
(let ((?x60 11))
(let ((?x206 (+ (+ (* 14 |v2:7|) (* 3 |v4:5|)) (* (- 17) |v5:4|))))
(let ((?x48 (* (- 9) |v2:7|)))
(let (($x197 (<= (+ (+ (* (- 12) |v1:8|) (* (- 15) |v4:5|)) ?x48) ?x60)))
(let ((?x188 (+ (+ (* ?x106 |v0:9|) (* 17 |v1:8|)) (* 10 |v5:4|))))
(let (($x182 (<= (+ (+ |v9:0| (* 12 |v3:6|)) (* 10 |v3:6|)) ?x60)))
(let ((?x175 (+ (+ (* (- 11) |v1:8|) (* 12 |v9:0|)) (* 8 |v4:5|))))
(let (($x177 (or (<= (+ (+ (* ?x139 |v8:1|) |v1:8|) (* ?x142 |v8:1|)) 12) (<= ?x175 ?x106))))
(let (($x226 (and (and $x177 (and $x182 (<= ?x188 (- 8)))) (and (or $x197 (<= ?x206 ?x60)) (or (<= ?x215 ?x83) $x223)))))
(let (($x278 (or $x226 (or $x255 (or (<= ?x262 ?x139) (and (<= ?x268 ?x116) (<= ?x273 ?x142)))))))
(let ((?x63 (- 3)))
(let (($x157 (<= (+ (+ (* 17 |v4:5|) (* 14 |v9:0|)) |v5:4|) ?x63)))
(let (($x158 (or (<= (+ (+ |v8:1| (* (- 18) |v5:4|)) |v5:4|) 1) $x157)))
(let (($x145 (<= (+ (+ (* (- 6) |v5:4|) (* ?x139 |v6:3|)) (* ?x142 |v9:0|)) ?x142)))
(let ((?x133 12))
(let ((?x132 (+ (+ (* 6 |v5:4|) (* ?x125 |v8:1|)) (* (- 6) |v3:6|))))
(let ((?x120 (+ (+ (* (- 12) |v8:1|) (* ?x116 |v4:5|)) (* 14 |v0:9|))))
(let ((?x108 (+ (+ (* 16 |v4:5|) (* 16 |v9:0|)) (* ?x106 |v7:2|))))
(let ((?x96 (+ (+ (* 15 |v0:9|) (* (- 15) |v0:9|)) (* ?x83 |v5:4|))))
(let ((?x39 (- 1)))
(let ((?x85 (+ (+ (* 0 |v2:7|) (* (- 13) |v9:0|)) (* ?x83 |v8:1|))))
(let ((?x77 (- 15)))
(let ((?x76 (+ (+ (* (- 13) |v7:2|) (* ?x10 |v2:7|)) (* 6 |v9:0|))))
(let (($x112 (or (or (<= ?x76 ?x77) (<= ?x85 ?x39)) (or (<= ?x96 2) (<= ?x108 1)))))
(let ((?x62 (+ (+ (* 0 |v9:0|) (* (- 18) |v8:1|)) (* ?x60 |v4:5|))))
(let (($x51 (<= (+ (+ (* ?x39 |v4:5|) (* (- 4) |v2:7|)) ?x48) 18)))
(let ((?x33 (+ (+ (* (- 20) |v8:1|) (* 10 |v1:8|)) (* (- 12) |v0:9|))))
(let ((?x12 0))
(let (($x20 (<= (+ (+ (* ?x10 |v8:1|) (* ?x12 |v8:1|)) (* 14 |v7:2|)) ?x12)))
(let (($x113 (and (or (and $x20 (<= ?x33 (- 20))) (or $x51 (<= ?x62 ?x63))) $x112)))
(and (or $x113 (and (<= ?x120 ?x106) (and (or (<= ?x132 ?x133) $x145) $x158))) $x278))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

