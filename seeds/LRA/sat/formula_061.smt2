(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_061.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x270 (+ (+ (* (- 11) |v9:0|) (* (- 14) |v5:4|)) (* 17 |v0:9|))))
(let ((?x85 (- 16)))
(let ((?x265 (+ (+ (* 17 |v1:8|) (* 9 |v5:4|)) (* (- 7) |v3:6|))))
(let ((?x30 10))
(let ((?x258 (+ (+ (* (- 14) |v5:4|) (* 15 |v4:5|)) (* (- 19) |v3:6|))))
(let ((?x71 (- 8)))
(let ((?x252 (+ (+ (* 19 |v3:6|) (* (- 4) |v5:4|)) (* (- 19) |v8:1|))))
(let (($x273 (or (and (<= ?x252 ?x71) (<= ?x258 ?x30)) (or (<= ?x265 ?x85) (<= ?x270 (- 5))))))
(let ((?x243 (+ (+ (* (- 6) |v3:6|) (* 12 |v3:6|)) (* (- 1) |v9:0|))))
(let ((?x58 (- 4)))
(let ((?x130 16))
(let ((?x195 (* ?x130 |v3:6|)))
(let (($x245 (or (<= (+ (+ (* ?x130 |v8:1|) (* 11 |v6:3|)) ?x195) ?x58) (<= ?x243 (- 17)))))
(let ((?x232 (+ (+ (* (- 11) |v1:8|) (* (- 18) |v2:7|)) (* 4 |v3:6|))))
(let ((?x91 11))
(let (($x224 (<= (+ (+ (* (- 13) |v8:1|) |v6:3|) (* (- 19) |v4:5|)) ?x91)))
(let ((?x119 (- 9)))
(let (($x216 (<= (+ (+ (* ?x30 |v2:7|) (* ?x71 |v0:9|)) (* 0 |v4:5|)) ?x119)))
(let ((?x14 7))
(let ((?x209 (+ (+ (* (- 19) |v9:0|) (* ?x71 |v8:1|)) (* 20 |v0:9|))))
(let ((?x199 4))
(let ((?x45 6))
(let (($x204 (and (<= (+ (+ (* ?x130 |v6:3|) (* (- 15) |v6:3|)) ?x195) ?x45) (<= (+ (+ (* ?x85 |v5:4|) (* ?x199 |v8:1|)) (* ?x85 |v1:8|)) ?x199))))
(let ((?x81 0))
(let ((?x82 (* ?x81 |v6:3|)))
(let (($x187 (<= (+ (+ (* (- 1) |v3:6|) (* (- 10) |v7:2|)) ?x82) ?x81)))
(let (($x182 (<= (+ (+ (* ?x58 |v8:1|) (* ?x119 |v3:6|)) (* (- 6) |v4:5|)) ?x119)))
(let (($x189 (or (<= (+ (+ |v2:7| (* 2 |v7:2|)) |v5:4|) ?x119) (and $x182 $x187))))
(let (($x275 (or (or $x189 (and $x204 (or (<= ?x209 ?x14) $x216))) (and (or (and $x224 (<= ?x232 (- 7))) $x245) $x273))))
(let ((?x111 20))
(let ((?x161 (- 19)))
(let ((?x160 (+ (+ (* (- 10) |v8:1|) (* ?x14 |v8:1|)) (* 17 |v8:1|))))
(let (($x167 (and (<= ?x160 ?x161) (<= (+ (+ (* ?x119 |v0:9|) |v0:9|) (* (- 14) |v2:7|)) ?x111))))
(let ((?x27 (- 1)))
(let ((?x28 (* ?x27 |v2:7|)))
(let (($x168 (or (<= (+ (+ (* (- 2) |v9:0|) (* ?x58 |v6:3|)) ?x28) ?x111) $x167)))
(let ((?x144 (+ (+ (* 9 |v1:8|) (* 15 |v6:3|)) (* (- 11) |v5:4|))))
(let (($x146 (or (<= (+ (+ (* ?x45 |v8:1|) (* ?x130 |v4:5|)) (* ?x58 |v5:4|)) ?x30) (<= ?x144 ?x130))))
(let ((?x125 (+ (+ (* 5 |v8:1|) (* ?x119 |v6:3|)) (* (- 5) |v5:4|))))
(let ((?x54 13))
(let (($x114 (<= (+ (+ (* (- 17) |v8:1|) (* ?x85 |v5:4|)) (* ?x111 |v5:4|)) ?x54)))
(let (($x101 (<= (+ (+ (* ?x91 |v5:4|) (* ?x30 |v8:1|)) (* 17 |v6:3|)) 18)))
(let (($x88 (<= (+ (+ (* (- 6) |v5:4|) ?x82) (* ?x85 |v1:8|)) 14)))
(let ((?x77 (+ (+ (* (- 14) |v2:7|) (* ?x71 |v7:2|)) (* (- 13) |v2:7|))))
(let (($x65 (<= (+ (+ (* ?x54 |v1:8|) (* ?x58 |v4:5|)) (* (- 6) |v3:6|)) ?x30)))
(let (($x52 (<= (+ (+ (* ?x30 |v9:0|) (* ?x45 |v3:6|)) (* 12 |v0:9|)) 3)))
(let ((?x38 (- 10)))
(let ((?x22 9))
(let ((?x20 (* 12 |v3:6|)))
(let (($x40 (or (<= (+ (+ (* 14 |v6:3|) (* ?x14 |v5:4|)) ?x20) ?x22) (<= (+ (+ ?x28 (* ?x30 |v3:6|)) (* (- 14) |v1:8|)) ?x38))))
(let (($x170 (and (or (and $x40 (or $x52 $x65)) (or (<= ?x77 ?x54) (and $x88 $x101))) (or (or (or $x114 (<= ?x125 18)) $x146) $x168))))
(or $x170 $x275)))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

