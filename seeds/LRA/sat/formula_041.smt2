(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_041.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x265 (+ (+ (* (- 14) |v2:7|) (* (- 16) |v2:7|)) (* (- 18) |v9:0|))))
(let ((?x133 (- 19)))
(let ((?x259 (+ (+ (* (- 3) |v4:5|) (* (- 10) |v8:1|)) (* 9 |v4:5|))))
(let ((?x51 (- 12)))
(let ((?x250 (+ (+ (* 0 |v6:3|) (* (- 4) |v2:7|)) (* 12 |v9:0|))))
(let (($x246 (<= (+ (+ (* 0 |v7:2|) |v9:0|) (* (- 10) |v0:9|)) ?x51)))
(let (($x268 (or (and $x246 (<= ?x250 ?x51)) (and (<= ?x259 ?x133) (<= ?x265 6)))))
(let ((?x70 (- 15)))
(let ((?x180 (* 13 |v4:5|)))
(let ((?x94 15))
(let ((?x233 (+ (+ (* (- 11) |v0:9|) (* (- 10) |v3:6|)) (* (- 20) |v9:0|))))
(let (($x240 (and (<= ?x233 ?x94) (<= (+ (+ (* (- 6) |v7:2|) (* ?x133 |v6:3|)) ?x180) ?x70))))
(let (($x225 (<= (+ (+ (* (- 7) |v6:3|) |v9:0|) (* (- 18) |v3:6|)) 13)))
(let ((?x221 (+ (+ (* (- 4) |v8:1|) (* 3 |v8:1|)) (* 0 |v5:4|))))
(let ((?x211 (+ (+ (* (- 11) |v9:0|) (* 11 |v8:1|)) (* 6 |v5:4|))))
(let ((?x18 (- 11)))
(let ((?x203 (+ (+ (* 2 |v2:7|) (* (- 2) |v6:3|)) (* 17 |v2:7|))))
(let ((?x194 (* (- 18) |v3:6|)))
(let (($x196 (<= (+ (+ (* 20 |v1:8|) (* (- 16) |v4:5|)) ?x194) (- 9))))
(let (($x186 (<= (+ (+ ?x180 (* (- 7) |v6:3|)) (* 2 |v6:3|)) (- 8))))
(let ((?x85 0))
(let ((?x173 (+ (+ (* 12 |v2:7|) (* 4 |v6:3|)) (* ?x94 |v4:5|))))
(let ((?x37 (- 4)))
(let ((?x162 (+ (+ (* 5 |v9:0|) (* (- 9) |v0:9|)) (* 16 |v6:3|))))
(let ((?x153 (+ (+ (* (- 16) |v6:3|) (* ?x133 |v9:0|)) (* 7 |v8:1|))))
(let (($x216 (or (and (<= ?x153 (- 13)) (and (<= ?x162 ?x37) (<= ?x173 ?x85))) (and (and $x186 $x196) (or (<= ?x203 ?x18) (<= ?x211 10))))))
(let ((?x14 16))
(let (($x145 (<= (+ (+ (* ?x85 |v6:3|) (* ?x94 |v0:9|)) (* (- 5) |v4:5|)) ?x14)))
(let ((?x21 (- 2)))
(let ((?x125 (+ (+ (* 8 |v3:6|) (* (- 6) |v8:1|)) (* ?x70 |v7:2|))))
(let (($x135 (and (<= ?x125 ?x21) (<= (+ (+ (* ?x70 |v5:4|) (* ?x51 |v3:6|)) (* ?x14 |v3:6|)) ?x133))))
(let (($x119 (<= (+ (+ (* ?x21 |v3:6|) (* (- 14) |v1:8|)) (* ?x70 |v6:3|)) 1)))
(let ((?x65 5))
(let ((?x108 (+ (+ (* ?x65 |v7:2|) (* 3 |v1:8|)) (* 3 |v5:4|))))
(let ((?x100 (+ (+ (* 9 |v1:8|) (* ?x94 |v8:1|)) (* 18 |v6:3|))))
(let ((?x34 7))
(let (($x90 (<= (+ (+ (* (- 20) |v6:3|) (* ?x85 |v4:5|)) (* ?x65 |v6:3|)) ?x34)))
(let ((?x77 (+ (+ (* ?x70 |v4:5|) (* (- 16) |v3:6|)) (* 2 |v7:2|))))
(let ((?x64 (+ (+ (* ?x51 |v9:0|) (* 11 |v1:8|)) (* 8 |v9:0|))))
(let (($x103 (or (or (<= ?x64 ?x65) (<= ?x77 (- 17))) (and $x90 (<= ?x100 (- 17))))))
(let ((?x50 (+ (+ (* 3 |v1:8|) (* ?x21 |v6:3|)) (* (- 16) |v7:2|))))
(let ((?x36 (+ (+ (* (- 6) |v3:6|) (* (- 7) |v5:4|)) (* ?x34 |v9:0|))))
(let (($x22 (<= (+ (+ (* 9 |v9:0|) (* ?x14 |v1:8|)) (* ?x18 |v9:0|)) ?x21)))
(let (($x147 (and (or (or $x22 (or (<= ?x36 ?x37) (<= ?x50 ?x51))) $x103) (or (and (and (<= ?x108 ?x65) $x119) $x135) $x145))))
(or $x147 (or $x216 (or (and (and (<= ?x221 20) $x225) $x240) $x268))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

