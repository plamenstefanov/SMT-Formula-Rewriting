(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_188.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x55 (- 11)))
(let ((?x256 (+ (+ (* 10 |v0:9|) (* (- 3) |v3:6|)) (* ?x55 |v7:2|))))
(let ((?x201 13))
(let ((?x250 (+ (+ (* (- 19) |v9:0|) (* (- 16) |v5:4|)) (* ?x55 |v5:4|))))
(let ((?x18 8))
(let ((?x19 (* ?x18 |v1:8|)))
(let (($x244 (<= (+ (+ (* (- 17) |v7:2|) (* (- 10) |v0:9|)) ?x19) ?x55)))
(let ((?x238 (+ (+ (* 18 |v2:7|) (* 18 |v0:9|)) (* 12 |v9:0|))))
(let ((?x182 18))
(let ((?x232 (+ (+ (* 20 |v2:7|) (* 9 |v6:3|)) (* (- 15) |v4:5|))))
(let (($x260 (or (<= ?x232 ?x182) (and (and (<= ?x238 ?x55) $x244) (or (<= ?x250 ?x201) (<= ?x256 ?x55))))))
(let ((?x209 (- 16)))
(let ((?x224 (+ (+ (* 12 |v0:9|) (* 9 |v8:1|)) (* (- 18) |v3:6|))))
(let ((?x219 (+ (+ (* 20 |v3:6|) (* 20 |v0:9|)) (* (- 15) |v8:1|))))
(let ((?x140 (- 15)))
(let (($x212 (<= (+ (+ (* 15 |v4:5|) (* ?x201 |v2:7|)) (* ?x209 |v3:6|)) ?x140)))
(let ((?x107 (- 20)))
(let ((?x203 (+ (+ (* 3 |v8:1|) (* (- 14) |v0:9|)) (* ?x201 |v9:0|))))
(let ((?x103 (- 12)))
(let (($x193 (<= (+ (+ (* 12 |v0:9|) (* ?x103 |v0:9|)) (* ?x107 |v2:7|)) ?x103)))
(let (($x188 (<= (+ (+ (* ?x55 |v3:6|) (* ?x182 |v3:6|)) (* (- 1) |v2:7|)) 1)))
(let (($x227 (and (and (and $x188 $x193) (and (<= ?x203 ?x107) $x212)) (and (<= ?x219 0) (<= ?x224 ?x209)))))
(let ((?x21 10))
(let ((?x175 (+ (+ (* 14 |v9:0|) (* 11 |v3:6|)) (* (- 8) |v3:6|))))
(let ((?x14 7))
(let ((?x166 (+ (+ (* 20 |v1:8|) (* ?x55 |v6:3|)) (* (- 13) |v7:2|))))
(let ((?x158 9))
(let ((?x157 (+ (+ (* (- 2) |v3:6|) (* ?x103 |v4:5|)) (* 12 |v3:6|))))
(let (($x147 (<= (+ (+ (* ?x140 |v6:3|) (* ?x14 |v0:9|)) (* ?x140 |v1:8|)) (- 14))))
(let ((?x136 (+ (+ (* 15 |v6:3|) (* ?x18 |v6:3|)) (* 0 |v1:8|))))
(let ((?x127 12))
(let ((?x128 (* ?x127 |v0:9|)))
(let (($x130 (<= (+ (+ (* (- 1) |v4:5|) (* (- 7) |v7:2|)) ?x128) ?x103)))
(let ((?x79 (- 8)))
(let (($x120 (<= (+ (+ (* 15 |v6:3|) |v7:2|) (* 15 |v3:6|)) ?x79)))
(let (($x178 (or (or (and $x120 $x130) (or (<= ?x136 ?x103) $x147)) (or (and (<= ?x157 ?x158) (<= ?x166 ?x14)) (<= ?x175 ?x21)))))
(let (($x111 (<= (+ (+ (* (- 3) |v8:1|) (* ?x103 |v8:1|)) (* ?x107 |v4:5|)) (- 17))))
(let ((?x33 16))
(let ((?x95 (+ (+ (* (- 4) |v6:3|) (* 5 |v9:0|)) (* 20 |v9:0|))))
(let ((?x81 (+ (+ (* (- 10) |v4:5|) (* 2 |v5:4|)) (* ?x79 |v9:0|))))
(let (($x72 (<= (+ (+ (* ?x33 |v6:3|) (* ?x18 |v6:3|)) (* (- 6) |v9:0|)) ?x21)))
(let ((?x61 (+ (+ (* 19 |v1:8|) (* ?x55 |v4:5|)) (* (- 1) |v1:8|))))
(let ((?x39 (- 19)))
(let (($x48 (<= (+ (+ (* ?x39 |v0:9|) (* 2 |v5:4|)) (* ?x39 |v6:3|)) ?x39)))
(let ((?x35 (+ (+ (* (- 6) |v6:3|) (* 11 |v6:3|)) (* ?x33 |v0:9|))))
(let (($x37 (and (<= (+ (+ (* 15 |v7:2|) (* ?x14 |v1:8|)) ?x19) ?x21) (<= ?x35 ?x18))))
(let (($x114 (or (and $x37 (and $x48 (<= ?x61 1))) (and (or $x72 (<= ?x81 (- 18))) (and (<= ?x95 ?x33) $x111)))))
(and (and $x114 $x178) (or $x227 $x260))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

