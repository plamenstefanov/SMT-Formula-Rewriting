(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_017.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x56 (- 14)))
(let ((?x57 (* ?x56 |v3:6|)))
(let (($x271 (<= (+ (+ (* 3 |v0:9|) (* 20 |v9:0|)) ?x57) ?x56)))
(let ((?x201 20))
(let ((?x202 (* ?x201 |v1:8|)))
(let (($x267 (<= (+ (+ (* 9 |v4:5|) (* (- 10) |v5:4|)) ?x202) 16)))
(let ((?x261 (+ (+ (* (- 1) |v6:3|) (* (- 18) |v3:6|)) (* 13 |v0:9|))))
(let ((?x19 11))
(let ((?x140 6))
(let ((?x141 (* ?x140 |v5:4|)))
(let (($x256 (<= (+ (+ (* 12 |v6:3|) (* 9 |v6:3|)) ?x141) ?x19)))
(let ((?x29 (- 16)))
(let (($x249 (<= (+ (+ (* 12 |v5:4|) (* ?x201 |v6:3|)) (* ?x201 |v5:4|)) ?x29)))
(let ((?x241 (+ (+ (* (- 10) |v1:8|) (* 17 |v4:5|)) (* 16 |v8:1|))))
(let ((?x43 (- 10)))
(let ((?x231 (* ?x43 |v5:4|)))
(let (($x233 (<= (+ (+ (* (- 1) |v1:8|) (* 8 |v5:4|)) ?x231) ?x140)))
(let ((?x33 17))
(let ((?x226 (+ (+ (* (- 18) |v1:8|) (* 4 |v8:1|)) (* 8 |v1:8|))))
(let (($x274 (and (or (or (<= ?x226 ?x33) $x233) (and (<= ?x241 (- 20)) $x249)) (or (and $x256 (<= ?x261 (- 3))) (or $x267 $x271)))))
(let ((?x215 (+ (+ (* (- 19) |v6:3|) (* ?x140 |v4:5|)) (* (- 3) |v8:1|))))
(let (($x217 (and (<= (+ (+ ?x202 (* 4 |v4:5|)) |v6:3|) ?x33) (<= ?x215 19))))
(let ((?x197 (+ (+ (* ?x29 |v1:8|) (* 10 |v6:3|)) (* (- 9) |v9:0|))))
(let ((?x190 (+ (+ (* (- 11) |v8:1|) (* (- 11) |v8:1|)) (* 14 |v8:1|))))
(let (($x180 (<= (+ (+ |v4:5| (* (- 4) |v6:3|)) (* ?x140 |v1:8|)) (- 15))))
(let ((?x169 (+ (+ (* (- 8) |v6:3|) (* 13 |v8:1|)) (* (- 1) |v8:1|))))
(let ((?x162 (+ (+ (* (- 9) |v1:8|) (* 2 |v3:6|)) (* 18 |v6:3|))))
(let (($x219 (or (or (and (<= ?x162 ?x140) (<= ?x169 ?x29)) $x180) (or (or (<= ?x190 (- 17)) (<= ?x197 (- 17))) $x217))))
(let ((?x60 0))
(let (($x151 (<= (+ (+ (* (- 8) |v8:1|) |v9:0|) (* 12 |v0:9|)) ?x60)))
(let ((?x67 2))
(let (($x152 (or (<= (+ (+ (* 10 |v3:6|) ?x141) (* ?x56 |v9:0|)) ?x67) $x151)))
(let ((?x100 (- 19)))
(let (($x137 (<= (+ (+ (* ?x56 |v1:8|) (* ?x29 |v6:3|)) (* 19 |v5:4|)) ?x100)))
(let ((?x128 (+ (+ (* 13 |v1:8|) (* 9 |v7:2|)) (* 3 |v3:6|))))
(let ((?x117 (+ (+ (* 3 |v0:9|) (* 18 |v9:0|)) (* (- 18) |v6:3|))))
(let ((?x106 (+ (+ (* ?x100 |v5:4|) (* (- 18) |v0:9|)) (* (- 13) |v4:5|))))
(let ((?x95 (+ (+ (* ?x43 |v1:8|) (* (- 6) |v6:3|)) (* (- 18) |v2:7|))))
(let ((?x22 10))
(let (($x86 (<= (+ (+ (* ?x22 |v9:0|) (* 15 |v7:2|)) (* ?x60 |v1:8|)) ?x22)))
(let (($x121 (or (or $x86 (<= ?x95 (- 7))) (and (<= ?x106 (- 7)) (<= ?x117 1)))))
(let (($x76 (<= (+ (+ (* ?x67 |v4:5|) (* ?x67 |v2:7|)) (* 13 |v3:6|)) ?x19)))
(let (($x63 (<= (+ (+ (* (- 5) |v4:5|) ?x57) (* ?x60 |v5:4|)) (- 12))))
(let ((?x49 12))
(let (($x50 (<= (+ (+ (* ?x22 |v3:6|) (* ?x43 |v1:8|)) (* (- 13) |v9:0|)) ?x49)))
(let ((?x36 (- 13)))
(let (($x37 (<= (+ (+ (* (- 8) |v6:3|) (* ?x29 |v3:6|)) (* ?x33 |v5:4|)) ?x36)))
(let ((?x21 (+ (+ (* (- 2) |v5:4|) (* (- 12) |v6:3|)) (* ?x19 |v3:6|))))
(let (($x155 (or (and (or (or (<= ?x21 ?x22) $x37) (or $x50 $x63)) $x76) (and $x121 (and (and (<= ?x128 ?x43) $x137) $x152)))))
(or $x155 (or $x219 $x274))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

