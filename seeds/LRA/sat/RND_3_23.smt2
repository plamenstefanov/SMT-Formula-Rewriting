(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status sat)
(declare-fun y1 () Real)
(declare-fun y2 () Real)
(declare-fun y3 () Real)
(declare-fun x1 () Real)
(assert (exists ((?y1 Real)) (exists ((?y2 Real)) (let ((?v_0 (* 89 ?y2)) (?v_1 (* 35 x1))) (and (or (forall ((?y3 Real)) (and (or (and (or (and (>= (+ (* (- 14) ?y3) (* (- 77) ?y2)) 64) (not (= (+ (+ (+ (* 46 ?y3) (* (- 48) ?y2)) (* 4 ?y1)) (* (- 62) x1)) (- 54)))) (or (<= (+ (+ (* (- 29) ?y3) (* (- 79) ?y1)) (* 39 x1)) 32) (not (= (+ (* (- 70) ?y2) (* (- 25) x1)) (- 39))))) (and (= (+ (* (- 4) ?y1) (* 9 x1)) (- 30)) (<= (+ (+ (+ (* (- 44) ?y3) (* 81 ?y2)) (* 29 ?y1)) (* (- 19) x1)) 84))) (or (and (<= (+ (* 17 ?y1) (* (- 11) x1)) 0) (< (+ (+ (+ (* (- 74) ?y3) (* (- 66) ?y2)) (* (- 46) ?y1)) (* 52 x1)) 25)) (not (= (+ (+ (* 42 ?y3) (* (- 2) ?y2)) (* 7 x1)) 36)))) (or (and (or (>= (+ (+ (* (- 41) ?y2) (* (- 1) ?y1)) (* 62 x1)) 0) (>= (+ (+ (+ (* 10 ?y3) (* 17 ?y2)) (* (- 74) ?y1)) (* (- 79) x1)) (- 14))) (or (= (+ (* 95 ?y3) (* (- 88) ?y2)) (- 24)) (> (+ (+ (+ (* (- 15) ?y3) (* (- 37) ?y2)) (* (- 63) ?y1)) (* 27 x1)) (- 79)))) (or (and (not (= (+ (+ (* (- 55) ?y3) (* (- 40) ?y2)) (* (- 35) x1)) 0)) (> (* 59 ?y1) 80)) (or (< (+ (+ (+ (* (- 34) ?y3) (* (- 4) ?y2)) (* 46 ?y1)) (* (- 32) x1)) (- 80)) (< (+ (+ (+ (* (- 77) ?y3) (* 21 ?y2)) (* 30 ?y1)) (* (- 100) x1)) 19)))))) (and (and (and (and (and (= (+ (* (- 19) ?y1) (* 94 x1)) (- 93)) (<= (+ (* 61 ?y1) (* (- 31) x1)) 75)) (or (<= (+ (+ (* (- 38) ?y2) (* 38 ?y1)) (* 71 x1)) 0) (< (+ (+ (* 15 ?y2) (* 40 ?y1)) (* 67 x1)) 1))) (and (not (= (+ (+ (* 61 ?y2) (* 31 ?y1)) (* (- 3) x1)) (- 33))) (> (* (- 91) ?y1) 0))) (and (or (>= (+ (* (- 88) ?y1) (* 46 x1)) (- 95)) (> (+ (* 39 ?y2) (* 99 x1)) (- 82))) (or (or (<= (+ (* 76 ?y1) (* 85 x1)) (- 21)) (not (= (+ (+ ?v_0 (* 20 ?y1)) (* (- 26) x1)) 0))) (and (>= (+ (+ (* (- 67) ?y2) (* 96 ?y1)) (* (- 14) x1)) 0) (> (* 99 ?y1) 86))))) (and (and (or (> (+ (* 32 ?y2) ?v_1) 0) (or (not (= (+ (* 53 ?y1) (* (- 67) x1)) 23)) (= (+ (+ (* 8 ?y2) (* (- 47) ?y1)) (* (- 6) x1)) (- 21)))) (and (or (<= (+ (+ (* 94 ?y2) (* (- 55) ?y1)) (* (- 59) x1)) (- 69)) (> (+ (* 42 ?y1) (* 23 x1)) 50)) (and (>= (+ (+ (* (- 53) ?y2) (* 94 ?y1)) (* (- 7) x1)) 0) (<= (+ (* (- 80) ?y1) (* (- 58) x1)) 0)))) (and (and (or (< (+ (* (- 100) ?y2) (* (- 10) ?y1)) (- 35)) (>= (+ (* 78 ?y1) (* 29 x1)) 0)) (or (= (+ (+ (* (- 22) ?y2) (* (- 9) ?y1)) (* (- 4) x1)) (- 63)) (< (+ (+ ?v_0 (* 75 ?y1)) (* 37 x1)) 37))) (or (and (>= (+ (+ (* (- 31) ?y2) (* 63 ?y1)) (* (- 30) x1)) 46) (< (* 71 ?y2) 88)) (or (= (+ (+ (* 86 ?y2) (* 14 ?y1)) ?v_1) 0) (> (+ (+ (* (- 33) ?y2) (* 77 ?y1)) (* (- 82) x1)) 2))))))) (exists ((?y3 Real)) (let ((?v_2 (* (- 25) x1)) (?v_3 (* (- 35) ?y2))) (and (and (and (or (or (= (+ (+ (* 58 ?y2) (* (- 76) ?y1)) ?v_2) 51) (<= (+ (+ (+ (* (- 53) ?y3) (* 67 ?y2)) (* 84 ?y1)) (* (- 49) x1)) 0)) (<= (+ (* (- 62) ?y3) (* (- 95) ?y1)) (- 61))) (or (and (> (+ (+ (* (- 15) ?y3) (* (- 36) ?y2)) (* (- 36) ?y1)) (- 7)) (>= (+ (+ (+ (* 18 ?y3) (* (- 4) ?y2)) (* 13 ?y1)) (* 25 x1)) (- 56))) (and (not (= (+ (+ (* (- 51) ?y3) (* 52 ?y1)) (* 27 x1)) (- 13))) (not (= (+ (+ (+ (* (- 100) ?y3) (* (- 6) ?y2)) (* 12 ?y1)) (* (- 60) x1)) (- 73)))))) (or (or (or (= (+ (+ (* (- 46) ?y3) (* (- 39) ?y2)) (* (- 21) x1)) (- 66)) (< (+ (* (- 18) ?y3) (* (- 56) ?y2)) (- 71))) (or (> (+ (+ (* (- 81) ?y2) (* 83 ?y1)) (* (- 28) x1)) 8) (= (+ (* 41 ?y3) (* 55 x1)) (- 12)))) (or (or (= (+ (* (- 85) ?y3) (* (- 7) x1)) (- 66)) (< (+ (+ (* (- 26) ?y3) (* 53 ?y2)) (* (- 73) x1)) (- 77))) (<= (+ (+ (+ (* (- 14) ?y3) (* 86 ?y2)) (* 26 ?y1)) (* (- 66) x1)) 65)))) (or (and (not (= ?v_2 (- 85))) (and (or (= (+ (+ (+ (* 76 ?y3) (* (- 1) ?y2)) (* (- 98) ?y1)) (* (- 98) x1)) 33) (= (+ (+ (* 56 ?y3) (* (- 68) ?y1)) (* 15 x1)) (- 81))) (or (not (= (+ (+ (* 10 ?y3) (* 9 ?y2)) (* 10 ?y1)) 74)) (>= (+ (+ (* 84 ?y3) (* 37 ?y2)) (* 9 ?y1)) (- 95))))) (and (and (or (not (= (+ (* (- 16) ?y3) (* (- 40) ?y2)) 11)) (< (+ (+ (* (- 48) ?y2) (* (- 58) ?y1)) (* 70 x1)) (- 95))) (and (> (+ (+ (* (- 19) ?y3) (* (- 15) ?y1)) (* (- 81) x1)) 80) (>= (+ ?v_3 (* (- 20) x1)) (- 98)))) (or (or (> (+ (+ (* 57 ?y3) (* (- 85) ?y1)) (* 97 x1)) 5) (>= (+ (+ (* (- 91) ?y2) (* 99 ?y1)) (* (- 79) x1)) (- 8))) (and (= (+ (+ (* (- 6) ?y3) ?v_3) (* (- 48) x1)) 21) (< (+ (+ (* (- 20) ?y3) (* (- 49) ?y1)) (* 10 x1)) (- 53))))))))))))))
(check-sat)
(exit)
