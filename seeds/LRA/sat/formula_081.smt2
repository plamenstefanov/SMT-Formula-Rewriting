(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_081.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x169 (- 5)))
(let (($x266 (<= (+ (+ |v2:7| (* (- 7) |v0:9|)) (* (- 2) |v6:3|)) ?x169)))
(let ((?x75 11))
(let ((?x261 (+ (+ (* (- 4) |v4:5|) (* (- 20) |v3:6|)) (* (- 15) |v1:8|))))
(let ((?x60 9))
(let ((?x256 (+ (+ (* ?x60 |v1:8|) (* (- 18) |v4:5|)) (* (- 15) |v9:0|))))
(let ((?x248 (+ (+ (* 20 |v8:1|) (* (- 20) |v8:1|)) (* 13 |v4:5|))))
(let ((?x240 (+ (+ (* (- 13) |v7:2|) (* 10 |v6:3|)) (* 14 |v4:5|))))
(let ((?x233 (+ (+ (* (- 20) |v3:6|) (* (- 20) |v0:9|)) (* (- 10) |v5:4|))))
(let ((?x197 (* 14 |v1:8|)))
(let (($x226 (<= (+ (+ (* 5 |v8:1|) (* (- 8) |v2:7|)) ?x197) (- 1))))
(let (($x251 (or (or $x226 (<= ?x233 (- 14))) (and (<= ?x240 (- 2)) (<= ?x248 15)))))
(let ((?x162 (- 18)))
(let (($x219 (<= (+ (+ (* 16 |v2:7|) (* ?x162 |v3:6|)) (* ?x75 |v9:0|)) ?x162)))
(let ((?x193 (- 7)))
(let ((?x211 (+ (+ (* 5 |v6:3|) (* 19 |v9:0|)) (* (- 11) |v0:9|))))
(let ((?x41 20))
(let (($x204 (<= (+ (+ ?x197 (* (- 4) |v7:2|)) (* (- 8) |v4:5|)) ?x41)))
(let ((?x192 (+ (+ (* (- 17) |v2:7|) (* 12 |v5:4|)) (* (- 8) |v9:0|))))
(let (($x270 (or (or (<= ?x192 ?x193) (or (or $x204 (<= ?x211 ?x193)) $x219)) (and $x251 (and (<= ?x256 ?x60) (and (<= ?x261 ?x75) $x266))))))
(let ((?x63 (- 11)))
(let (($x181 (<= (+ (+ (* ?x63 |v6:3|) (* (- 16) |v9:0|)) (* ?x169 |v0:9|)) ?x63)))
(let ((?x174 (- 15)))
(let ((?x173 (+ (+ (* (- 17) |v2:7|) (* ?x169 |v1:8|)) (* 2 |v7:2|))))
(let ((?x164 (+ (+ (* (- 3) |v3:6|) (* (- 9) |v8:1|)) (* ?x162 |v8:1|))))
(let ((?x157 (+ (+ (* 4 |v2:7|) (* 10 |v4:5|)) (* (- 6) |v2:7|))))
(let (($x183 (or (and (<= ?x157 (- 12)) (<= ?x164 ?x75)) (or (<= ?x173 ?x174) $x181))))
(let ((?x19 6))
(let ((?x56 (- 9)))
(let ((?x145 (* ?x56 |v8:1|)))
(let ((?x142 (+ (+ (* 2 |v1:8|) (* (- 8) |v8:1|)) (* 15 |v6:3|))))
(let (($x149 (and (<= ?x142 (- 1)) (<= (+ (+ (* (- 6) |v6:3|) ?x145) ?x145) ?x19))))
(let ((?x27 7))
(let ((?x132 (+ (+ (* (- 3) |v7:2|) (* 10 |v2:7|)) (* ?x56 |v9:0|))))
(let ((?x89 (- 16)))
(let ((?x123 (+ (+ (* ?x19 |v5:4|) (* 2 |v6:3|)) (* 16 |v1:8|))))
(let ((?x113 (- 8)))
(let ((?x112 (+ (+ (* 16 |v8:1|) (* 10 |v3:6|)) (* ?x63 |v2:7|))))
(let ((?x100 (+ (+ (* (- 10) |v7:2|) (* (- 17) |v2:7|)) (* 8 |v7:2|))))
(let ((?x88 (+ (+ (* (- 13) |v1:8|) (* ?x27 |v0:9|)) (* 17 |v2:7|))))
(let ((?x74 (+ (+ (* 3 |v6:3|) (* (- 6) |v7:2|)) (* (- 12) |v3:6|))))
(let (($x116 (or (and (<= ?x74 ?x75) (<= ?x88 ?x89)) (and (<= ?x100 (- 17)) (<= ?x112 ?x113)))))
(let (($x64 (<= (+ (+ (* 8 |v6:3|) (* ?x56 |v3:6|)) (* ?x60 |v7:2|)) ?x63)))
(let ((?x48 5))
(let ((?x47 (+ (+ (* (- 6) |v6:3|) (* ?x41 |v1:8|)) (* (- 14) |v1:8|))))
(let (($x34 (<= (+ (+ (* ?x27 |v1:8|) (* ?x27 |v1:8|)) (* ?x19 |v5:4|)) 18)))
(let ((?x21 (+ (+ (* (- 2) |v6:3|) (* 3 |v7:2|)) (* ?x19 |v4:5|))))
(let (($x117 (or (and (and (<= ?x21 0) $x34) (and (<= ?x47 ?x48) $x64)) $x116)))
(and (or $x117 (and (and (and (<= ?x123 ?x89) (<= ?x132 ?x27)) $x149) $x183)) $x270))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

