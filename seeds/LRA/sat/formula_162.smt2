(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_162.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x149 (* (- 1) |v1:8|)))
(let (($x163 (<= (+ (+ (* (- 16) |v2:7|) (* 6 |v4:5|)) ?x149) 16)))
(let (($x151 (<= (+ (+ (* (- 18) |v5:4|) (* 15 |v2:7|)) ?x149) 4)))
(let ((?x63 0))
(let ((?x142 (+ (+ (* 9 |v4:5|) (* (- 12) |v2:7|)) (* 19 |v5:4|))))
(let ((?x130 (+ (+ (* (- 12) |v1:8|) (* 20 |v1:8|)) (* 7 |v1:8|))))
(let ((?x123 (+ (+ (* 10 |v7:2|) (* (- 5) |v5:4|)) (* 5 |v2:7|))))
(let ((?x107 (+ (+ (* (- 17) |v9:0|) (* 12 |v8:1|)) (* ?x63 |v4:5|))))
(let (($x99 (<= (+ (+ (* (- 15) |v9:0|) |v8:1|) (* (- 14) |v7:2|)) 2)))
(let (($x133 (or (and $x99 (<= ?x107 20)) (or (<= ?x123 17) (<= ?x130 (- 13))))))
(let ((?x89 (+ (+ (* (- 14) |v8:1|) (* 12 |v1:8|)) (* 8 |v6:3|))))
(let ((?x80 12))
(let ((?x79 (+ (+ (* 8 |v8:1|) (* (- 11) |v9:0|)) (* 4 |v2:7|))))
(let ((?x65 (+ (+ (* (- 2) |v8:1|) (* (- 15) |v1:8|)) (* ?x63 |v2:7|))))
(let ((?x48 (+ (+ (* (- 13) |v0:9|) (* 7 |v7:2|)) (* (- 19) |v6:3|))))
(let ((?x36 (+ (+ (* (- 14) |v0:9|) (* (- 10) |v8:1|)) (* 7 |v4:5|))))
(let (($x83 (or (and (<= ?x36 (- 10)) (<= ?x48 14)) (and (<= ?x65 3) (<= ?x79 ?x80)))))
(let (($x166 (or (and $x83 (<= ?x89 15)) (and $x133 (or (and (<= ?x142 ?x63) $x151) $x163)))))
(let ((?x20 (+ (+ (* 11 |v7:2|) (* (- 12) |v9:0|)) (* (- 20) |v9:0|))))
(or (<= ?x20 (- 18)) $x166)))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

