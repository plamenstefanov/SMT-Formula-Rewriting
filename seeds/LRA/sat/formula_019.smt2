(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_019.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x69 (- 6)))
(let ((?x291 (+ (+ (* 0 |v0:9|) (* (- 9) |v4:5|)) (* 11 |v6:3|))))
(let ((?x100 12))
(let ((?x79 (- 9)))
(let ((?x283 (* ?x79 |v4:5|)))
(let (($x285 (<= (+ (+ (* 5 |v4:5|) (* (- 4) |v8:1|)) ?x283) ?x100)))
(let ((?x277 (+ (+ (* 7 |v0:9|) (* (- 5) |v3:6|)) (* (- 20) |v9:0|))))
(let (($x272 (<= (+ (+ (* 18 |v2:7|) |v4:5|) (* 9 |v1:8|)) 17)))
(let ((?x32 19))
(let ((?x264 (+ (+ (* (- 5) |v8:1|) (* ?x79 |v0:9|)) (* 14 |v7:2|))))
(let ((?x253 5))
(let ((?x112 (* 3 |v5:4|)))
(let (($x266 (and (<= (+ (+ (* 11 |v8:1|) (* ?x253 |v5:4|)) ?x112) ?x253) (<= ?x264 ?x32))))
(let ((?x58 (- 12)))
(let ((?x249 (+ (+ (* (- 15) |v2:7|) (* 9 |v6:3|)) (* 2 |v0:9|))))
(let (($x295 (and (or (<= ?x249 ?x58) $x266) (or (and $x272 (<= ?x277 ?x69)) (or $x285 (<= ?x291 ?x69))))))
(let ((?x74 7))
(let ((?x241 (+ (+ (* (- 7) |v2:7|) (* (- 1) |v0:9|)) (* (- 20) |v7:2|))))
(let ((?x235 (+ (+ (* (- 7) |v6:3|) (* 17 |v0:9|)) (* (- 8) |v7:2|))))
(let ((?x212 9))
(let ((?x226 (* ?x212 |v6:3|)))
(let (($x228 (<= (+ (+ (* (- 19) |v8:1|) (* (- 19) |v6:3|)) ?x226) (- 17))))
(let ((?x19 (- 15)))
(let ((?x222 (+ (+ (* (- 16) |v9:0|) (* 10 |v1:8|)) (* 4 |v3:6|))))
(let ((?x122 (- 20)))
(let ((?x214 (+ (+ (* 16 |v8:1|) (* 17 |v0:9|)) (* ?x212 |v0:9|))))
(let ((?x203 (+ (+ (* 11 |v5:4|) (* 13 |v1:8|)) (* 14 |v9:0|))))
(let ((?x27 11))
(let ((?x196 (+ (+ (* (- 4) |v1:8|) (* (- 4) |v4:5|)) (* (- 13) |v2:7|))))
(let ((?x190 (+ (+ (* 8 |v9:0|) (* (- 1) |v8:1|)) (* 10 |v3:6|))))
(let (($x217 (or (or (<= ?x190 (- 14)) (<= ?x196 ?x27)) (and (<= ?x203 (- 8)) (<= ?x214 ?x122)))))
(let (($x245 (and $x217 (and (and (<= ?x222 ?x19) $x228) (and (<= ?x235 ?x79) (<= ?x241 ?x74))))))
(let ((?x177 (+ (+ (* 6 |v5:4|) (* ?x100 |v5:4|)) (* 13 |v5:4|))))
(let ((?x144 (- 4)))
(let (($x172 (<= (+ (+ (* ?x58 |v4:5|) (* ?x27 |v3:6|)) (* (- 11) |v7:2|)) ?x144)))
(let ((?x164 (+ (+ (* ?x27 |v9:0|) (* (- 16) |v2:7|)) (* 8 |v5:4|))))
(let ((?x90 (- 13)))
(let ((?x156 (+ (+ (* 4 |v0:9|) (* (- 11) |v9:0|)) (* 8 |v4:5|))))
(let (($x180 (or (and (<= ?x156 ?x90) (<= ?x164 (- 2))) (or $x172 (<= ?x177 ?x58)))))
(let ((?x126 (- 19)))
(let ((?x137 (+ (+ (* 18 |v3:6|) (* ?x58 |v1:8|)) (* 15 |v3:6|))))
(let (($x148 (and (<= ?x137 6) (<= (+ (+ (* ?x100 |v1:8|) (* ?x19 |v4:5|)) (* ?x144 |v1:8|)) ?x126))))
(let (($x129 (<= (+ (+ (* 2 |v9:0|) (* ?x122 |v6:3|)) (* ?x126 |v6:3|)) 3)))
(let ((?x114 2))
(let (($x115 (<= (+ (+ (* 16 |v1:8|) (* (- 18) |v2:7|)) ?x112) ?x114)))
(let ((?x99 (+ (+ (* ?x90 |v5:4|) (* (- 10) |v5:4|)) (* 4 |v5:4|))))
(let (($x77 (<= (+ (+ (* 20 |v2:7|) (* ?x69 |v3:6|)) (* ?x74 |v7:2|)) 20)))
(let (($x87 (or $x77 (<= (+ (+ (* ?x79 |v5:4|) |v1:8|) (* 13 |v4:5|)) ?x27))))
(let ((?x60 (+ (+ (* (- 2) |v2:7|) (* 10 |v0:9|)) (* ?x58 |v8:1|))))
(let ((?x44 (+ (+ (* 13 |v6:3|) (* 18 |v6:3|)) (* ?x32 |v6:3|))))
(let ((?x22 14))
(let ((?x21 (+ (+ (* (- 3) |v6:3|) (* 8 |v3:6|)) (* ?x19 |v5:4|))))
(let (($x34 (and (<= ?x21 ?x22) (<= (+ (+ |v0:9| (* ?x27 |v5:4|)) (* ?x27 |v0:9|)) ?x32))))
(let (($x118 (and (and $x34 (or (<= ?x44 (- 17)) (<= ?x60 1))) (and $x87 (or (<= ?x99 ?x100) $x115)))))
(or (or $x118 (or (or $x129 $x148) $x180)) (and $x245 $x295)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

