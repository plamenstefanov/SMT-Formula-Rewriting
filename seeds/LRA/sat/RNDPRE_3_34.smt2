(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status sat)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(assert (exists ((?x1 Real)) (forall ((?x2 Real)) (exists ((?x3 Real)) (let ((?v_6 (* 83 ?x1)) (?v_2 (* 65 ?x3)) (?v_5 (* 74 ?x2)) (?v_3 (* (- 22) ?x3)) (?v_0 (* (- 39) ?x2)) (?v_1 (* (- 36) ?x1)) (?v_4 (* (- 38) ?x3)) (?v_7 (* (- 76) ?x2))) (or (or (and (or (or (>= (+ (* 61 ?x1) ?v_3) 49) (not (= (+ (+ (* (- 94) ?x1) (* (- 60) ?x2)) (* 78 ?x3)) 30))) (and (or (= (* 51 ?x1) (- 60)) (not (= (+ (* (- 92) ?x1) (* 11 ?x2)) 0))) (and (<= (+ (+ (* (- 26) ?x1) (* 50 ?x2)) (* (- 35) ?x3)) (- 81)) (= (+ (* (- 68) ?x1) (* (- 15) ?x2)) 33)))) (or (or (or (> (+ (+ (* (- 51) ?x1) ?v_0) (* 86 ?x3)) 80) (< (* (- 39) ?x1) (- 47))) (and (< (+ (+ (* (- 95) ?x1) (* (- 54) ?x2)) (* (- 95) ?x3)) (- 17)) (not (= (+ (+ ?v_1 (* (- 52) ?x2)) (* 53 ?x3)) 0)))) (and (= (+ (* 98 ?x1) (* 7 ?x2)) (- 94)) (and (< (+ (+ (* 42 ?x1) (* 85 ?x2)) (* 79 ?x3)) (- 17)) (= (+ (* (- 55) ?x1) (* (- 90) ?x2)) (- 36)))))) (or (and (and (< (* (- 17) ?x2) 0) (and (not (= (+ (* 49 ?x1) (* (- 59) ?x2)) 0)) (= (+ (+ (* 30 ?x1) (* 10 ?x2)) (* (- 57) ?x3)) 36))) (and (or (> (+ (* (- 22) ?x2) ?v_4) (- 55)) (not (= (+ (+ (* (- 24) ?x1) (* 84 ?x2)) (* 49 ?x3)) (- 73)))) (or (< (+ (+ (* (- 83) ?x1) ?v_0) (* (- 36) ?x3)) (- 23)) (> (+ (+ (* 44 ?x1) (* 75 ?x2)) (* (- 14) ?x3)) 5)))) (and (or (or (< (+ (* (- 97) ?x1) (* 91 ?x3)) (- 59)) (<= (+ (+ ?v_6 ?v_7) (* (- 4) ?x3)) 0)) (and (>= (+ (+ ?v_1 (* (- 26) ?x2)) ?v_2) 0) (> (+ (+ (* (- 3) ?x1) (* (- 70) ?x2)) (* 4 ?x3)) (- 40)))) (and (<= (* 27 ?x1) 95) (or (< (+ (* 93 ?x2) (* 36 ?x3)) 82) (> (* (- 88) ?x3) 89)))))) (and (and (and (or (or (and (< (+ (+ (* 32 ?x1) (* 63 ?x2)) (* 48 ?x3)) (- 8)) (not (= (+ (* 24 ?x2) (* 88 ?x3)) (- 78)))) (and (>= (+ (+ (* 12 ?x1) (* 8 ?x2)) (* 85 ?x3)) 94) (> (+ (* 67 ?x1) (* 45 ?x2)) 0))) (and (< (* (- 2) ?x1) 76) (<= (+ (* 86 ?x2) (* (- 44) ?x3)) 24))) (and (or (< (+ (+ (* 24 ?x1) (* (- 35) ?x2)) (* (- 75) ?x3)) (- 44)) (> (+ (+ (* (- 44) ?x1) (* (- 77) ?x2)) (* (- 91) ?x3)) 32)) (and (or (<= ?v_2 (- 88)) (> (+ (+ (* (- 65) ?x1) (* (- 37) ?x2)) (* 54 ?x3)) 0)) (or (= (+ (+ (* 6 ?x1) (* (- 83) ?x2)) (* 60 ?x3)) (- 79)) (= (+ (+ (* (- 85) ?x1) ?v_5) (* 81 ?x3)) 0))))) (or (or (and (= ?v_3 12) (>= (+ (+ (* 17 ?x1) (* 42 ?x2)) ?v_4) (- 62))) (or (not (= (+ (+ (* (- 59) ?x1) (* (- 28) ?x2)) (* (- 83) ?x3)) 0)) (or (<= (* 100 ?x3) (- 22)) (>= (+ (* (- 15) ?x1) (* 41 ?x2)) 7)))) (and (and (or (> (+ (+ (* 21 ?x1) (* 82 ?x2)) (* (- 12) ?x3)) (- 39)) (>= (+ (* 62 ?x1) ?v_5) 67)) (= (* (- 29) ?x3) 54)) (and (and (not (= (+ (* 15 ?x1) (* 73 ?x3)) 45)) (<= (+ (* 2 ?x1) (* 90 ?x2)) (- 73))) (and (< (+ (+ ?v_6 (* 21 ?x2)) (* (- 71) ?x3)) 0) (>= (+ (* 15 ?x2) (* (- 47) ?x3)) 25)))))) (and (or (and (not (= (+ (+ (* 50 ?x1) (* 16 ?x2)) (* (- 46) ?x3)) 63)) (or (<= (+ (* 76 ?x1) (* (- 56) ?x2)) 51) (= (+ (* (- 78) ?x2) (* (- 69) ?x3)) 39))) (or (> (+ (* (- 74) ?x1) ?v_2) 0) (not (= (* 96 ?x1) (- 3))))) (or (or (= (+ (+ (* 75 ?x1) (* 51 ?x2)) (* 44 ?x3)) 0) (= (+ (+ (* 33 ?x1) ?v_7) (* (- 99) ?x3)) (- 55))) (and (or (< (+ (+ (* 9 ?x1) (* (- 73) ?x2)) (* (- 60) ?x3)) 34) (<= (+ (* (- 12) ?x2) (* (- 86) ?x3)) (- 87))) (= (+ (* 27 ?x2) (* 30 ?x3)) (- 67))))))))))))
(check-sat)
(exit)
