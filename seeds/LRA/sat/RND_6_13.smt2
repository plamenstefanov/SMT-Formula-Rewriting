(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status sat)
(declare-fun y3 () Real)
(declare-fun y4 () Real)
(declare-fun y6 () Real)
(declare-fun x1 () Real)
(declare-fun y5 () Real)
(assert (forall ((?y3 Real)) (or (exists ((?y4 Real)) (or (or (exists ((?y6 Real)) (or (and (>= (+ (+ (* 91 ?y6) (* (- 4) ?y3)) (* 5 x1)) 34) (< (+ (+ (+ (* 93 ?y6) (* (- 88) ?y4)) (* (- 1) ?y3)) (* (- 17) x1)) 91)) (and (and (<= (+ (+ (* 77 ?y6) (* (- 96) ?y3)) (* 59 x1)) (- 96)) (= (+ (+ (+ (* (- 75) ?y6) (* 88 ?y4)) (* (- 16) ?y3)) (* (- 85) x1)) 63)) (not (= (+ (* (- 50) ?y4) (* (- 67) ?y3)) 3))))) (and (and (and (<= (+ (+ (* (- 72) ?y4) (* (- 37) ?y3)) (* (- 28) x1)) 56) (not (= (+ (* 63 ?y3) (* 53 x1)) 84))) (or (> (* (- 84) ?y4) 0) (<= (+ (+ (* (- 57) ?y4) (* (- 68) ?y3)) (* 3 x1)) (- 34)))) (forall ((?y5 Real)) (let ((?v_0 (* 39 ?y5))) (or (and (and (= (+ ?v_0 (* 78 ?y4)) 0) (= (+ (+ (* (- 92) ?y5) (* 54 ?y4)) (* 47 x1)) (- 97))) (or (> (+ (* 18 ?y5) (* (- 73) x1)) 0) (not (= (+ (+ ?v_0 (* 32 ?y3)) (* (- 94) x1)) 51)))) (or (< (+ (+ (* 83 ?y5) (* 77 ?y3)) (* 62 x1)) 46) (<= (+ (+ (* (- 69) ?y5) (* 36 ?y4)) (* 66 x1)) 0))))))) (forall ((?y5 Real)) (forall ((?y6 Real)) (let ((?v_1 (* (- 21) ?y4))) (or (or (and (or (> (+ (+ (+ (* 57 ?y6) (* (- 11) ?y5)) (* 13 ?y3)) (* (- 89) x1)) 36) (> (+ (+ (+ (+ (* 85 ?y6) (* (- 49) ?y5)) (* (- 2) ?y4)) (* (- 14) ?y3)) (* (- 25) x1)) 0)) (or (>= (+ (+ (* 52 ?y5) (* (- 37) ?y3)) (* 42 x1)) (- 32)) (<= (+ (+ (+ (+ (* 64 ?y6) (* (- 91) ?y5)) ?v_1) (* (- 19) ?y3)) (* (- 53) x1)) 38))) (or (< (+ (+ (+ (* (- 88) ?y6) (* (- 51) ?y5)) (* 35 ?y4)) (* 89 x1)) 88) (and (>= (+ (+ (+ (* (- 62) ?y5) (* 40 ?y4)) (* (- 56) ?y3)) (* (- 83) x1)) 10) (> (+ (+ (+ (* 2 ?y6) (* 51 ?y5)) (* 71 ?y3)) (* 20 x1)) (- 60))))) (or (and (not (= (+ (+ (+ (+ (* 29 ?y6) (* (- 61) ?y5)) (* 22 ?y4)) (* 48 ?y3)) (* (- 14) x1)) 26)) (not (= (+ (+ (+ (+ (* 72 ?y6) (* (- 85) ?y5)) (* (- 48) ?y4)) (* 55 ?y3)) (* (- 86) x1)) (- 10)))) (and (= ?v_1 24) (>= (+ (+ (* (- 23) ?y6) (* 75 ?y5)) (* 16 ?y3)) 0))))))))) (forall ((?y4 Real)) (let ((?v_2 (* 97 ?y3))) (or (or (or (<= (+ (* 11 ?y4) (* 65 ?y3)) (- 31)) (or (not (= (+ (+ (* (- 82) ?y4) (* 28 ?y3)) (* 95 x1)) (- 82))) (< (+ (+ (* 81 ?y4) (* 75 ?y3)) (* (- 61) x1)) 73))) (or (or (and (not (= (+ (+ (* 40 ?y4) ?v_2) (* 73 x1)) 90)) (= (+ (+ (* 88 ?y4) (* (- 98) ?y3)) (* (- 93) x1)) 0)) (or (<= (+ (* 77 ?y4) (* 25 ?y3)) 38) (= (+ (+ (* (- 27) ?y4) (* 16 ?y3)) (* (- 54) x1)) (- 31)))) (and (or (not (= (* (- 83) ?y3) (- 12))) (<= (+ (* 55 ?y3) (* (- 80) x1)) (- 52))) (or (>= (+ (+ (* (- 31) ?y4) ?v_2) (* (- 58) x1)) 25) (>= (+ (+ (* 24 ?y4) (* (- 82) ?y3)) (* (- 11) x1)) (- 8)))))) (or (and (and (exists ((?y5 Real)) (or (> (+ (* 94 ?y5) (* 74 x1)) (- 25)) (and (> (+ (+ (* 39 ?y5) (* 61 ?y3)) (* 9 x1)) 0) (< (+ (+ (* 66 ?y5) (* 71 ?y4)) (* 19 ?y3)) 91)))) (or (= (+ (* (- 60) ?y4) (* (- 45) ?y3)) 0) (and (forall ((?y5 Real)) (<= (+ (* 1 ?y4) (* 86 x1)) 74)) (or (<= (+ (+ (* 62 ?y4) (* (- 94) ?y3)) (* 4 x1)) (- 70)) (<= (* (- 41) x1) 83))))) (forall ((?y5 Real)) (exists ((?y6 Real)) (or (and (not (= (+ (+ (* 85 ?y6) (* 70 ?y5)) (* 100 x1)) (- 3))) (< (+ (+ (+ (* 75 ?y6) (* (- 3) ?y5)) (* 93 ?y3)) (* (- 49) x1)) 0)) (or (not (= (+ (+ (+ (+ (* 28 ?y6) (* 49 ?y5)) (* 80 ?y4)) (* 87 ?y3)) (* 58 x1)) (- 45))) (not (= (+ (+ (+ (+ (* 82 ?y6) (* (- 30) ?y5)) (* (- 71) ?y4)) (* 37 ?y3)) (* (- 20) x1)) (- 78)))))))) (forall ((?y6 Real)) (or (and (= (* (- 37) ?y3) 29) (<= (+ (+ (* 67 ?y4) (* (- 83) ?y3)) (* (- 29) x1)) (- 25))) (= (+ (+ (+ (* 46 ?y6) (* 35 ?y4)) (* 63 ?y3)) (* (- 39) x1)) 63))))))))))
(check-sat)
(exit)
