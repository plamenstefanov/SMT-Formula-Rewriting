(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_234.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x43 13))
(let ((?x289 (+ (+ (* (- 15) |v3:6|) (* (- 1) |v3:6|)) (* (- 10) |v8:1|))))
(let ((?x134 (- 1)))
(let ((?x284 (+ (+ (* 16 |v8:1|) (* (- 20) |v3:6|)) (* 2 |v7:2|))))
(let ((?x21 17))
(let (($x279 (<= (+ (+ (* ?x21 |v4:5|) (* ?x134 |v7:2|)) (* (- 17) |v8:1|)) ?x21)))
(let ((?x205 (- 3)))
(let ((?x272 (+ (+ (* (- 18) |v1:8|) (* 12 |v8:1|)) (* 8 |v3:6|))))
(let ((?x264 (+ (+ (* 4 |v3:6|) (* (- 19) |v9:0|)) (* (- 14) |v5:4|))))
(let ((?x160 (- 9)))
(let ((?x258 (+ (+ (* ?x205 |v6:3|) (* (- 19) |v5:4|)) (* 11 |v0:9|))))
(let ((?x187 (- 6)))
(let ((?x252 (+ (+ (* ?x187 |v0:9|) (* 2 |v5:4|)) (* 12 |v3:6|))))
(let (($x293 (and (or (<= ?x252 ?x187) (or (<= ?x258 ?x160) (<= ?x264 ?x205))) (and (or (<= ?x272 ?x205) $x279) (and (<= ?x284 ?x134) (<= ?x289 ?x43))))))
(let ((?x83 10))
(let ((?x244 (+ (+ (* 9 |v8:1|) (* (- 13) |v1:8|)) (* 6 |v2:7|))))
(let (($x239 (<= (+ (+ (* ?x160 |v1:8|) (* (- 18) |v2:7|)) (* ?x134 |v8:1|)) ?x83)))
(let ((?x113 (- 19)))
(let ((?x227 (+ (+ (* (- 5) |v7:2|) (* ?x43 |v2:7|)) (* 4 |v2:7|))))
(let (($x234 (and (<= ?x227 ?x187) (<= (+ (+ |v5:4| (* (- 20) |v8:1|)) (* ?x21 |v0:9|)) ?x113))))
(let (($x220 (<= (+ (+ (* ?x21 |v3:6|) (* 6 |v3:6|)) (* ?x160 |v3:6|)) ?x205)))
(let ((?x36 8))
(let ((?x214 (+ (+ (* (- 18) |v2:7|) (* 4 |v8:1|)) (* 12 |v9:0|))))
(let ((?x204 (+ (+ (* 12 |v6:3|) (* (- 16) |v2:7|)) (* (- 8) |v6:3|))))
(let ((?x123 (- 7)))
(let ((?x197 (+ (+ (* ?x43 |v9:0|) (* (- 14) |v9:0|)) (* (- 11) |v5:4|))))
(let (($x248 (or (and (or (<= ?x197 ?x123) (<= ?x204 ?x205)) (and (<= ?x214 ?x36) $x220)) (or $x234 (or $x239 (<= ?x244 ?x83))))))
(let ((?x76 20))
(let ((?x169 (* ?x76 |v5:4|)))
(let (($x188 (<= (+ (+ (* 9 |v5:4|) (* 19 |v7:2|)) ?x169) ?x187)))
(let ((?x173 (- 11)))
(let (($x179 (<= (+ (+ (* ?x173 |v9:0|) (* (- 20) |v1:8|)) (* ?x160 |v9:0|)) ?x173)))
(let ((?x152 (- 13)))
(let (($x190 (or (<= (+ (+ (* ?x123 |v4:5|) (* 14 |v1:8|)) ?x169) ?x152) (or $x179 $x188))))
(let (($x161 (<= (+ (+ (* ?x113 |v6:3|) (* 3 |v6:3|)) (* ?x76 |v1:8|)) ?x160)))
(let ((?x151 (+ (+ (* 2 |v5:4|) (* 16 |v1:8|)) (* (- 8) |v4:5|))))
(let ((?x138 (+ (+ (* 4 |v9:0|) (* ?x134 |v3:6|)) (* (- 16) |v9:0|))))
(let ((?x128 (+ (+ (* 19 |v8:1|) (* ?x123 |v1:8|)) (* (- 2) |v0:9|))))
(let (($x163 (and (or (<= ?x128 (- 5)) (<= ?x138 0)) (or (<= ?x151 ?x152) $x161))))
(let ((?x112 (+ (+ (* (- 17) |v7:2|) (* (- 20) |v3:6|)) (* 12 |v4:5|))))
(let ((?x100 (+ (+ (* 18 |v3:6|) (* 15 |v7:2|)) (* (- 16) |v3:6|))))
(let ((?x89 (+ (+ (* (- 16) |v7:2|) (* ?x83 |v7:2|)) (* 7 |v3:6|))))
(let (($x77 (<= (+ (+ (* (- 14) |v8:1|) |v7:2|) (* (- 10) |v9:0|)) ?x76)))
(let (($x116 (and (or $x77 (<= ?x89 (- 15))) (and (<= ?x100 5) (<= ?x112 ?x113)))))
(let ((?x60 (+ (+ (* 4 |v6:3|) (* (- 8) |v2:7|)) (* ?x43 |v1:8|))))
(let (($x50 (<= (+ (+ (* 11 |v1:8|) (* ?x43 |v7:2|)) (* ?x21 |v3:6|)) 3)))
(let ((?x35 (+ (+ (* (- 4) |v6:3|) (* 11 |v4:5|)) (* (- 4) |v5:4|))))
(let ((?x20 (+ (+ (* 12 |v2:7|) (* 15 |v1:8|)) (* 6 |v1:8|))))
(let (($x64 (or (and (<= ?x20 ?x21) (<= ?x35 ?x36)) (and $x50 (<= ?x60 (- 2))))))
(or (or (or $x64 $x116) (and $x163 $x190)) (or $x248 $x293))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

