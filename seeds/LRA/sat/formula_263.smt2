(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_263.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x179 14))
(let ((?x276 (+ (+ (* 7 |v3:6|) (* (- 13) |v1:8|)) (* 12 |v9:0|))))
(let ((?x54 (- 3)))
(let ((?x270 (+ (+ (* (- 6) |v4:5|) (* (- 14) |v7:2|)) (* 3 |v3:6|))))
(let ((?x22 20))
(let ((?x264 (+ (+ (* (- 12) |v0:9|) (* ?x54 |v9:0|)) (* 17 |v7:2|))))
(let ((?x256 (+ (+ (* (- 8) |v6:3|) (* (- 4) |v9:0|)) (* (- 11) |v7:2|))))
(let ((?x61 15))
(let ((?x249 (+ (+ (* (- 19) |v1:8|) (* ?x179 |v0:9|)) (* 2 |v3:6|))))
(let (($x243 (<= (+ (+ |v9:0| (* 8 |v9:0|)) (* 0 |v0:9|)) 6)))
(let ((?x237 (+ (+ (* ?x61 |v0:9|) (* (- 6) |v7:2|)) (* (- 10) |v8:1|))))
(let (($x260 (or (and (<= ?x237 (- 18)) $x243) (and (<= ?x249 ?x61) (<= ?x256 (- 14))))))
(let (($x229 (<= (+ (+ (* ?x179 |v4:5|) (* ?x22 |v6:3|)) (* 12 |v8:1|)) 13)))
(let ((?x220 (+ (+ (* (- 10) |v6:3|) (* 7 |v8:1|)) (* (- 5) |v3:6|))))
(let ((?x213 (+ (+ (* (- 7) |v5:4|) (* 8 |v7:2|)) (* (- 10) |v1:8|))))
(let (($x208 (<= (+ (+ (* (- 7) |v2:7|) (* ?x54 |v2:7|)) (* ?x22 |v3:6|)) (- 19))))
(let (($x231 (or (or $x208 (<= ?x213 10)) (and (<= ?x220 4) $x229))))
(let ((?x197 (+ (+ (* 8 |v5:4|) (* 18 |v0:9|)) (* 2 |v4:5|))))
(let ((?x14 8))
(let ((?x190 (+ (+ (* (- 1) |v2:7|) (* (- 4) |v4:5|)) (* (- 12) |v7:2|))))
(let ((?x35 (- 20)))
(let ((?x184 (+ (+ (* ?x179 |v6:3|) (* 17 |v5:4|)) (* (- 7) |v4:5|))))
(let ((?x176 (+ (+ (* 3 |v6:3|) (* 3 |v5:4|)) (* 16 |v4:5|))))
(let (($x201 (or (and (<= ?x176 16) (<= ?x184 ?x35)) (or (<= ?x190 ?x14) (<= ?x197 9)))))
(let (($x281 (or (or $x201 $x231) (or $x260 (or (<= ?x264 ?x22) (or (<= ?x270 ?x54) (<= ?x276 ?x179)))))))
(let ((?x164 (+ (+ (* ?x54 |v9:0|) (* (- 8) |v4:5|)) (* (- 2) |v9:0|))))
(let ((?x31 (- 11)))
(let ((?x154 (+ (+ (* 0 |v7:2|) (* (- 9) |v7:2|)) (* 18 |v2:7|))))
(let ((?x144 (+ (+ (* (- 10) |v7:2|) (* (- 8) |v0:9|)) (* 2 |v8:1|))))
(let ((?x132 (+ (+ (* (- 15) |v4:5|) (* (- 6) |v3:6|)) (* (- 12) |v4:5|))))
(let ((?x19 0))
(let ((?x124 (+ (+ (* (- 1) |v1:8|) (* 3 |v7:2|)) (* (- 12) |v8:1|))))
(let ((?x88 (- 5)))
(let ((?x114 (+ (+ (* (- 1) |v0:9|) (* 5 |v5:4|)) (* ?x35 |v3:6|))))
(let ((?x38 (- 12)))
(let ((?x75 (- 1)))
(let ((?x105 (* ?x75 |v2:7|)))
(let (($x107 (<= (+ (+ (* 17 |v1:8|) (* 19 |v4:5|)) ?x105) ?x38)))
(let (($x168 (or (and (or $x107 (<= ?x114 ?x88)) (and (<= ?x124 ?x19) (<= ?x132 ?x22))) (or (and (<= ?x144 ?x14) (<= ?x154 ?x31)) (<= ?x164 10)))))
(let ((?x93 12))
(let ((?x82 (+ (+ (* 11 |v4:5|) (* ?x75 |v3:6|)) (* (- 15) |v6:3|))))
(let (($x95 (or (<= ?x82 (- 13)) (<= (+ (+ (* ?x22 |v0:9|) (* ?x88 |v8:1|)) (* ?x22 |v1:8|)) ?x93))))
(let ((?x68 (- 4)))
(let (($x69 (<= (+ (+ (* ?x61 |v8:1|) (* ?x61 |v8:1|)) (* 7 |v5:4|)) ?x68)))
(let ((?x53 (+ (+ (* 6 |v3:6|) (* (- 7) |v2:7|)) (* 4 |v4:5|))))
(let (($x39 (<= (+ (+ (* (- 8) |v5:4|) (* ?x31 |v1:8|)) (* ?x35 |v1:8|)) ?x38)))
(let (($x23 (<= (+ (+ (* (- 18) |v0:9|) (* ?x14 |v4:5|)) (* ?x19 |v9:0|)) ?x22)))
(or (and (or (or $x23 (or $x39 (<= ?x53 ?x54))) (and $x69 $x95)) $x168) $x281)))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

