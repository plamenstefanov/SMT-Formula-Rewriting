(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_223.m
(set-info :status unknown)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x63 (- 11)))
(let ((?x284 (+ (+ (* 20 |v2:7|) (* 19 |v5:4|)) (* (- 9) |v3:6|))))
(let ((?x10 9))
(let ((?x278 (+ (+ (* (- 2) |v1:8|) (* (- 7) |v3:6|)) (* (- 14) |v1:8|))))
(let ((?x191 (- 15)))
(let ((?x271 (+ (+ (* (- 2) |v8:1|) (* 0 |v1:8|)) (* 5 |v1:8|))))
(let (($x266 (<= (+ (+ |v8:1| (* (- 1) |v3:6|)) (* 18 |v0:9|)) 7)))
(let ((?x13 19))
(let ((?x256 (+ (+ (* 8 |v7:2|) (* (- 13) |v2:7|)) (* ?x63 |v6:3|))))
(let ((?x250 (+ (+ (* 12 |v0:9|) (* (- 3) |v6:3|)) (* (- 8) |v6:3|))))
(let ((?x31 (- 5)))
(let ((?x241 (+ (+ (* 17 |v7:2|) (* ?x63 |v2:7|)) (* (- 19) |v0:9|))))
(let ((?x197 (* ?x10 |v0:9|)))
(let (($x234 (<= (+ (+ (* (- 6) |v6:3|) (* 8 |v0:9|)) ?x197) ?x31)))
(let (($x259 (or (or $x234 (<= ?x241 ?x31)) (or (<= ?x250 11) (<= ?x256 ?x13)))))
(let (($x288 (or $x259 (or (and $x266 (<= ?x271 ?x191)) (or (<= ?x278 ?x10) (<= ?x284 ?x63))))))
(let ((?x55 (- 9)))
(let ((?x225 (+ (+ (* 10 |v8:1|) (* 15 |v1:8|)) (* (- 13) |v9:0|))))
(let ((?x218 (+ (+ (* 8 |v4:5|) (* 15 |v3:6|)) (* 4 |v0:9|))))
(let ((?x210 (+ (+ (* 20 |v4:5|) (* ?x63 |v5:4|)) (* 8 |v3:6|))))
(let ((?x170 (- 16)))
(let (($x201 (<= (+ (+ (* (- 8) |v3:6|) ?x197) (* 15 |v4:5|)) ?x170)))
(let (($x228 (or (or $x201 (<= ?x210 ?x191)) (or (<= ?x218 (- 1)) (<= ?x225 ?x55)))))
(let (($x195 (<= (+ (+ (* ?x170 |v1:8|) (* ?x10 |v7:2|)) (* ?x191 |v0:9|)) (- 12))))
(let ((?x180 (+ (+ (* (- 19) |v7:2|) (* 11 |v8:1|)) (* (- 20) |v7:2|))))
(let ((?x151 (- 6)))
(let ((?x167 (* ?x151 |v4:5|)))
(let (($x182 (and (<= (+ (+ (* (- 18) |v8:1|) ?x167) ?x167) ?x170) (<= ?x180 ?x10))))
(let ((?x118 (- 13)))
(let ((?x162 (+ (+ (* 2 |v6:3|) (* 5 |v8:1|)) (* ?x10 |v8:1|))))
(let ((?x155 (+ (+ (* (- 17) |v0:9|) (* ?x151 |v3:6|)) (* (- 2) |v7:2|))))
(let ((?x26 (- 2)))
(let ((?x144 (+ (+ (* 15 |v6:3|) (* (- 17) |v4:5|)) (* 7 |v8:1|))))
(let ((?x43 (- 8)))
(let ((?x134 (+ (+ (* (- 18) |v6:3|) (* 0 |v4:5|)) (* 6 |v4:5|))))
(let ((?x122 (+ (+ (* (- 20) |v2:7|) (* ?x118 |v3:6|)) (* (- 3) |v9:0|))))
(let (($x125 (or (<= (+ (+ (* ?x55 |v5:4|) (* ?x63 |v7:2|)) |v1:8|) 2) (<= ?x122 16))))
(let (($x184 (and (and $x125 (or (<= ?x134 ?x43) (<= ?x144 ?x26))) (or (and (<= ?x155 (- 14)) (<= ?x162 ?x118)) $x182))))
(let ((?x103 (- 3)))
(let ((?x102 (+ (+ (* (- 7) |v9:0|) (* ?x13 |v4:5|)) (* (- 7) |v5:4|))))
(let ((?x34 5))
(let ((?x93 (+ (+ (* (- 20) |v1:8|) (* ?x26 |v3:6|)) (* (- 20) |v9:0|))))
(let ((?x51 3))
(let (($x85 (<= (+ (+ (* ?x51 |v0:9|) (* ?x43 |v2:7|)) (* 0 |v7:2|)) ?x51)))
(let (($x75 (<= (+ (+ (* 14 |v8:1|) (* 14 |v3:6|)) |v4:5|) 10)))
(let (($x64 (<= (+ (+ (* ?x55 |v9:0|) (* 15 |v8:1|)) (* ?x10 |v4:5|)) ?x63)))
(let ((?x50 (+ (+ (* (- 10) |v9:0|) (* ?x43 |v1:8|)) (* 13 |v3:6|))))
(let (($x21 (<= (+ (+ (* ?x10 |v2:7|) (* ?x13 |v6:3|)) (* 4 |v8:1|)) ?x13)))
(let (($x66 (and (or $x21 (<= (+ (+ |v9:0| (* ?x26 |v5:4|)) (* ?x31 |v4:5|)) ?x34)) (or (<= ?x50 ?x51) $x64))))
(let (($x185 (and (or $x66 (or (and $x75 $x85) (or (<= ?x93 ?x34) (<= ?x102 ?x103)))) $x184)))
(or $x185 (and (and $x195 $x228) $x288)))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

