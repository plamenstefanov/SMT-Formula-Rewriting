(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_235.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x58 18))
(let ((?x283 (+ (+ (* 3 |v8:1|) (* (- 4) |v0:9|)) (* 17 |v1:8|))))
(let ((?x10 (- 19)))
(let ((?x276 (+ (+ (* (- 11) |v6:3|) (* ?x10 |v3:6|)) (* 4 |v6:3|))))
(let ((?x27 (- 3)))
(let ((?x270 (+ (+ (* 6 |v5:4|) (* (- 8) |v3:6|)) (* (- 15) |v7:2|))))
(let ((?x123 4))
(let ((?x176 (- 12)))
(let ((?x255 (* ?x176 |v0:9|)))
(let (($x264 (<= (+ (+ (* (- 18) |v9:0|) (* 14 |v0:9|)) ?x255) ?x123)))
(let ((?x50 (- 11)))
(let (($x265 (and (<= (+ (+ ?x255 (* ?x123 |v0:9|)) (* (- 6) |v7:2|)) ?x50) $x264)))
(let ((?x71 14))
(let ((?x196 (* 12 |v7:2|)))
(let ((?x43 0))
(let ((?x247 (+ (+ (* 17 |v9:0|) (* 9 |v1:8|)) (* 15 |v0:9|))))
(let (($x254 (and (<= ?x247 ?x43) (<= (+ (+ (* (- 10) |v5:4|) (* ?x58 |v4:5|)) ?x196) ?x71))))
(let (($x286 (and (or $x254 $x265) (and (and (<= ?x270 ?x27) (<= ?x276 ?x10)) (<= ?x283 ?x58)))))
(let ((?x237 (+ (+ (* 10 |v3:6|) (* ?x176 |v6:3|)) (* 13 |v9:0|))))
(let ((?x164 (- 10)))
(let ((?x230 (+ (+ (* (- 18) |v3:6|) (* ?x71 |v9:0|)) (* (- 18) |v7:2|))))
(let ((?x150 (- 15)))
(let ((?x224 (+ (+ (* (- 7) |v8:1|) (* ?x10 |v8:1|)) (* 3 |v5:4|))))
(let ((?x216 (+ (+ (* (- 8) |v6:3|) (* 3 |v6:3|)) (* (- 5) |v4:5|))))
(let (($x241 (and (or (<= ?x216 ?x58) (<= ?x224 ?x150)) (or (<= ?x230 ?x164) (<= ?x237 1)))))
(let ((?x47 11))
(let ((?x208 (+ (+ (* (- 8) |v3:6|) (* (- 9) |v1:8|)) (* 10 |v4:5|))))
(let ((?x181 (- 6)))
(let (($x210 (or (<= (+ (+ ?x196 (* ?x181 |v0:9|)) (* (- 20) |v6:3|)) ?x181) (<= ?x208 ?x47))))
(let ((?x193 (+ (+ (* 13 |v6:3|) (* 2 |v9:0|)) (* 20 |v7:2|))))
(let (($x195 (and (<= (+ (+ (* ?x176 |v5:4|) (* ?x164 |v6:3|)) (* ?x181 |v7:2|)) ?x43) (<= ?x193 ?x176))))
(let (($x170 (<= (+ (+ |v0:9| (* ?x164 |v8:1|)) (* (- 14) |v0:9|)) 15)))
(let ((?x62 3))
(let ((?x160 (+ (+ (* (- 17) |v3:6|) (* 19 |v6:3|)) (* (- 17) |v0:9|))))
(let ((?x152 (+ (+ (* 19 |v7:2|) (* (- 20) |v0:9|)) (* ?x150 |v8:1|))))
(let ((?x140 (+ (+ (* 12 |v1:8|) (* 17 |v2:7|)) (* (- 9) |v2:7|))))
(let (($x131 (<= (+ (+ (* ?x43 |v0:9|) (* ?x123 |v8:1|)) (* 9 |v5:4|)) 6)))
(let ((?x65 (- 14)))
(let (($x119 (<= (+ (+ (* ?x65 |v2:7|) (* (- 5) |v6:3|)) (* ?x50 |v4:5|)) ?x65)))
(let (($x173 (and (or $x119 (or $x131 (<= ?x140 8))) (or (<= ?x152 ?x50) (and (<= ?x160 ?x62) $x170)))))
(let ((?x105 (+ (+ (* (- 16) |v5:4|) (* 7 |v4:5|)) (* (- 1) |v7:2|))))
(let ((?x94 (+ (+ (* (- 1) |v8:1|) (* ?x47 |v4:5|)) (* (- 20) |v3:6|))))
(let ((?x79 (- 18)))
(let (($x86 (and (<= (+ (+ (* ?x71 |v9:0|) (* 8 |v7:2|)) |v6:3|) ?x79) (<= (+ (+ (* ?x43 |v5:4|) (* ?x58 |v5:4|)) (* ?x58 |v5:4|)) ?x43))))
(let (($x66 (<= (+ (+ (* (- 20) |v4:5|) (* ?x58 |v1:8|)) (* ?x62 |v1:8|)) ?x65)))
(let (($x51 (<= (+ (+ (* 13 |v4:5|) (* ?x43 |v7:2|)) (* ?x47 |v3:6|)) ?x50)))
(let ((?x33 (+ (+ (* (- 2) |v9:0|) (* ?x27 |v3:6|)) (* 10 |v9:0|))))
(let ((?x13 17))
(let (($x21 (<= (+ (+ (* ?x10 |v5:4|) (* ?x13 |v0:9|)) (* 16 |v3:6|)) ?x13)))
(let (($x110 (and (and (and $x21 (<= ?x33 ?x27)) (and $x51 $x66)) (or $x86 (and (<= ?x94 ?x62) (<= ?x105 (- 4)))))))
(or (or $x110 $x173) (and (and (or $x195 $x210) $x241) $x286)))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

