(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_230.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x36 0))
(let ((?x239 (+ (+ (* 15 |v6:3|) (* (- 16) |v3:6|)) (* (- 7) |v4:5|))))
(let ((?x233 (+ (+ (* (- 20) |v5:4|) (* (- 13) |v3:6|)) (* (- 8) |v4:5|))))
(let ((?x226 (+ (+ (* (- 18) |v8:1|) (* (- 9) |v2:7|)) (* (- 4) |v4:5|))))
(let ((?x219 (+ (+ (* 5 |v0:9|) (* (- 16) |v4:5|)) (* 19 |v9:0|))))
(let (($x242 (or (and (<= ?x219 10) (<= ?x226 4)) (and (<= ?x233 7) (<= ?x239 ?x36)))))
(let ((?x90 (- 13)))
(let (($x209 (<= (+ (+ |v6:3| (* (- 10) |v3:6|)) (* (- 19) |v4:5|)) ?x90)))
(let ((?x184 (* ?x36 |v7:2|)))
(let (($x203 (<= (+ (+ (* 19 |v2:7|) (* 14 |v7:2|)) ?x184) 16)))
(let ((?x177 (* (- 18) |v6:3|)))
(let (($x195 (<= (+ (+ (* (- 1) |v6:3|) (* (- 9) |v4:5|)) ?x177) (- 19))))
(let (($x190 (<= (+ (+ ?x184 (* ?x36 |v0:9|)) (* 13 |v3:6|)) 13)))
(let (($x182 (<= (+ (+ ?x177 (* 12 |v6:3|)) (* (- 11) |v8:1|)) (- 3))))
(let ((?x167 (* 12 |v6:3|)))
(let (($x169 (<= (+ (+ (* (- 15) |v4:5|) (* (- 4) |v7:2|)) ?x167) 11)))
(let ((?x44 3))
(let ((?x160 (+ (+ (* 6 |v1:8|) (* 9 |v7:2|)) (* (- 14) |v1:8|))))
(let ((?x101 9))
(let ((?x151 (+ (+ (* 15 |v7:2|) (* 8 |v0:9|)) (* 19 |v5:4|))))
(let ((?x22 (- 9)))
(let ((?x143 (+ (+ (* (- 15) |v2:7|) (* (- 6) |v8:1|)) (* 12 |v4:5|))))
(let ((?x78 6))
(let (($x131 (<= (+ (+ (* ?x101 |v3:6|) (* ?x90 |v8:1|)) (* (- 8) |v2:7|)) ?x78)))
(let ((?x93 8))
(let ((?x123 (+ (+ (* 4 |v6:3|) (* (- 20) |v6:3|)) (* 2 |v9:0|))))
(let ((?x113 (+ (+ (* (- 1) |v2:7|) (* (- 8) |v9:0|)) (* 2 |v8:1|))))
(let (($x172 (or (and (and (<= ?x113 ?x36) (<= ?x123 ?x93)) $x131) (and (or (<= ?x143 ?x22) (<= ?x151 ?x101)) (or (<= ?x160 ?x44) $x169)))))
(let (($x102 (<= (+ (+ (* 15 |v3:6|) (* ?x90 |v7:2|)) (* ?x36 |v3:6|)) ?x101)))
(let (($x94 (<= (+ (+ (* (- 19) |v4:5|) (* ?x44 |v4:5|)) (* ?x90 |v1:8|)) ?x93)))
(let ((?x80 (+ (+ (* 17 |v3:6|) (* (- 8) |v0:9|)) (* ?x78 |v6:3|))))
(let ((?x63 (- 1)))
(let ((?x62 (+ (+ (* (- 11) |v4:5|) (* 18 |v8:1|)) (* 7 |v1:8|))))
(let (($x50 (<= (+ (+ (* 18 |v7:2|) (* ?x44 |v1:8|)) (* ?x36 |v6:3|)) (- 12))))
(let ((?x35 (+ (+ (* ?x22 |v5:4|) (* (- 7) |v2:7|)) (* 15 |v5:4|))))
(let ((?x21 (+ (+ (* 16 |v7:2|) (* (- 17) |v1:8|)) (* (- 16) |v6:3|))))
(let (($x105 (or (or (or (<= ?x21 ?x22) (<= ?x35 ?x36)) (and $x50 (<= ?x62 ?x63))) (or (<= ?x80 11) (or $x94 $x102)))))
(or (or $x105 $x172) (and $x182 (or (or (or $x190 $x195) (and $x203 $x209)) $x242)))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

