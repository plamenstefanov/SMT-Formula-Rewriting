(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_139.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x105 (- 19)))
(let ((?x294 (+ (+ (* 12 |v6:3|) (* 13 |v5:4|)) (* (- 9) |v8:1|))))
(let ((?x24 (- 8)))
(let ((?x289 (+ (+ (* (- 6) |v6:3|) (* 20 |v0:9|)) (* (- 16) |v2:7|))))
(let ((?x161 (- 11)))
(let ((?x282 (+ (+ (* (- 14) |v8:1|) (* (- 1) |v8:1|)) (* 20 |v5:4|))))
(let ((?x274 (+ (+ (* (- 17) |v8:1|) (* 14 |v6:3|)) (* (- 3) |v0:9|))))
(let (($x297 (or (or (<= ?x274 ?x24) (<= ?x282 ?x161)) (or (<= ?x289 ?x24) (<= ?x294 ?x105)))))
(let ((?x47 (- 3)))
(let ((?x266 (+ (+ (* 12 |v0:9|) (* (- 7) |v0:9|)) (* (- 12) |v6:3|))))
(let ((?x102 (- 15)))
(let ((?x260 (+ (+ (* (- 2) |v5:4|) (* (- 9) |v4:5|)) (* 4 |v8:1|))))
(let ((?x11 (- 17)))
(let ((?x253 (+ (+ (* 14 |v9:0|) (* (- 4) |v9:0|)) (* 15 |v0:9|))))
(let ((?x247 (+ (+ (* 7 |v7:2|) (* (- 6) |v4:5|)) (* 7 |v5:4|))))
(let (($x269 (and (and (<= ?x247 ?x102) (<= ?x253 ?x11)) (and (<= ?x260 ?x102) (<= ?x266 ?x47)))))
(let ((?x236 (+ (+ (* 17 |v9:0|) (* (- 5) |v8:1|)) (* (- 9) |v0:9|))))
(let ((?x16 (- 12)))
(let ((?x230 (+ (+ (* 12 |v1:8|) (* (- 10) |v1:8|)) (* 8 |v4:5|))))
(let ((?x50 13))
(let ((?x106 (* ?x105 |v2:7|)))
(let (($x224 (<= (+ (+ (* 10 |v9:0|) (* 4 |v5:4|)) ?x106) ?x50)))
(let ((?x215 (+ (+ (* (- 14) |v1:8|) (* 12 |v6:3|)) (* 10 |v4:5|))))
(let (($x239 (or (or (<= ?x215 (- 18)) $x224) (and (<= ?x230 ?x16) (<= ?x236 ?x24)))))
(let ((?x200 (* 18 |v4:5|)))
(let (($x208 (<= (+ (+ (* (- 2) |v3:6|) (* (- 10) |v5:4|)) ?x200) ?x105)))
(let (($x209 (and (<= (+ (+ (* ?x24 |v9:0|) ?x200) (* ?x16 |v5:4|)) 20) $x208)))
(let ((?x196 (+ (+ (* (- 5) |v9:0|) (* (- 5) |v1:8|)) (* 5 |v5:4|))))
(let (($x190 (<= (+ (+ (* ?x50 |v3:6|) (* ?x161 |v6:3|)) (* 18 |v3:6|)) ?x161)))
(let ((?x178 10))
(let ((?x176 (* ?x161 |v6:3|)))
(let (($x179 (<= (+ (+ (* 6 |v9:0|) (* (- 13) |v6:3|)) ?x176) ?x178)))
(let ((?x58 (- 4)))
(let ((?x168 (+ (+ (* (- 5) |v5:4|) (* 3 |v0:9|)) (* ?x47 |v4:5|))))
(let ((?x160 (+ (+ (* (- 7) |v8:1|) (* (- 13) |v3:6|)) (* (- 6) |v7:2|))))
(let ((?x150 (+ (+ (* ?x102 |v6:3|) (* 3 |v4:5|)) (* 8 |v6:3|))))
(let (($x181 (and (and (<= ?x150 0) (<= ?x160 ?x161)) (or (<= ?x168 ?x58) $x179))))
(let ((?x137 (- 13)))
(let (($x138 (<= (+ (+ (* ?x50 |v6:3|) (* ?x47 |v3:6|)) (* 15 |v3:6|)) ?x137)))
(let ((?x127 (- 10)))
(let (($x128 (<= (+ (+ (* ?x58 |v6:3|) (* ?x47 |v8:1|)) (* 17 |v1:8|)) ?x127)))
(let ((?x83 (- 9)))
(let (($x119 (<= (+ (+ (* ?x102 |v0:9|) (* 2 |v5:4|)) (* ?x50 |v4:5|)) ?x83)))
(let ((?x36 20))
(let (($x120 (and (<= (+ (+ (* ?x102 |v7:2|) ?x106) (* (- 20) |v9:0|)) ?x36) $x119)))
(let ((?x94 (+ (+ (* 14 |v5:4|) (* (- 16) |v5:4|)) (* ?x16 |v1:8|))))
(let ((?x82 (+ (+ (* 17 |v2:7|) (* ?x24 |v8:1|)) (* 11 |v3:6|))))
(let ((?x19 (- 5)))
(let (($x70 (<= (+ (+ (* ?x19 |v1:8|) (* ?x16 |v0:9|)) (* (- 20) |v1:8|)) ?x19)))
(let ((?x43 (- 20)))
(let ((?x40 (- 14)))
(let ((?x61 (* ?x40 |v1:8|)))
(let (($x71 (and (<= (+ (+ (* 12 |v4:5|) (* ?x58 |v1:8|)) ?x61) ?x43) $x70)))
(let ((?x35 (+ (+ (* ?x24 |v4:5|) (* (- 2) |v3:6|)) (* (- 6) |v5:4|))))
(let (($x52 (or (<= ?x35 ?x36) (<= (+ (+ (* ?x40 |v3:6|) (* ?x43 |v2:7|)) (* ?x47 |v5:4|)) ?x50))))
(let (($x99 (and (or (<= (+ (+ |v1:8| (* ?x11 |v6:3|)) (* ?x16 |v2:7|)) ?x19) $x52) (and $x71 (or (<= ?x82 ?x83) (<= ?x94 19))))))
(or (and $x99 (and (and $x120 (or $x128 $x138)) $x181)) (and (or (or (and $x190 (<= ?x196 ?x50)) $x209) $x239) (or $x269 $x297))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

