(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_233.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x188 1))
(let ((?x274 (+ (+ (* (- 18) |v8:1|) (* (- 10) |v6:3|)) (* 0 |v7:2|))))
(let ((?x18 (- 2)))
(let ((?x94 (- 10)))
(let ((?x220 (* ?x94 |v6:3|)))
(let (($x270 (<= (+ (+ (* 19 |v9:0|) (* 15 |v2:7|)) ?x220) ?x18)))
(let ((?x264 (+ (+ (* 14 |v9:0|) (* 20 |v0:9|)) (* 11 |v8:1|))))
(let ((?x258 (+ (+ (* (- 11) |v3:6|) (* (- 14) |v7:2|)) (* (- 14) |v4:5|))))
(let (($x277 (or (and (<= ?x258 8) (<= ?x264 16)) (and $x270 (<= ?x274 ?x188)))))
(let ((?x251 (+ (+ (* 14 |v6:3|) (* 9 |v2:7|)) (* 15 |v3:6|))))
(let ((?x60 (- 7)))
(let ((?x245 (+ (+ (* (- 11) |v1:8|) (* (- 4) |v9:0|)) (* 20 |v3:6|))))
(let ((?x234 (+ (+ (* 11 |v9:0|) (* 12 |v7:2|)) (* 19 |v8:1|))))
(let ((?x45 (- 1)))
(let (($x227 (<= (+ (+ ?x220 (* 17 |v1:8|)) (* 14 |v2:7|)) ?x45)))
(let (($x218 (<= (+ (+ (* (- 13) |v6:3|) |v4:5|) (* ?x18 |v9:0|)) 3)))
(let ((?x90 9))
(let ((?x21 14))
(let ((?x209 (* ?x21 |v5:4|)))
(let (($x237 (and (and (<= (+ (+ ?x209 (* 10 |v2:7|)) ?x209) ?x90) $x218) (and $x227 (<= ?x234 (- 15))))))
(let ((?x206 20))
(let ((?x205 (+ (+ (* 12 |v5:4|) (* 6 |v3:6|)) (* ?x94 |v7:2|))))
(let ((?x116 18))
(let (($x197 (<= (+ (+ (* ?x21 |v0:9|) (* (- 9) |v2:7|)) (* ?x60 |v0:9|)) ?x116)))
(let ((?x187 (+ (+ (* (- 5) |v4:5|) (* ?x60 |v7:2|)) (* 13 |v5:4|))))
(let (($x279 (or (and (and (or (<= ?x187 ?x188) $x197) (<= ?x205 ?x206)) $x237) (or (or (<= ?x245 ?x60) (<= ?x251 ?x188)) $x277))))
(let ((?x76 19))
(let ((?x177 (+ (+ (* (- 14) |v0:9|) (* (- 15) |v5:4|)) (* 5 |v4:5|))))
(let (($x170 (<= (+ (+ |v3:6| (* ?x76 |v6:3|)) (* (- 6) |v8:1|)) (- 12))))
(let ((?x82 2))
(let ((?x162 (+ (+ (* (- 17) |v8:1|) (* (- 20) |v9:0|)) (* (- 13) |v5:4|))))
(let ((?x152 (+ (+ (* 13 |v6:3|) (* 15 |v6:3|)) (* ?x90 |v1:8|))))
(let (($x180 (or (and (<= ?x152 5) (<= ?x162 ?x82)) (or $x170 (<= ?x177 ?x76)))))
(let ((?x13 15))
(let ((?x14 (* ?x13 |v0:9|)))
(let (($x142 (<= (+ (+ (* ?x116 |v8:1|) (* 6 |v7:2|)) ?x14) 10)))
(let ((?x41 6))
(let ((?x135 (+ (+ (* 4 |v3:6|) (* ?x82 |v0:9|)) (* (- 11) |v6:3|))))
(let ((?x49 (- 17)))
(let ((?x128 (+ (+ (* 0 |v0:9|) (* (- 20) |v0:9|)) (* 8 |v6:3|))))
(let ((?x120 (+ (+ (* (- 18) |v6:3|) (* ?x116 |v3:6|)) (* 4 |v5:4|))))
(let (($x181 (and (or (or (<= ?x120 ?x13) (<= ?x128 ?x49)) (and (<= ?x135 ?x41) $x142)) $x180)))
(let (($x110 (<= (+ (+ (* ?x45 |v2:7|) (* ?x41 |v3:6|)) (* 16 |v2:7|)) ?x18)))
(let (($x101 (<= (+ (+ (* ?x45 |v1:8|) (* ?x94 |v1:8|)) (* 3 |v4:5|)) ?x13)))
(let (($x91 (<= (+ (+ (* ?x82 |v6:3|) (* (- 5) |v8:1|)) (* ?x41 |v7:2|)) ?x90)))
(let ((?x78 (+ (+ (* (- 14) |v5:4|) (* (- 6) |v8:1|)) (* ?x76 |v0:9|))))
(let ((?x63 0))
(let ((?x52 (- 11)))
(let (($x65 (or (<= (+ (+ (* ?x41 |v1:8|) (* ?x45 |v4:5|)) (* ?x49 |v6:3|)) ?x52) (<= (+ (+ (* ?x45 |v1:8|) (* ?x13 |v2:7|)) (* ?x60 |v7:2|)) ?x63))))
(let ((?x34 (+ (+ (* ?x18 |v2:7|) (* (- 20) |v8:1|)) (* 4 |v8:1|))))
(let (($x37 (or (<= (+ (+ (* (- 18) |v0:9|) ?x14) (* ?x18 |v6:3|)) ?x21) (<= ?x34 (- 16)))))
(let (($x182 (and (or (and $x37 $x65) (or (and (<= ?x78 ?x41) $x91) (or $x101 $x110))) $x181)))
(or $x182 $x279))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

