(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_078.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x273 (+ (+ (* 12 |v4:5|) (* 15 |v9:0|)) (* 6 |v8:1|))))
(let ((?x37 (- 20)))
(let ((?x266 (+ (+ (* (- 18) |v4:5|) (* 20 |v2:7|)) (* (- 14) |v1:8|))))
(let ((?x54 (- 5)))
(let ((?x140 (* ?x54 |v3:6|)))
(let (($x259 (<= (+ (+ (* 14 |v2:7|) (* 9 |v2:7|)) ?x140) 2)))
(let ((?x251 (+ (+ (* 0 |v9:0|) (* (- 4) |v6:3|)) (* ?x37 |v4:5|))))
(let ((?x82 (- 16)))
(let ((?x244 (+ (+ (* (- 17) |v1:8|) (* 15 |v3:6|)) (* (- 17) |v4:5|))))
(let ((?x237 (+ (+ (* 14 |v9:0|) (* 4 |v4:5|)) (* 16 |v9:0|))))
(let (($x254 (or (or (<= ?x237 2) (<= ?x244 ?x82)) (<= ?x251 5))))
(let ((?x226 (+ (+ (* (- 7) |v0:9|) (* (- 4) |v1:8|)) (* 9 |v0:9|))))
(let ((?x220 15))
(let ((?x219 (+ (+ (* (- 17) |v5:4|) (* 16 |v8:1|)) (* 12 |v7:2|))))
(let ((?x130 10))
(let ((?x107 (* ?x54 |v0:9|)))
(let (($x213 (<= (+ (+ (* (- 10) |v5:4|) (* (- 2) |v9:0|)) ?x107) ?x130)))
(let ((?x77 (- 4)))
(let (($x208 (<= (+ (+ |v6:3| (* 20 |v7:2|)) (* (- 19) |v8:1|)) ?x77)))
(let ((?x198 (+ (+ (* 19 |v3:6|) (* (- 17) |v2:7|)) (* 9 |v3:6|))))
(let ((?x113 (- 12)))
(let ((?x194 (+ (+ (* (- 6) |v0:9|) (* 20 |v4:5|)) (* 6 |v1:8|))))
(let (($x186 (<= (+ (+ (* ?x54 |v6:3|) (* ?x54 |v9:0|)) (* 3 |v9:0|)) 1)))
(let ((?x177 (+ (+ (* 0 |v9:0|) (* 4 |v3:6|)) (* 7 |v1:8|))))
(let (($x201 (or (and (<= ?x177 0) $x186) (or (<= ?x194 ?x113) (<= ?x198 ?x77)))))
(let (($x231 (and $x201 (and (or $x208 $x213) (and (<= ?x219 ?x220) (<= ?x226 (- 3)))))))
(let (($x277 (or $x231 (or $x254 (or (or $x259 (<= ?x266 ?x37)) (<= ?x273 (- 19)))))))
(let ((?x40 12))
(let ((?x19 (- 17)))
(let ((?x157 (* ?x19 |v5:4|)))
(let (($x165 (and (<= (+ (+ (* ?x113 |v9:0|) (* (- 11) |v5:4|)) ?x157) ?x40) (<= (+ (+ ?x140 (* 16 |v2:7|)) (* ?x40 |v3:6|)) ?x40))))
(let ((?x123 (- 2)))
(let ((?x152 (+ (+ (* 17 |v5:4|) (* 14 |v8:1|)) (* ?x130 |v4:5|))))
(let (($x143 (<= (+ (+ (* (- 9) |v8:1|) (* ?x130 |v0:9|)) ?x140) (- 15))))
(let ((?x58 9))
(let (($x133 (<= (+ (+ (* ?x123 |v0:9|) (* 8 |v0:9|)) (* ?x130 |v5:4|)) ?x58)))
(let ((?x67 (- 6)))
(let (($x120 (<= (+ (+ (* ?x113 |v2:7|) (* 19 |v3:6|)) (* ?x77 |v8:1|)) ?x67)))
(let ((?x45 (- 14)))
(let (($x111 (<= (+ (+ ?x107 (* 13 |v7:2|)) (* (- 7) |v2:7|)) ?x45)))
(let ((?x48 (- 10)))
(let (($x103 (<= (+ (+ (* 20 |v9:0|) (* ?x19 |v8:1|)) (* ?x82 |v1:8|)) ?x48)))
(let ((?x94 14))
(let (($x95 (<= (+ (+ (* ?x37 |v3:6|) (* (- 7) |v2:7|)) (* ?x77 |v1:8|)) ?x94)))
(let ((?x73 (+ (+ (* 7 |v6:3|) (* ?x67 |v3:6|)) (* (- 7) |v5:4|))))
(let (($x86 (and (<= ?x73 3) (<= (+ (+ (* ?x77 |v8:1|) (* ?x37 |v9:0|)) (* ?x82 |v6:3|)) ?x19))))
(let ((?x16 (- 11)))
(let (($x61 (<= (+ (+ (* 13 |v0:9|) (* ?x54 |v4:5|)) (* ?x58 |v8:1|)) ?x16)))
(let (($x62 (and (<= (+ (+ (* ?x37 |v5:4|) (* ?x40 |v9:0|)) (* ?x45 |v8:1|)) ?x48) $x61)))
(let ((?x31 16))
(let (($x33 (and (<= (+ (+ (* 7 |v6:3|) |v9:0|) (* ?x16 |v4:5|)) ?x19) (<= (+ (+ (* (- 1) |v7:2|) |v0:9|) (* ?x19 |v2:7|)) ?x31))))
(let (($x168 (and (and (or $x33 $x62) (and $x86 (or $x95 $x103))) (or (and (or $x111 $x120) (or $x133 $x143)) (and (<= ?x152 ?x123) $x165)))))
(or $x168 $x277))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

