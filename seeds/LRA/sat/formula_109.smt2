(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_109.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x248 (+ (+ (* 6 |v6:3|) (* 14 |v4:5|)) (* (- 1) |v9:0|))))
(let ((?x37 11))
(let ((?x238 (+ (+ (* 19 |v9:0|) (* 0 |v4:5|)) (* 16 |v4:5|))))
(let ((?x18 7))
(let ((?x229 (+ (+ (* ?x37 |v4:5|) (* (- 1) |v5:4|)) (* (- 12) |v8:1|))))
(let ((?x34 (- 4)))
(let ((?x10 (- 13)))
(let ((?x81 (* ?x10 |v3:6|)))
(let (($x223 (<= (+ (+ (* 4 |v1:8|) (* 20 |v7:2|)) ?x81) ?x34)))
(let (($x251 (or (or $x223 (<= ?x229 ?x18)) (or (<= ?x238 ?x37) (<= ?x248 (- 8))))))
(let ((?x216 (+ (+ (* 10 |v8:1|) (* 3 |v9:0|)) (* (- 15) |v0:9|))))
(let ((?x209 (+ (+ (* 3 |v3:6|) (* 2 |v4:5|)) (* 19 |v4:5|))))
(let ((?x50 3))
(let ((?x199 (+ (+ (* ?x18 |v1:8|) (* (- 6) |v1:8|)) (* 4 |v9:0|))))
(let ((?x100 9))
(let ((?x192 (+ (+ (* 5 |v7:2|) (* 10 |v1:8|)) (* (- 15) |v5:4|))))
(let (($x219 (and (or (<= ?x192 ?x100) (<= ?x199 ?x50)) (and (<= ?x209 (- 9)) (<= ?x216 ?x10)))))
(let (($x187 (<= (+ (+ (* ?x50 |v6:3|) (* ?x100 |v3:6|)) (* (- 6) |v2:7|)) (- 18))))
(let (($x179 (<= (+ (+ (* ?x37 |v7:2|) (* 16 |v5:4|)) (* ?x10 |v4:5|)) ?x37)))
(let (($x170 (<= (+ (+ (* 19 |v6:3|) (* ?x10 |v2:7|)) (* ?x18 |v1:8|)) 13)))
(let ((?x163 (+ (+ (* (- 12) |v7:2|) (* (- 20) |v3:6|)) (* (- 19) |v4:5|))))
(let ((?x147 (* 20 |v7:2|)))
(let (($x149 (<= (+ (+ (* (- 11) |v0:9|) (* ?x34 |v9:0|)) ?x147) 20)))
(let (($x138 (<= (+ (+ |v8:1| (* (- 6) |v4:5|)) (* (- 5) |v4:5|)) (- 17))))
(let ((?x83 (- 3)))
(let ((?x129 (+ (+ (* (- 2) |v8:1|) (* 17 |v9:0|)) (* 15 |v8:1|))))
(let ((?x120 (+ (+ (* (- 6) |v6:3|) (* (- 8) |v2:7|)) (* (- 5) |v7:2|))))
(let (($x181 (and (and (or (<= ?x120 (- 7)) (<= ?x129 ?x83)) (or $x138 $x149)) (and (and (<= ?x163 (- 14)) $x170) $x179))))
(let ((?x105 (+ (+ (* ?x100 |v5:4|) (* (- 6) |v2:7|)) (* 12 |v6:3|))))
(let ((?x96 (- 6)))
(let ((?x95 (+ (+ (* (- 15) |v9:0|) (* (- 2) |v3:6|)) (* ?x83 |v4:5|))))
(let ((?x75 19))
(let ((?x74 (+ (+ (* ?x34 |v5:4|) (* 13 |v7:2|)) (* 5 |v8:1|))))
(let (($x85 (or (<= ?x74 ?x75) (<= (+ (+ (* ?x75 |v6:3|) (* ?x34 |v4:5|)) ?x81) ?x83))))
(let ((?x29 10))
(let ((?x48 (* 12 |v5:4|)))
(let (($x61 (<= (+ (+ (* 18 |v8:1|) (* 17 |v4:5|)) ?x48) ?x29)))
(let (($x62 (or (<= (+ (+ (* ?x37 |v4:5|) (* 8 |v4:5|)) ?x48) ?x50) $x61)))
(let (($x38 (<= (+ (+ (* (- 16) |v1:8|) (* ?x29 |v5:4|)) (* ?x34 |v4:5|)) ?x37)))
(let (($x21 (<= (+ (+ (* ?x10 |v9:0|) (* (- 18) |v2:7|)) (* ?x18 |v3:6|)) ?x18)))
(let (($x110 (or (or (or $x21 $x38) $x62) (or $x85 (and (<= ?x95 ?x96) (<= ?x105 1))))))
(and (or $x110 $x181) (or $x187 (or $x219 $x251)))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

