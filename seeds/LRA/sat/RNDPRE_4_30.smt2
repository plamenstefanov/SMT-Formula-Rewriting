(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status sat)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(assert (forall ((?x1 Real)) (exists ((?x2 Real)) (forall ((?x3 Real)) (exists ((?x4 Real)) (let ((?v_0 (* 40 ?x4)) (?v_4 (* 28 ?x1)) (?v_6 (* 2 ?x1)) (?v_5 (* 85 ?x1)) (?v_2 (* (- 27) ?x4)) (?v_1 (* (- 86) ?x3)) (?v_8 (* (- 29) ?x3)) (?v_7 (* (- 5) ?x1)) (?v_9 (* (- 60) ?x2)) (?v_3 (* (- 100) ?x3))) (and (and (or (or (or (or (>= (+ (+ (+ (* (- 83) ?x1) (* 39 ?x2)) (* (- 95) ?x3)) (* (- 5) ?x4)) (- 62)) (= (+ (+ (* (- 93) ?x2) (* 62 ?x3)) (* (- 20) ?x4)) 0)) (and (= (+ (+ (* (- 19) ?x2) (* (- 67) ?x3)) ?v_0) (- 94)) (<= (+ (+ (* 83 ?x2) (* (- 59) ?x3)) ?v_0) 44))) (and (>= (+ (* (- 71) ?x2) (* 77 ?x3)) (- 80)) (> (* (- 41) ?x4) 53))) (or (or (or (not (= (+ (* 56 ?x1) ?v_2) 93)) (<= (+ (+ ?v_4 (* 33 ?x2)) (* 20 ?x3)) 26)) (and (> (+ (+ (+ (* 76 ?x1) (* (- 57) ?x2)) ?v_1) (* 73 ?x4)) 0) (not (= (+ (* (- 41) ?x1) (* 91 ?x3)) (- 90))))) (and (or (not (= (+ (+ (* (- 67) ?x1) (* 64 ?x2)) (* 32 ?x4)) 3)) (> (+ (+ (+ (* 84 ?x1) (* (- 54) ?x2)) ?v_8) (* (- 71) ?x4)) 0)) (< (+ (+ (* 58 ?x2) (* (- 41) ?x3)) (* (- 46) ?x4)) 7)))) (or (or (or (< (+ (+ (+ (* (- 92) ?x1) (* 2 ?x2)) (* 27 ?x3)) (* (- 89) ?x4)) 4) (and (> (+ (+ (* 16 ?x1) (* 43 ?x2)) ?v_1) 0) (= (+ (* 4 ?x3) (* 68 ?x4)) 0))) (or (or (> (+ (+ (* (- 59) ?x1) (* 46 ?x2)) (* 38 ?x3)) 57) (<= (* 54 ?x2) (- 94))) (not (= (+ (+ (+ (* 29 ?x1) (* (- 79) ?x2)) (* (- 70) ?x3)) (* 10 ?x4)) 0)))) (or (and (< (+ (+ (* (- 76) ?x1) (* 19 ?x2)) (* 63 ?x3)) (- 2)) (and (< (+ (+ ?v_6 (* (- 74) ?x2)) (* (- 14) ?x4)) 0) (>= (+ (* 65 ?x1) (* 67 ?x2)) 22))) (and (= (+ (+ (* (- 100) ?x2) (* (- 19) ?x3)) (* (- 77) ?x4)) (- 12)) (or (>= (+ (+ (* 75 ?x1) (* (- 12) ?x2)) ?v_2) 67) (>= (+ (+ (+ ?v_7 (* (- 52) ?x2)) (* (- 90) ?x3)) (* (- 30) ?x4)) 88)))))) (or (and (and (and (and (<= (+ (+ (+ (* (- 77) ?x1) (* 23 ?x2)) (* (- 76) ?x3)) ?v_2) (- 91)) (not (= (+ (+ (+ ?v_5 ?v_9) (* (- 32) ?x3)) ?v_2) (- 3)))) (and (<= (+ ?v_3 (* (- 40) ?x4)) 98) (not (= (+ (* (- 48) ?x2) (* 59 ?x4)) 0)))) (and (or (= (+ (+ (* 96 ?x1) (* (- 97) ?x3)) (* (- 4) ?x4)) (- 58)) (= (+ (+ (* (- 4) ?x1) (* 6 ?x3)) (* 20 ?x4)) (- 19))) (or (not (= (+ (* (- 94) ?x1) (* (- 92) ?x4)) (- 15))) (<= (+ (+ (+ (* (- 27) ?x1) (* (- 31) ?x2)) (* 95 ?x3)) (* (- 15) ?x4)) 62)))) (or (and (and (not (= (+ (+ (* 3 ?x1) ?v_3) (* (- 87) ?x4)) (- 54))) (>= (+ (+ (+ ?v_4 (* (- 68) ?x2)) (* (- 4) ?x3)) (* 44 ?x4)) (- 11))) (or (>= (+ (+ (* (- 11) ?x1) (* 34 ?x3)) (* (- 2) ?x4)) (- 32)) (< (+ (* 46 ?x1) (* 99 ?x4)) 0))) (and (and (> (+ (+ (* 69 ?x1) (* 76 ?x2)) (* 81 ?x4)) 0) (= (+ (+ ?v_5 (* (- 64) ?x3)) (* (- 99) ?x4)) 71)) (and (<= (+ (* 77 ?x1) (* 72 ?x3)) 95) (< (+ (+ (* 30 ?x1) (* (- 1) ?x2)) (* 9 ?x4)) 0))))) (or (and (and (not (= (+ (+ (+ ?v_6 (* 27 ?x2)) (* 31 ?x3)) (* 31 ?x4)) 0)) (<= (+ (+ ?v_7 (* (- 17) ?x3)) (* (- 52) ?x4)) 0)) (and (<= (+ (+ (+ (* 15 ?x1) (* (- 82) ?x2)) ?v_8) (* 5 ?x4)) (- 78)) (> (+ (+ (* 81 ?x1) (* (- 35) ?x2)) (* (- 28) ?x4)) (- 13)))) (or (or (<= (+ (* 20 ?x1) (* 32 ?x3)) 36) (= (+ (+ (+ (* 11 ?x1) ?v_9) (* (- 9) ?x3)) (* (- 21) ?x4)) 96)) (and (< (+ (+ (* 97 ?x2) (* 88 ?x3)) (* (- 44) ?x4)) 61) (not (= (+ (* (- 67) ?x2) (* (- 34) ?x3)) 0)))))))))))))
(check-sat)
(exit)
