(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_059.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x123 (- 14)))
(let (($x231 (<= (+ (+ (* (- 7) |v5:4|) (* (- 9) |v7:2|)) |v8:1|) ?x123)))
(let ((?x100 10))
(let ((?x223 (+ (+ (* 2 |v0:9|) (* 13 |v1:8|)) (* (- 1) |v2:7|))))
(let ((?x215 (+ (+ (* (- 8) |v1:8|) (* 0 |v6:3|)) (* 19 |v6:3|))))
(let ((?x205 (+ (+ (* 5 |v0:9|) (* 8 |v4:5|)) (* (- 19) |v8:1|))))
(let ((?x138 4))
(let ((?x132 (* 15 |v4:5|)))
(let (($x199 (<= (+ (+ (* 7 |v4:5|) (* (- 4) |v8:1|)) ?x132) ?x138)))
(let ((?x10 11))
(let ((?x191 (+ (+ (* (- 18) |v6:3|) (* 8 |v2:7|)) (* 6 |v6:3|))))
(let (($x233 (and (and (and (<= ?x191 ?x10) $x199) (<= ?x205 ?x123)) (and (and (<= ?x215 (- 15)) (<= ?x223 ?x100)) $x231))))
(let ((?x183 (+ (+ (* 17 |v4:5|) (* ?x123 |v8:1|)) (* 16 |v4:5|))))
(let ((?x171 (+ (+ (* (- 16) |v2:7|) (* 18 |v5:4|)) (* 18 |v8:1|))))
(let ((?x163 (+ (+ (* (- 17) |v9:0|) (* 5 |v4:5|)) (* (- 3) |v1:8|))))
(let ((?x80 3))
(let ((?x153 (+ (+ (* 13 |v4:5|) (* (- 4) |v7:2|)) (* (- 8) |v4:5|))))
(let ((?x83 (- 17)))
(let (($x146 (<= (+ (+ (* ?x80 |v1:8|) (* (- 8) |v1:8|)) (* ?x138 |v9:0|)) ?x83)))
(let (($x174 (and (or $x146 (<= ?x153 ?x80)) (or (<= ?x163 (- 12)) (<= ?x171 (- 3))))))
(let (($x139 (<= (+ (+ (* (- 5) |v7:2|) ?x132) (* (- 18) |v1:8|)) ?x138)))
(let ((?x91 5))
(let ((?x125 (+ (+ (* 20 |v8:1|) (* 6 |v4:5|)) (* ?x123 |v1:8|))))
(let ((?x49 2))
(let (($x117 (<= (+ (+ (* (- 9) |v3:6|) (* ?x100 |v5:4|)) (* ?x49 |v5:4|)) ?x49)))
(let ((?x75 (- 16)))
(let ((?x107 (+ (+ (* ?x100 |v9:0|) (* (- 9) |v8:1|)) (* (- 15) |v9:0|))))
(let ((?x95 (- 9)))
(let ((?x96 (* ?x95 |v7:2|)))
(let (($x109 (or (<= (+ (+ (* (- 13) |v8:1|) (* ?x91 |v3:6|)) ?x96) ?x10) (<= ?x107 ?x75))))
(let ((?x71 18))
(let ((?x70 (+ (+ (* (- 10) |v0:9|) (* (- 19) |v0:9|)) (* (- 11) |v9:0|))))
(let (($x85 (or (<= ?x70 ?x71) (<= (+ (+ (* ?x75 |v0:9|) (* ?x75 |v6:3|)) (* ?x80 |v6:3|)) ?x83))))
(let ((?x23 (- 19)))
(let ((?x58 (+ (+ (* ?x49 |v7:2|) (* (- 8) |v5:4|)) (* 17 |v6:3|))))
(let (($x46 (<= (+ (+ |v9:0| (* 15 |v9:0|)) (* 6 |v4:5|)) 14)))
(let (($x32 (<= (+ (+ (* ?x23 |v6:3|) (* ?x23 |v1:8|)) (* (- 10) |v5:4|)) ?x23)))
(let ((?x13 13))
(let (($x21 (<= (+ (+ (* ?x10 |v5:4|) (* ?x13 |v6:3|)) (* (- 20) |v8:1|)) ?x13)))
(let (($x176 (or (or (and (or $x21 $x32) (or $x46 (<= ?x58 ?x23))) (or $x85 $x109)) (and (or (or $x117 (<= ?x125 ?x91)) $x139) $x174))))
(or $x176 (or (<= ?x183 20) $x233)))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

