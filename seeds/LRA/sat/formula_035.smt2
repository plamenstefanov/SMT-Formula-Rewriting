(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_035.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let (($x164 (<= (+ (+ (* 20 |v2:7|) (* (- 15) |v5:4|)) |v7:2|) 18)))
(let ((?x154 (+ (+ (* 6 |v1:8|) (* (- 19) |v7:2|)) (* (- 5) |v8:1|))))
(let ((?x24 0))
(let ((?x124 (* (- 8) |v8:1|)))
(let (($x142 (<= (+ (+ (* (- 7) |v0:9|) (* 20 |v7:2|)) ?x124) ?x24)))
(let ((?x10 (- 20)))
(let ((?x135 (+ (+ (* 11 |v3:6|) (* 18 |v6:3|)) (* 8 |v3:6|))))
(let (($x126 (<= (+ (+ (* 20 |v4:5|) (* (- 3) |v3:6|)) ?x124) ?x24)))
(let ((?x114 (+ (+ (* 2 |v5:4|) (* 8 |v8:1|)) (* 20 |v5:4|))))
(let ((?x105 8))
(let ((?x104 (+ (+ (* 12 |v7:2|) (* 17 |v2:7|)) (* 12 |v6:3|))))
(let ((?x41 (* (- 8) |v5:4|)))
(let (($x96 (<= (+ (+ (* 16 |v3:6|) (* (- 1) |v2:7|)) ?x41) 15)))
(let ((?x60 (- 15)))
(let ((?x33 20))
(let ((?x84 (* ?x33 |v2:7|)))
(let (($x86 (<= (+ (+ (* 3 |v0:9|) (* 17 |v9:0|)) ?x84) ?x60)))
(let (($x159 (or (or (or $x86 $x96) (or (<= ?x104 ?x105) (<= ?x114 (- 2)))) (and (or $x126 (<= ?x135 ?x10)) (and $x142 (<= ?x154 19))))))
(let ((?x70 (+ (+ (* (- 16) |v5:4|) (* (- 4) |v0:9|)) (* 10 |v1:8|))))
(let ((?x59 (+ (+ (* (- 9) |v7:2|) (* (- 7) |v8:1|)) (* (- 1) |v7:2|))))
(let ((?x36 (- 9)))
(let ((?x32 (+ (+ (* ?x24 |v7:2|) (* (- 16) |v8:1|)) (* 5 |v8:1|))))
(let (($x49 (or (<= ?x32 ?x33) (<= (+ (+ (* ?x36 |v4:5|) ?x41) (* 12 |v1:8|)) ?x36))))
(let (($x21 (<= (+ (+ (* ?x10 |v9:0|) (* 5 |v7:2|)) (* ?x10 |v4:5|)) (- 4))))
(let (($x160 (and (and $x21 (and $x49 (or (<= ?x59 ?x60) (<= ?x70 (- 12))))) $x159)))
(and $x160 $x164)))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

