(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status sat)
(declare-fun y1 () Real)
(declare-fun y2 () Real)
(declare-fun y3 () Real)
(declare-fun x1 () Real)
(declare-fun y4 () Real)
(assert (or (exists ((?y1 Real)) (forall ((?y2 Real)) (forall ((?y3 Real)) (let ((?v_1 (* 68 x1)) (?v_0 (* (- 62) ?y3)) (?v_2 (* (- 55) ?y2))) (or (or (and (or (>= (+ (* 12 ?y2) (* 24 x1)) 4) (< (+ (+ (* 22 ?y2) (* 6 ?y1)) (* 46 x1)) 0)) (or (or (<= (+ (+ (* 93 ?y3) (* (- 8) ?y1)) (* (- 36) x1)) 69) (>= (+ (+ (* 41 ?y2) (* 14 ?y1)) (* (- 21) x1)) 64)) (or (= (+ (+ (* (- 98) ?y3) (* 13 ?y2)) ?v_1) (- 30)) (<= (+ (+ (* 27 ?y2) (* (- 60) ?y1)) (* 43 x1)) 6)))) (and (or (and (<= (+ (+ (+ (* 15 ?y3) (* (- 33) ?y2)) (* (- 19) ?y1)) (* (- 100) x1)) 0) (not (= (+ (* (- 57) ?y2) (* 15 ?y1)) 17))) (and (not (= (+ ?v_0 (* (- 35) ?y1)) 0)) (> (+ (+ (* (- 98) ?y2) (* 69 ?y1)) (* (- 75) x1)) 47))) (or (or (not (= (+ (* 62 ?y3) (* (- 83) ?y2)) 0)) (not (= (+ (* 79 ?y3) (* (- 95) ?y2)) 0))) (or (< (* (- 1) ?y3) (- 29)) (>= (+ (+ ?v_0 (* (- 96) ?y1)) ?v_1) (- 35)))))) (or (or (and (and (= (* 16 ?y1) (- 36)) (<= (+ (+ (+ (* (- 68) ?y3) (* (- 60) ?y2)) (* 17 ?y1)) (* (- 66) x1)) 0)) (or (<= (+ (+ (+ (* 83 ?y3) (* 73 ?y2)) (* (- 72) ?y1)) (* (- 35) x1)) 6) (= (+ (* 59 ?y3) ?v_2) 42))) (or (and (> (+ (* (- 56) ?y2) (* (- 76) ?y1)) (- 28)) (<= (+ (+ (* (- 13) ?y3) (* 79 ?y1)) (* (- 95) x1)) 0)) (not (= (+ (+ (* (- 85) ?y2) (* (- 82) ?y1)) (* 56 x1)) 6)))) (and (and (or (>= (+ (+ (+ (* 46 ?y3) (* 74 ?y2)) (* 58 ?y1)) (* 18 x1)) 0) (forall ((?y4 Real)) (= (+ (+ (+ (* 29 ?y4) (* (- 5) ?y2)) (* (- 4) ?y1)) (* (- 90) x1)) 0))) (< (+ (+ (+ (* (- 71) ?y3) ?v_2) (* 27 ?y1)) (* 16 x1)) 49)) (forall ((?y4 Real)) (or (<= (+ (+ (+ (* (- 67) ?y4) (* (- 91) ?y3)) (* (- 79) ?y2)) (* (- 38) ?y1)) 48) (>= (+ (+ (+ (+ (* (- 11) ?y4) (* 25 ?y3)) (* 74 ?y2)) (* 63 ?y1)) (* (- 22) x1)) (- 11))))))))))) (or (and (or (or (exists ((?y2 Real)) (exists ((?y3 Real)) (forall ((?y4 Real)) (<= (+ (+ (+ (* (- 96) ?y4) (* (- 46) ?y3)) (* 1 ?y2)) (* (- 75) x1)) 0)))) (and (forall ((?y2 Real)) (or (forall ((?y3 Real)) (>= (+ (* 84 ?y2) (* 60 x1)) 0)) (and (<= (* 14 ?y2) (- 72)) (< (* (- 35) ?y2) 97)))) (or (exists ((?y2 Real)) (forall ((?y3 Real)) (> (+ (* 35 ?y3) (* (- 75) x1)) (- 46)))) (forall ((?y2 Real)) (or (<= (+ (* (- 22) ?y2) (* (- 22) x1)) 0) (>= (* (- 29) x1) 0)))))) (forall ((?y2 Real)) (exists ((?y3 Real)) (exists ((?y4 Real)) (and (<= (+ (* 42 ?y3) (* (- 64) ?y2)) 45) (<= (+ (+ (* (- 95) ?y3) (* (- 39) ?y2)) (* 51 x1)) 57)))))) (exists ((?y2 Real)) (exists ((?y3 Real)) (forall ((?y4 Real)) (or (and (not (= (+ (+ (+ (* 96 ?y4) (* (- 38) ?y3)) (* 29 ?y2)) (* 69 x1)) 45)) (<= (+ (+ (+ (* (- 51) ?y4) (* (- 18) ?y3)) (* (- 95) ?y2)) (* (- 70) x1)) 68)) (and (and (= (+ (+ (+ (* 47 ?y4) (* 75 ?y3)) (* (- 8) ?y2)) (* (- 18) x1)) 42) (= (+ (+ (+ (* 39 ?y4) (* 57 ?y3)) (* 54 ?y2)) (* (- 88) x1)) 9)) (and (not (= (+ (+ (+ (* 53 ?y4) (* 95 ?y3)) (* (- 14) ?y2)) (* (- 40) x1)) 20)) (< (+ (* (- 14) ?y4) (* 45 x1)) (- 2))))))))) (and (exists ((?y1 Real)) (exists ((?y2 Real)) (or (and (or (exists ((?y4 Real)) (< (+ (+ (+ (* 47 ?y4) (* (- 30) ?y2)) (* 27 ?y1)) (* 48 x1)) 70)) (forall ((?y4 Real)) (not (= (+ (+ (* (- 2) ?y4) (* 39 ?y2)) (* 29 x1)) 0)))) (or (and (forall ((?y3 Real)) (> (+ (* (- 58) ?y3) (* 19 x1)) 0)) (forall ((?y3 Real)) (= (* (- 83) x1) 35))) (or (or (not (= (+ (* (- 45) ?y1) (* 31 x1)) (- 21))) (> (+ (+ (* 38 ?y2) (* (- 13) ?y1)) (* 96 x1)) 0)) (= (+ (* (- 88) ?y2) (* (- 60) ?y1)) (- 9))))) (forall ((?y4 Real)) (and (not (= (+ (+ (* 17 ?y4) (* 94 ?y2)) (* (- 60) x1)) (- 39))) (or (>= (+ (+ (* 46 ?y4) (* 90 ?y2)) (* (- 87) ?y1)) 1) (not (= (+ (+ (+ (* 80 ?y4) (* 68 ?y2)) (* 86 ?y1)) (* (- 19) x1)) (- 97))))))))) (exists ((?y1 Real)) (or (exists ((?y2 Real)) (exists ((?y4 Real)) (let ((?v_3 (* (- 100) ?y2))) (and (and (= (+ (+ (+ (* (- 23) ?y4) ?v_3) (* 80 ?y1)) (* (- 32) x1)) 12) (<= (+ (+ (+ (* (- 33) ?y4) ?v_3) (* (- 71) ?y1)) (* (- 33) x1)) 0)) (or (>= (+ (+ (* (- 84) ?y4) (* 52 ?y1)) (* (- 40) x1)) 34) (= (+ (+ (+ (* 21 ?y4) (* 98 ?y2)) (* 97 ?y1)) (* (- 75) x1)) 63)))))) (exists ((?y2 Real)) (and (forall ((?y3 Real)) (and (< (+ (+ (* (- 23) ?y2) (* 15 ?y1)) (* (- 75) x1)) (- 80)) (< (+ (+ (* 60 ?y3) (* (- 11) ?y2)) (* 75 x1)) 43))) (forall ((?y3 Real)) (or (and (<= (+ (+ (* (- 75) ?y3) (* 26 ?y1)) (* 21 x1)) 71) (= (+ (+ (* 17 ?y3) (* (- 50) ?y1)) (* 88 x1)) 0)) (exists ((?y4 Real)) (<= (+ (+ (+ (* (- 21) ?y4) (* 47 ?y3)) (* 48 ?y2)) (* 75 x1)) (- 22)))))))))))))
(check-sat)
(exit)
