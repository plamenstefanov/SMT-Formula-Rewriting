(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_151.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x140 (- 9)))
(let ((?x278 (+ (+ (* (- 3) |v4:5|) (* (- 5) |v3:6|)) (* (- 2) |v4:5|))))
(let ((?x109 (- 20)))
(let ((?x10 14))
(let ((?x119 (* ?x10 |v0:9|)))
(let (($x271 (<= (+ (+ (* (- 15) |v6:3|) (* (- 15) |v7:2|)) ?x119) ?x109)))
(let ((?x265 (+ (+ (* (- 8) |v8:1|) (* (- 10) |v1:8|)) (* 5 |v0:9|))))
(let ((?x260 (+ (+ (* ?x10 |v1:8|) (* 20 |v5:4|)) (* 8 |v5:4|))))
(let (($x281 (or (or (<= ?x260 9) (<= ?x265 1)) (and $x271 (<= ?x278 ?x140)))))
(let ((?x253 (+ (+ (* (- 8) |v7:2|) (* 20 |v7:2|)) (* 11 |v1:8|))))
(let ((?x40 (- 2)))
(let ((?x246 (+ (+ (* (- 3) |v7:2|) (* (- 10) |v2:7|)) (* 8 |v0:9|))))
(let ((?x14 3))
(let ((?x216 (* (- 15) |v7:2|)))
(let (($x241 (<= (+ (+ (* (- 18) |v0:9|) (* 16 |v5:4|)) ?x216) ?x14)))
(let ((?x234 (+ (+ (* (- 3) |v8:1|) (* 9 |v7:2|)) (* 2 |v6:3|))))
(let ((?x226 (+ (+ (* (- 11) |v7:2|) (* 4 |v4:5|)) (* 10 |v3:6|))))
(let ((?x102 5))
(let (($x237 (and (<= (+ (+ ?x216 (* 18 |v7:2|)) (* ?x140 |v1:8|)) ?x102) (or (<= ?x226 ?x40) (<= ?x234 (- 13))))))
(let ((?x44 17))
(let ((?x210 (+ (+ (* 4 |v1:8|) (* (- 14) |v3:6|)) (* (- 4) |v1:8|))))
(let ((?x199 (+ (+ (* (- 10) |v0:9|) (* 8 |v7:2|)) (* ?x140 |v0:9|))))
(let ((?x116 13))
(let ((?x191 (+ (+ (* 10 |v0:9|) (* (- 18) |v3:6|)) (* (- 13) |v6:3|))))
(let ((?x183 (+ (+ (* (- 11) |v9:0|) (* 10 |v4:5|)) (* ?x109 |v4:5|))))
(let (($x213 (and (and (<= ?x183 16) (<= ?x191 ?x116)) (or (<= ?x199 12) (<= ?x210 ?x44)))))
(let (($x283 (or (or $x213 $x237) (and (or (and $x241 (<= ?x246 ?x40)) (<= ?x253 (- 6))) $x281))))
(let ((?x173 (+ (+ (* (- 12) |v3:6|) (* (- 18) |v0:9|)) (* ?x109 |v0:9|))))
(let ((?x113 6))
(let ((?x165 (+ (+ (* 18 |v6:3|) (* 2 |v4:5|)) (* ?x116 |v2:7|))))
(let ((?x154 (- 18)))
(let ((?x153 (+ (+ (* 10 |v9:0|) (* ?x102 |v9:0|)) (* 20 |v0:9|))))
(let ((?x18 (- 7)))
(let (($x145 (<= (+ (+ (* (- 6) |v0:9|) (* ?x140 |v4:5|)) (* ?x18 |v6:3|)) ?x18)))
(let ((?x132 (+ (+ (* (- 17) |v3:6|) (* 7 |v0:9|)) (* ?x44 |v1:8|))))
(let (($x134 (or (<= (+ (+ ?x119 (* (- 14) |v0:9|)) (* ?x14 |v6:3|)) ?x14) (<= ?x132 ?x113))))
(let (($x117 (<= (+ (+ (* (- 10) |v3:6|) (* ?x109 |v7:2|)) (* ?x113 |v3:6|)) ?x116)))
(let ((?x101 (+ (+ (* 11 |v4:5|) (* 15 |v8:1|)) (* 7 |v3:6|))))
(let (($x177 (and (or (or (<= ?x101 ?x102) $x117) $x134) (or (or $x145 (<= ?x153 ?x154)) (or (<= ?x165 ?x113) (<= ?x173 ?x102))))))
(let ((?x87 (+ (+ (* (- 11) |v8:1|) (* 7 |v1:8|)) (* 10 |v1:8|))))
(let ((?x74 (+ (+ (* 0 |v2:7|) (* ?x18 |v0:9|)) (* (- 1) |v1:8|))))
(let ((?x63 (* 16 |v5:4|)))
(let (($x66 (<= (+ (+ (* (- 8) |v8:1|) (* 7 |v5:4|)) ?x63) 1)))
(let (($x51 (<= (+ (+ (* ?x40 |v1:8|) (* ?x44 |v3:6|)) (* ?x18 |v4:5|)) (- 1))))
(let ((?x36 (- 3)))
(let ((?x35 (+ (+ (* ?x14 |v9:0|) (* 8 |v1:8|)) (* 0 |v5:4|))))
(let ((?x21 (- 8)))
(let (($x53 (and (<= (+ (+ (* ?x10 |v7:2|) (* ?x14 |v6:3|)) (* ?x18 |v7:2|)) ?x21) (or (<= ?x35 ?x36) $x51))))
(let (($x91 (or $x53 (or (and $x66 (<= ?x74 (- 19))) (<= ?x87 (- 16))))))
(or (or $x91 $x177) $x283)))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

