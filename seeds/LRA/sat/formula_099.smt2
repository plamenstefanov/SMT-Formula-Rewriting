(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_099.m
(set-info :status sat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x47 0))
(let ((?x274 (+ (+ (* 12 |v7:4|) (* (- 10) |v4:7|)) (* 17 |v11:0|))))
(let ((?x10 19))
(let ((?x262 (+ (+ (* 9 |v3:8|) (* (- 5) |v7:4|)) (* 16 |v6:5|))))
(let ((?x97 (- 1)))
(let ((?x54 4))
(let ((?x195 (* ?x54 |v9:2|)))
(let ((?x254 (+ (+ (+ (* 14 |v11:0|) (* 13 |v9:2|)) ?x195) (* (- 15) |v3:8|))))
(let ((?x131 14))
(let ((?x244 (+ (+ (* ?x54 |v4:7|) (* (- 15) |v4:7|)) (* (- 18) |v10:1|))))
(let ((?x236 (+ (+ (* ?x47 |v10:1|) (* 6 |v11:0|)) (* 12 |v5:6|))))
(let (($x248 (or (<= (+ ?x236 (* 18 |v8:3|)) ?x97) (<= (+ ?x244 (* (- 8) |v8:3|)) ?x131))))
(let (($x267 (and $x248 (or (<= ?x254 ?x97) (<= (+ ?x262 (* (- 3) |v10:1|)) ?x10)))))
(let ((?x120 18))
(let ((?x213 (* ?x120 |v7:4|)))
(let ((?x224 (+ (+ (* (- 5) |v5:6|) (* 17 |v4:7|)) (* (- 17) |v11:0|))))
(let ((?x72 (- 20)))
(let ((?x73 (* ?x72 |v6:5|)))
(let (($x218 (<= (+ (+ (+ (* (- 17) |v1:10|) ?x213) (* ?x10 |v7:4|)) ?x73) ?x47)))
(let ((?x207 (+ (+ (* ?x47 |v3:8|) (* (- 9) |v3:8|)) (* (- 5) |v6:5|))))
(let ((?x35 8))
(let ((?x201 (+ (+ (+ ?x195 (* ?x47 |v4:7|)) (* (- 12) |v3:8|)) (* ?x72 |v5:6|))))
(let (($x211 (and (<= ?x201 ?x35) (<= (+ ?x207 (* (- 2) |v2:9|)) (- 7)))))
(let ((?x116 (- 2)))
(let ((?x193 (+ (+ (+ |v3:8| (* (- 15) |v6:5|)) (* (- 15) |v2:9|)) (* ?x35 |v4:7|))))
(let (($x269 (and (<= ?x193 ?x116) (and (or $x211 (or $x218 (<= (+ ?x224 ?x213) (- 4)))) $x267))))
(let ((?x178 (+ (+ (* 17 |v9:2|) (* (- 14) |v9:2|)) (* ?x47 |v1:10|))))
(let ((?x171 (+ (+ (+ (* (- 19) |v2:9|) (* (- 3) |v5:6|)) |v4:7|) (* (- 14) |v6:5|))))
(let (($x182 (or (<= ?x171 11) (<= (+ ?x178 (* 2 |v0:11|)) ?x97))))
(let ((?x156 (+ (+ (* (- 9) |v8:3|) (* (- 3) |v11:0|)) (* (- 7) |v1:10|))))
(let ((?x19 (- 17)))
(let ((?x59 (* 20 |v1:10|)))
(let ((?x145 (+ (+ (* (- 18) |v3:8|) (* (- 8) |v7:4|)) (* (- 12) |v5:6|))))
(let (($x160 (and (<= (+ ?x145 ?x59) ?x19) (<= (+ ?x156 (* 17 |v7:4|)) ?x54))))
(let ((?x133 (+ (+ (* 17 |v10:1|) (* (- 10) |v4:7|)) (* ?x131 |v7:4|))))
(let ((?x118 (+ (+ (* (- 5) |v1:10|) (* 12 |v10:1|)) (* ?x116 |v5:6|))))
(let (($x137 (and (<= (+ ?x118 (* ?x120 |v0:11|)) 15) (<= (+ ?x133 (* 16 |v5:6|)) ?x116))))
(let ((?x104 (+ (+ (* ?x97 |v7:4|) (* 17 |v2:9|)) (* 20 |v6:5|))))
(let ((?x94 (- 5)))
(let ((?x70 (* (- 11) |v6:5|)))
(let ((?x93 (+ (+ (+ (* 12 |v11:0|) |v0:11|) (* (- 9) |v2:9|)) ?x70)))
(let (($x138 (or (and (<= ?x93 ?x94) (<= (+ ?x104 (* (- 13) |v8:3|)) ?x47)) $x137)))
(let (($x81 (<= (+ (+ (+ ?x70 ?x73) (* (- 16) |v7:4|)) (* ?x72 |v2:9|)) 13)))
(let ((?x64 (+ (+ (+ (* 15 |v3:8|) (* ?x54 |v5:6|)) ?x59) (* (- 12) |v2:9|))))
(let ((?x42 (+ (+ (* 16 |v9:2|) (* ?x35 |v3:8|)) (* (- 6) |v1:10|))))
(let (($x67 (or (<= (+ ?x42 (* 2 |v3:8|)) ?x47) (<= ?x64 (- 16)))))
(let ((?x27 (- 8)))
(let ((?x26 (+ (+ (+ (* ?x10 |v5:6|) (* (- 11) |v9:2|)) (* ?x19 |v8:3|)) (* 12 |v2:9|))))
(let (($x270 (or (or (or (<= ?x26 ?x27) (or $x67 $x81)) (and $x138 (and $x160 $x182))) $x269)))
(and $x270 (<= (+ ?x274 (* ?x47 |v2:9|)) ?x47))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

