(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_170.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x42 2))
(let ((?x132 (+ (+ (* (- 10) |v4:5|) (* (- 7) |v0:9|)) (* (- 20) |v3:6|))))
(let ((?x52 (- 8)))
(let ((?x121 (+ (+ (* 0 |v8:1|) (* 19 |v6:3|)) (* 14 |v2:7|))))
(let ((?x27 (- 20)))
(let ((?x108 (+ (+ (* 10 |v6:3|) (* (- 13) |v1:8|)) (* 6 |v7:2|))))
(let ((?x100 (+ (+ (* 17 |v7:2|) (* (- 19) |v7:2|)) (* 6 |v1:8|))))
(let ((?x86 (+ (+ (* 10 |v2:7|) (* (- 11) |v8:1|)) (* 18 |v8:1|))))
(let ((?x75 (+ (+ (* 8 |v2:7|) (* ?x52 |v1:8|)) (* (- 14) |v5:4|))))
(let (($x111 (and (or (<= ?x75 (- 10)) (<= ?x86 ?x27)) (or (<= ?x100 ?x42) (<= ?x108 ?x27)))))
(let (($x62 (<= (+ (+ (* 0 |v3:6|) (* (- 4) |v9:0|)) |v6:3|) 16)))
(let ((?x51 (+ (+ (* ?x42 |v9:0|) (* 15 |v5:4|)) (* 5 |v3:6|))))
(let ((?x36 (+ (+ (* ?x27 |v2:7|) (* (- 11) |v2:7|)) (* 12 |v8:1|))))
(let ((?x21 (+ (+ (* (- 5) |v9:0|) (* 16 |v6:3|)) (* 5 |v8:1|))))
(let (($x64 (and (and (<= ?x21 (- 12)) (<= ?x36 13)) (and (<= ?x51 ?x52) $x62))))
(or (and (or $x64 $x111) (<= ?x121 ?x52)) (<= ?x132 ?x42))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

