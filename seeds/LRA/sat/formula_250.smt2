(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_250.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x43 11))
(let ((?x256 (+ (+ (* (- 17) |v8:1|) (* 18 |v8:1|)) (* 6 |v9:0|))))
(let ((?x250 (+ (+ (* 13 |v8:1|) (* (- 12) |v2:7|)) (* 13 |v1:8|))))
(let ((?x140 8))
(let ((?x243 (+ (+ (* 16 |v7:2|) (* (- 17) |v1:8|)) (* (- 14) |v0:9|))))
(let ((?x31 (- 8)))
(let ((?x231 (+ (+ (* 12 |v4:5|) (* (- 2) |v0:9|)) (* 17 |v6:3|))))
(let (($x259 (and (and (<= ?x231 ?x31) (<= ?x243 ?x140)) (and (<= ?x250 16) (<= ?x256 ?x43)))))
(let ((?x143 20))
(let ((?x223 (+ (+ (* (- 18) |v1:8|) (* 12 |v7:2|)) (* (- 9) |v5:4|))))
(let ((?x66 (- 1)))
(let ((?x213 (+ (+ (* 7 |v8:1|) (* (- 11) |v2:7|)) (* 2 |v4:5|))))
(let (($x207 (<= (+ (+ (* (- 13) |v3:6|) (* ?x140 |v3:6|)) |v5:4|) 1)))
(let ((?x199 (+ (+ (* (- 18) |v5:4|) (* 9 |v5:4|)) (* 0 |v9:0|))))
(let (($x226 (or (or (<= ?x199 (- 10)) $x207) (or (<= ?x213 ?x66) (<= ?x223 ?x143)))))
(let ((?x190 (+ (+ (* (- 15) |v4:5|) (* (- 15) |v8:1|)) (* 14 |v7:2|))))
(let ((?x134 9))
(let (($x180 (<= (+ (+ |v7:2| (* 2 |v1:8|)) (* 14 |v8:1|)) ?x134)))
(let (($x175 (<= (+ (+ (* (- 20) |v3:6|) (* 15 |v3:6|)) |v8:1|) ?x140)))
(let ((?x90 (- 3)))
(let ((?x168 (+ (+ (* ?x31 |v9:0|) (* 2 |v7:2|)) (* 4 |v0:9|))))
(let ((?x160 (+ (+ (* 5 |v5:4|) (* 10 |v1:8|)) (* (- 4) |v4:5|))))
(let ((?x152 (+ (+ (* ?x143 |v8:1|) (* (- 15) |v9:0|)) (* 17 |v7:2|))))
(let ((?x139 (+ (+ (* ?x134 |v2:7|) (* 13 |v3:6|)) (* (- 12) |v4:5|))))
(let ((?x106 5))
(let ((?x129 (+ (+ (* 7 |v1:8|) (* ?x31 |v7:2|)) (* (- 20) |v6:3|))))
(let ((?x50 (- 13)))
(let ((?x121 (+ (+ (* 6 |v4:5|) (* 18 |v1:8|)) (* (- 18) |v6:3|))))
(let (($x155 (and (or (<= ?x121 ?x50) (<= ?x129 ?x106)) (or (<= ?x139 ?x140) (<= ?x152 ?x143)))))
(let (($x110 (<= (+ (+ (* ?x90 |v3:6|) (* 3 |v2:7|)) (* ?x106 |v2:7|)) (- 2))))
(let ((?x96 14))
(let (($x97 (<= (+ (+ (* ?x90 |v0:9|) (* 6 |v4:5|)) (* ?x66 |v4:5|)) ?x96)))
(let ((?x83 (+ (+ (* (- 10) |v7:2|) (* 2 |v8:1|)) (* 2 |v3:6|))))
(let ((?x72 (+ (+ (* ?x66 |v5:4|) (* 15 |v1:8|)) (* (- 12) |v3:6|))))
(let ((?x27 (- 4)))
(let (($x62 (<= (+ (+ (* (- 11) |v7:2|) (* ?x43 |v9:0|)) (* ?x31 |v4:5|)) ?x27)))
(let (($x53 (<= (+ (+ (* ?x43 |v7:2|) (* 10 |v9:0|)) (* ?x50 |v8:1|)) ?x43)))
(let ((?x39 (- 12)))
(let (($x40 (<= (+ (+ (* ?x27 |v3:6|) (* ?x31 |v8:1|)) (* 15 |v7:2|)) ?x39)))
(let ((?x22 7))
(let ((?x21 (+ (+ (* 13 |v9:0|) (* 6 |v5:4|)) (* (- 7) |v6:3|))))
(let (($x113 (and (or (and (<= ?x21 ?x22) $x40) (and $x53 $x62)) (and (or (<= ?x72 ?x31) (<= ?x83 (- 6))) (and $x97 $x110)))))
(let (($x184 (and $x113 (or $x155 (and (or (<= ?x160 ?x143) (<= ?x168 ?x90)) (and $x175 $x180))))))
(or $x184 (or (<= ?x190 (- 16)) (or $x226 $x259)))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

