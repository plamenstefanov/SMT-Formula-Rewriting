(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_045.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x14 (- 2)))
(let ((?x146 (+ (+ (* ?x14 |v7:2|) (* (- 13) |v3:6|)) (* (- 9) |v7:2|))))
(let ((?x134 (+ (+ (* 9 |v2:7|) (* (- 12) |v1:8|)) (* 10 |v4:5|))))
(let ((?x125 (+ (+ (* (- 11) |v9:0|) (* 5 |v7:2|)) (* (- 16) |v0:9|))))
(let (($x149 (and (<= ?x125 (- 7)) (or (<= ?x134 (- 19)) (<= ?x146 ?x14)))))
(let ((?x80 15))
(let ((?x114 (+ (+ (* 4 |v1:8|) (* 20 |v1:8|)) (* (- 8) |v6:3|))))
(let ((?x107 (+ (+ (* 20 |v2:7|) (* (- 6) |v7:2|)) (* (- 15) |v5:4|))))
(let ((?x98 (+ (+ (* 7 |v6:3|) (* 9 |v1:8|)) (* 9 |v9:0|))))
(let (($x116 (and (or (<= ?x98 8) (<= ?x107 (- 18))) (<= ?x114 ?x80))))
(let (($x87 (<= (+ (+ (* ?x80 |v2:7|) (* 3 |v4:5|)) (* ?x80 |v0:9|)) (- 7))))
(let ((?x20 (- 11)))
(let ((?x76 (+ (+ (* 9 |v7:2|) (* (- 12) |v7:2|)) (* 20 |v4:5|))))
(let ((?x62 (+ (+ (* (- 10) |v7:2|) (* 4 |v6:3|)) (* (- 8) |v2:7|))))
(let ((?x51 (+ (+ (* (- 1) |v2:7|) (* 17 |v7:2|)) (* (- 8) |v9:0|))))
(let (($x89 (or (or (<= ?x51 16) (<= ?x62 18)) (or (<= ?x76 ?x20) $x87))))
(let ((?x35 (+ (+ (* (- 18) |v7:2|) (* 19 |v4:5|)) (* 3 |v0:9|))))
(let ((?x19 (+ (+ (* 4 |v0:9|) (* ?x14 |v1:8|)) (* 4 |v5:4|))))
(and (<= ?x19 ?x20) (or (and (<= ?x35 (- 15)) $x89) (and $x116 $x149))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

