(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_135.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x152 8))
(let (($x281 (<= (+ (+ |v4:5| (* (- 18) |v2:7|)) (* (- 3) |v6:3|)) ?x152)))
(let ((?x155 14))
(let ((?x273 (+ (+ (* 19 |v0:9|) (* (- 13) |v6:3|)) (* (- 13) |v2:7|))))
(let ((?x10 (- 11)))
(let ((?x267 (+ (+ (* 2 |v4:5|) (* (- 4) |v0:9|)) (* 16 |v9:0|))))
(let ((?x115 1))
(let (($x263 (<= (+ (+ |v2:7| (* 13 |v9:0|)) (* (- 4) |v9:0|)) ?x115)))
(let ((?x253 (+ (+ (* (- 16) |v2:7|) (* (- 20) |v7:2|)) (* (- 9) |v4:5|))))
(let ((?x247 (+ (+ (* 18 |v1:8|) (* (- 17) |v9:0|)) (* (- 10) |v2:7|))))
(let ((?x207 (- 10)))
(let ((?x239 (+ (+ (* ?x155 |v3:6|) (* (- 6) |v6:3|)) (* (- 13) |v4:5|))))
(let (($x284 (and (or (<= ?x239 ?x207) (or (<= ?x247 5) (<= ?x253 ?x115))) (or (or $x263 (<= ?x267 ?x10)) (or (<= ?x273 ?x155) $x281)))))
(let ((?x145 11))
(let ((?x226 (+ (+ (* 0 |v8:1|) (* ?x145 |v3:6|)) (* 17 |v3:6|))))
(let ((?x72 (- 18)))
(let ((?x220 (+ (+ (* (- 5) |v7:2|) (* ?x152 |v1:8|)) (* (- 9) |v7:2|))))
(let ((?x211 (+ (+ (* ?x207 |v9:0|) (* (- 2) |v5:4|)) (* 17 |v8:1|))))
(let ((?x64 (- 16)))
(let ((?x73 (* ?x72 |v6:3|)))
(let (($x204 (<= (+ (+ (* 19 |v0:9|) (* (- 1) |v2:7|)) ?x73) ?x64)))
(let (($x229 (or (or $x204 (<= ?x211 (- 12))) (and (<= ?x220 ?x72) (<= ?x226 ?x145)))))
(let ((?x198 (+ (+ (* (- 20) |v2:7|) (* 12 |v4:5|)) (* (- 20) |v5:4|))))
(let ((?x192 (+ (+ (* 6 |v0:9|) (* (- 1) |v6:3|)) (* (- 2) |v3:6|))))
(let ((?x177 6))
(let ((?x34 2))
(let ((?x181 (* ?x34 |v4:5|)))
(let ((?x133 (- 7)))
(let (($x175 (<= (+ (+ (* (- 2) |v7:2|) (* ?x10 |v7:2|)) (* ?x133 |v2:7|)) ?x133)))
(let (($x184 (or $x175 (<= (+ (+ (* ?x177 |v1:8|) (* 19 |v9:0|)) ?x181) ?x177))))
(let (($x168 (<= (+ (+ (* ?x10 |v5:4|) (* (- 15) |v9:0|)) (* ?x10 |v3:6|)) 4)))
(let (($x160 (<= (+ (+ (* ?x152 |v0:9|) (* ?x155 |v0:9|)) (* 17 |v5:4|)) 10)))
(let ((?x147 (+ (+ (* (- 8) |v4:5|) (* 18 |v2:7|)) (* ?x145 |v4:5|))))
(let ((?x27 (- 20)))
(let (($x138 (<= (+ (+ (* 19 |v3:6|) (* ?x133 |v4:5|)) (* ?x133 |v8:1|)) ?x27)))
(let ((?x126 (+ (+ (* 17 |v6:3|) (* (- 19) |v7:2|)) (* (- 8) |v3:6|))))
(let ((?x19 (- 5)))
(let ((?x112 (* ?x19 |v5:4|)))
(let (($x129 (and (<= (+ (+ (* 0 |v9:0|) ?x112) ?x112) ?x115) (<= ?x126 4))))
(let ((?x45 12))
(let ((?x105 (+ (+ (* ?x45 |v3:6|) (* 16 |v3:6|)) (* 3 |v7:2|))))
(let ((?x79 0))
(let ((?x94 (+ (+ (* (- 4) |v5:4|) (* (- 2) |v5:4|)) (* (- 4) |v6:3|))))
(let (($x86 (<= (+ (+ (* ?x19 |v2:7|) (* ?x79 |v5:4|)) (* 9 |v6:3|)) ?x79)))
(let ((?x75 (- 8)))
(let (($x87 (and (<= (+ (+ (* ?x64 |v6:3|) (* 15 |v2:7|)) ?x73) ?x75) $x86)))
(let ((?x22 19))
(let ((?x57 (* ?x22 |v0:9|)))
(let (($x51 (<= (+ (+ (* 10 |v0:9|) (* ?x45 |v7:2|)) (* ?x45 |v5:4|)) ?x34)))
(let (($x60 (or $x51 (<= (+ (+ (* 7 |v9:0|) (* ?x45 |v7:2|)) ?x57) ?x45))))
(let ((?x37 (- 1)))
(let (($x38 (<= (+ (+ (* ?x27 |v6:3|) (* 5 |v7:2|)) (* ?x34 |v7:2|)) ?x37)))
(let (($x23 (<= (+ (+ (* ?x10 |v1:8|) (* (- 4) |v8:1|)) (* ?x19 |v7:2|)) ?x22)))
(let (($x109 (or (or (or $x23 $x38) $x60) (and $x87 (and (<= ?x94 ?x79) (<= ?x105 ?x45))))))
(let (($x187 (or $x109 (or (or $x129 (or $x138 (<= ?x147 ?x34))) (and (and $x160 $x168) $x184)))))
(and $x187 (and (or (and (<= ?x192 (- 19)) (<= ?x198 ?x10)) $x229) $x284))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

