(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_100.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x89 (* 6 |v3:6|)))
(let (($x139 (<= (+ (+ (* (- 8) |v1:8|) (* 19 |v4:5|)) ?x89) 13)))
(let ((?x132 (+ (+ (* (- 20) |v3:6|) (* 15 |v2:7|)) (* (- 13) |v2:7|))))
(let ((?x14 3))
(let ((?x124 (+ (+ (* 19 |v7:2|) (* 13 |v9:0|)) (* 18 |v8:1|))))
(let ((?x112 (* 13 |v9:0|)))
(let (($x115 (<= (+ (+ (* (- 15) |v2:7|) (* (- 18) |v0:9|)) ?x112) (- 10))))
(let ((?x104 (+ (+ (* 9 |v1:8|) (* (- 3) |v1:8|)) (* (- 2) |v3:6|))))
(let (($x92 (<= (+ (+ (* (- 13) |v0:9|) (* (- 20) |v1:8|)) ?x89) (- 1))))
(let ((?x57 19))
(let ((?x83 (+ (+ (* 6 |v0:9|) (* (- 9) |v8:1|)) (* (- 18) |v3:6|))))
(let (($x141 (and (and (and (<= ?x83 ?x57) $x92) (and (<= ?x104 (- 3)) $x115)) (and (and (<= ?x124 ?x14) (<= ?x132 (- 7))) $x139))))
(let ((?x70 (+ (+ (* (- 9) |v1:8|) (* 8 |v5:4|)) (* (- 7) |v9:0|))))
(let ((?x60 (- 9)))
(let ((?x59 (+ (+ (* (- 8) |v5:4|) (* (- 15) |v6:3|)) (* ?x57 |v2:7|))))
(let ((?x43 (+ (+ (* (- 20) |v0:9|) (* 8 |v1:8|)) (* 8 |v9:0|))))
(let ((?x31 (+ (+ (* ?x14 |v8:1|) (* (- 13) |v9:0|)) (* 14 |v1:8|))))
(let (($x73 (or (or (and (<= ?x31 (- 17)) (<= ?x43 ?x14)) (<= ?x59 ?x60)) (<= ?x70 2))))
(let (($x20 (<= (+ (+ (* (- 11) |v5:4|) (* ?x14 |v8:1|)) |v4:5|) (- 16))))
(and $x20 (or $x73 $x141))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

