(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_283.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x73 (- 11)))
(let ((?x263 (* 19 |v5:4|)))
(let ((?x259 (+ (+ (* (- 13) |v7:2|) (* (- 10) |v4:5|)) (* 8 |v2:7|))))
(let ((?x29 (- 4)))
(let ((?x252 (+ (+ (* 17 |v0:9|) (* (- 3) |v3:6|)) (* (- 6) |v2:7|))))
(let (($x268 (or (and (<= ?x252 ?x29) (<= ?x259 5)) (<= (+ (+ ?x263 (* (- 20) |v8:1|)) ?x263) ?x73))))
(let ((?x244 (+ (+ (* (- 20) |v9:0|) (* 13 |v2:7|)) (* 3 |v6:3|))))
(let ((?x76 (- 10)))
(let ((?x236 (+ (+ (* 11 |v0:9|) (* 20 |v5:4|)) (* (- 8) |v4:5|))))
(let ((?x229 (+ (+ (* (- 7) |v3:6|) (* (- 18) |v5:4|)) (* 8 |v0:9|))))
(let (($x247 (and (<= ?x229 1) (or (<= ?x236 ?x76) (<= ?x244 1)))))
(let ((?x167 (- 13)))
(let (($x220 (<= (+ (+ (* 20 |v3:6|) (* (- 9) |v9:0|)) |v0:9|) ?x167)))
(let ((?x90 (- 6)))
(let ((?x127 (* (- 1) |v4:5|)))
(let (($x213 (<= (+ (+ (* (- 8) |v1:8|) (* 15 |v6:3|)) ?x127) ?x90)))
(let ((?x42 (- 8)))
(let ((?x207 (+ (+ (* 10 |v0:9|) (* (- 2) |v6:3|)) (* 15 |v4:5|))))
(let (($x201 (<= (+ (+ (* (- 2) |v8:1|) (* (- 19) |v5:4|)) |v1:8|) 0)))
(let ((?x164 20))
(let ((?x193 (+ (+ (* (- 3) |v4:5|) (* 16 |v9:0|)) (* 15 |v9:0|))))
(let (($x270 (and (and (or (or (<= ?x193 ?x164) $x201) (or (<= ?x207 ?x42) $x213)) $x220) (and $x247 $x268))))
(let ((?x181 (+ (+ (* (- 3) |v8:1|) (* 17 |v8:1|)) (* (- 20) |v5:4|))))
(let ((?x21 12))
(let (($x183 (or (<= (+ (+ (* ?x21 |v6:3|) |v9:0|) (* (- 3) |v2:7|)) ?x21) (<= ?x181 ?x76))))
(let ((?x166 (+ (+ (* (- 9) |v0:9|) (* (- 17) |v0:9|)) (* ?x164 |v9:0|))))
(let ((?x154 (+ (+ (* 8 |v1:8|) (* 8 |v7:2|)) (* ?x21 |v1:8|))))
(let (($x148 (<= (+ (+ (* ?x76 |v0:9|) (* (- 20) |v1:8|)) (* ?x76 |v1:8|)) ?x73)))
(let ((?x141 (+ (+ (* 9 |v6:3|) (* ?x76 |v5:4|)) (* 13 |v5:4|))))
(let (($x134 (<= (+ (+ (* ?x29 |v7:2|) ?x127) (* 18 |v7:2|)) 7)))
(let ((?x120 (+ (+ (* 16 |v8:1|) (* 19 |v8:1|)) (* 11 |v6:3|))))
(let (($x150 (and (or (<= ?x120 4) $x134) (or (<= ?x141 18) $x148))))
(let ((?x104 (+ (+ (* ?x29 |v8:1|) (* 0 |v4:5|)) (* (- 12) |v0:9|))))
(let ((?x56 8))
(let ((?x94 (* ?x56 |v7:2|)))
(let (($x97 (<= (+ (+ (* ?x90 |v7:2|) (* 6 |v2:7|)) ?x94) (- 17))))
(let ((?x85 13))
(let (($x86 (<= (+ (+ (* (- 19) |v2:7|) (* ?x76 |v1:8|)) (* ?x76 |v0:9|)) ?x85)))
(let ((?x75 (+ (+ (* (- 7) |v6:3|) (* 9 |v3:6|)) (* ?x73 |v6:3|))))
(let ((?x50 10))
(let (($x53 (<= (+ (+ (* ?x42 |v3:6|) (* (- 12) |v1:8|)) (* ?x50 |v6:3|)) ?x50)))
(let (($x64 (or $x53 (<= (+ (+ (* ?x56 |v6:3|) (* ?x21 |v2:7|)) |v6:3|) 6))))
(let ((?x37 9))
(let ((?x36 (+ (+ (* (- 5) |v7:2|) (* ?x29 |v4:5|)) (* (- 16) |v3:6|))))
(let ((?x20 (+ (+ (* 14 |v8:1|) (* (- 19) |v7:2|)) (* 17 |v7:2|))))
(let (($x108 (and (or (and (<= ?x20 ?x21) (<= ?x36 ?x37)) $x64) (and (and (<= ?x75 ?x76) $x86) (and $x97 (<= ?x104 ?x29))))))
(let (($x186 (or $x108 (and $x150 (or (or (<= ?x154 (- 16)) (<= ?x166 ?x167)) $x183)))))
(or $x186 $x270)))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

