(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_195.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x58 (- 5)))
(let (($x160 (<= (+ (+ (* 7 |v0:9|) (* 10 |v5:4|)) |v0:9|) ?x58)))
(let ((?x44 3))
(let ((?x151 (+ (+ (* (- 4) |v3:6|) (* 8 |v7:2|)) (* 16 |v1:8|))))
(let ((?x117 (- 20)))
(let ((?x144 (+ (+ (* 8 |v6:3|) (* (- 15) |v6:3|)) (* 17 |v9:0|))))
(let ((?x48 (- 9)))
(let ((?x134 (+ (+ (* ?x117 |v5:4|) (* (- 11) |v4:5|)) (* (- 10) |v3:6|))))
(let ((?x123 (+ (+ (* 0 |v9:0|) (* ?x117 |v9:0|)) (* 15 |v3:6|))))
(let ((?x110 (+ (+ (* 18 |v5:4|) (* 2 |v0:9|)) (* (- 15) |v3:6|))))
(let ((?x100 (+ (+ (* (- 18) |v5:4|) (* (- 16) |v5:4|)) (* (- 15) |v1:8|))))
(let ((?x89 (+ (+ (* 20 |v8:1|) (* (- 7) |v9:0|)) (* ?x48 |v5:4|))))
(let (($x126 (or (or (<= ?x89 ?x44) (<= ?x100 (- 17))) (or (<= ?x110 4) (<= ?x123 ?x58)))))
(let ((?x76 (+ (+ (* ?x58 |v2:7|) (* 19 |v6:3|)) (* 11 |v0:9|))))
(let ((?x64 (+ (+ (* 2 |v0:9|) (* ?x58 |v8:1|)) (* (- 10) |v8:1|))))
(let (($x52 (<= (+ (+ (* 12 |v6:3|) (* ?x44 |v0:9|)) (* ?x48 |v9:0|)) (- 3))))
(let ((?x35 (+ (+ (* 14 |v5:4|) (* (- 16) |v8:1|)) (* (- 17) |v6:3|))))
(let (($x80 (and (and (<= ?x35 (- 2)) $x52) (or (<= ?x64 ?x48) (<= ?x76 (- 4))))))
(let (($x163 (or (or $x80 $x126) (or (<= ?x134 ?x48) (and (and (<= ?x144 ?x117) (<= ?x151 ?x44)) $x160)))))
(let ((?x17 16))
(let ((?x19 (+ (+ (* (- 8) |v4:5|) (* 7 |v9:0|)) (* ?x17 |v4:5|))))
(or (<= ?x19 ?x17) $x163)))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

