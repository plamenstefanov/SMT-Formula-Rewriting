(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_185.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x145 (- 9)))
(let ((?x275 (+ (+ (* (- 11) |v3:6|) (* 18 |v8:1|)) (* 11 |v6:3|))))
(let ((?x151 (- 18)))
(let ((?x267 (+ (+ (* 12 |v3:6|) (* 3 |v5:4|)) (* (- 11) |v6:3|))))
(let ((?x259 (+ (+ (* (- 8) |v7:2|) (* (- 3) |v7:2|)) (* 4 |v5:4|))))
(let ((?x69 4))
(let ((?x156 (- 19)))
(let ((?x199 (* ?x156 |v0:9|)))
(let (($x262 (and (<= (+ (+ (* 17 |v5:4|) (* ?x69 |v8:1|)) ?x199) ?x69) (<= ?x259 (- 7)))))
(let ((?x22 20))
(let (($x248 (<= (+ (+ (* 19 |v8:1|) (* 17 |v3:6|)) |v8:1|) ?x22)))
(let ((?x242 (+ (+ (* (- 16) |v7:2|) (* (- 3) |v4:5|)) (* 15 |v0:9|))))
(let ((?x58 (- 12)))
(let ((?x236 (+ (+ (* 15 |v4:5|) (* ?x22 |v5:4|)) (* (- 4) |v8:1|))))
(let (($x279 (or (or (<= ?x236 ?x58) (or (<= ?x242 (- 6)) $x248)) (or $x262 (or (<= ?x267 ?x151) (<= ?x275 ?x145))))))
(let ((?x14 14))
(let ((?x228 (+ (+ (* (- 2) |v4:5|) (* (- 1) |v2:7|)) (* ?x145 |v7:2|))))
(let ((?x136 (- 16)))
(let ((?x222 (+ (+ (* (- 1) |v8:1|) (* ?x69 |v4:5|)) (* 11 |v1:8|))))
(let ((?x215 (+ (+ (* (- 11) |v0:9|) (* 12 |v2:7|)) (* ?x58 |v5:4|))))
(let ((?x210 (+ (+ (* 19 |v5:4|) (* (- 14) |v9:0|)) (* (- 17) |v9:0|))))
(let (($x231 (or (and (<= ?x210 ?x14) (<= ?x215 ?x156)) (or (<= ?x222 ?x136) (<= ?x228 ?x14)))))
(let ((?x80 10))
(let (($x201 (<= (+ (+ (* 3 |v4:5|) (* 16 |v5:4|)) ?x199) ?x80)))
(let ((?x73 17))
(let ((?x74 (* ?x73 |v5:4|)))
(let (($x202 (or (<= (+ (+ (* ?x73 |v4:5|) (* ?x22 |v7:2|)) ?x74) (- 15)) $x201)))
(let ((?x47 8))
(let (($x189 (<= (+ (+ (* (- 17) |v5:4|) (* ?x151 |v5:4|)) (* ?x69 |v6:3|)) ?x47)))
(let ((?x100 7))
(let ((?x180 (+ (+ (* 16 |v7:2|) (* (- 6) |v6:3|)) (* (- 4) |v9:0|))))
(let ((?x141 11))
(let (($x167 (<= (+ (+ (* ?x145 |v2:7|) (* ?x151 |v3:6|)) (* (- 3) |v2:7|)) ?x141)))
(let (($x161 (<= (+ (+ (* ?x80 |v4:5|) (* ?x156 |v4:5|)) (* 16 |v4:5|)) ?x14)))
(let (($x142 (<= (+ (+ (* 15 |v4:5|) (* ?x136 |v9:0|)) (* ?x100 |v9:0|)) ?x141)))
(let (($x153 (and $x142 (<= (+ (+ (* ?x145 |v3:6|) (* ?x47 |v9:0|)) (* ?x145 |v0:9|)) ?x151))))
(let ((?x127 (+ (+ (* (- 15) |v9:0|) (* 2 |v1:8|)) (* ?x73 |v7:2|))))
(let ((?x115 (+ (+ (* (- 11) |v0:9|) (* 16 |v2:7|)) (* 5 |v3:6|))))
(let ((?x102 (+ (+ (* (- 20) |v2:7|) (* 6 |v9:0|)) (* ?x100 |v1:8|))))
(let (($x89 (<= (+ (+ (* ?x80 |v7:2|) (* 2 |v5:4|)) (* ?x22 |v6:3|)) 9)))
(let (($x77 (<= (+ (+ (* 5 |v9:0|) (* ?x69 |v2:7|)) ?x74) (- 10))))
(let (($x118 (or (and $x77 $x89) (or (<= ?x102 (- 13)) (<= ?x115 9)))))
(let ((?x61 3))
(let (($x62 (<= (+ (+ (* ?x14 |v8:1|) (* (- 14) |v7:2|)) (* ?x58 |v6:3|)) ?x61)))
(let ((?x43 12))
(let (($x50 (<= (+ (+ (* (- 5) |v7:2|) (* ?x43 |v8:1|)) (* ?x47 |v5:4|)) ?x43)))
(let ((?x36 (- 1)))
(let ((?x33 (- 3)))
(let ((?x34 (* ?x33 |v7:2|)))
(let (($x37 (<= (+ (+ (* 13 |v5:4|) (* 13 |v7:2|)) ?x34) ?x36)))
(let ((?x21 (+ (+ (* 5 |v2:7|) (* ?x14 |v8:1|)) (* (- 8) |v1:8|))))
(let (($x171 (and (or (or (or (<= ?x21 ?x22) $x37) (and $x50 $x62)) $x118) (or (<= ?x127 (- 2)) (and $x153 (or $x161 $x167))))))
(or $x171 (and (and (and (or (<= ?x180 ?x100) $x189) $x202) $x231) $x279)))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

