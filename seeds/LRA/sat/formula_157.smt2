(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_157.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x248 (+ (+ (* (- 2) |v1:8|) (* (- 9) |v9:0|)) (* (- 17) |v0:9|))))
(let ((?x49 (- 3)))
(let ((?x240 (+ (+ (* 20 |v2:7|) (* (- 2) |v6:3|)) (* 0 |v7:2|))))
(let ((?x78 14))
(let ((?x234 (+ (+ (* 17 |v7:2|) (* (- 13) |v3:6|)) (* 0 |v0:9|))))
(let ((?x66 (- 2)))
(let ((?x212 (* 6 |v8:1|)))
(let (($x230 (<= (+ (+ (* (- 8) |v0:9|) (* (- 9) |v6:3|)) ?x212) ?x66)))
(let (($x251 (or (and $x230 (<= ?x234 ?x78)) (or (<= ?x240 ?x49) (<= ?x248 15)))))
(let ((?x224 (+ (+ (* 17 |v7:2|) (* 12 |v4:5|)) (* 18 |v0:9|))))
(let (($x215 (<= (+ (+ (* ?x78 |v4:5|) (* 3 |v3:6|)) ?x212) (- 18))))
(let ((?x46 13))
(let ((?x205 (+ (+ (* (- 16) |v3:6|) (* (- 19) |v6:3|)) (* ?x78 |v0:9|))))
(let ((?x74 4))
(let ((?x200 (+ (+ (* 7 |v5:4|) (* ?x74 |v6:3|)) (* (- 1) |v0:9|))))
(let (($x196 (<= (+ (+ (* (- 8) |v6:3|) (* ?x46 |v3:6|)) (* ?x66 |v6:3|)) 10)))
(let (($x253 (and (or $x196 (and (and (<= ?x200 ?x74) (<= ?x205 ?x46)) $x215)) (or (<= ?x224 (- 18)) $x251))))
(let (($x184 (<= (+ (+ (* (- 8) |v2:7|) |v6:3|) (* (- 10) |v4:5|)) 6)))
(let ((?x151 (- 9)))
(let ((?x174 (+ (+ (* ?x46 |v0:9|) (* 19 |v7:2|)) (* 15 |v5:4|))))
(let ((?x53 7))
(let ((?x164 (+ (+ (* 20 |v5:4|) (* (- 1) |v5:4|)) (* 0 |v8:1|))))
(let ((?x158 (+ (+ (* ?x151 |v2:7|) (* 20 |v7:2|)) (* (- 12) |v9:0|))))
(let ((?x22 (- 13)))
(let ((?x36 (* ?x22 |v4:5|)))
(let (($x147 (<= (+ (+ (* (- 6) |v7:2|) (* (- 5) |v7:2|)) ?x36) (- 14))))
(let ((?x136 (* (- 19) |v6:3|)))
(let (($x138 (<= (+ (+ (* (- 20) |v4:5|) (* 2 |v4:5|)) ?x136) 8)))
(let ((?x126 0))
(let ((?x125 (+ (+ (* (- 4) |v1:8|) (* 3 |v8:1|)) (* (- 1) |v6:3|))))
(let ((?x119 (+ (+ (* 11 |v1:8|) (* (- 1) |v8:1|)) (* (- 10) |v9:0|))))
(let (($x187 (or (and (or (<= ?x119 ?x53) (<= ?x125 ?x126)) (or $x138 $x147)) (and (and (<= ?x158 ?x66) (<= ?x164 ?x53)) (and (<= ?x174 ?x151) $x184)))))
(let ((?x109 20))
(let ((?x108 (+ (+ (* ?x49 |v7:2|) (* 2 |v8:1|)) (* 17 |v1:8|))))
(let ((?x96 (+ (+ (* ?x46 |v2:7|) (* 3 |v8:1|)) (* 8 |v3:6|))))
(let ((?x84 (- 1)))
(let (($x85 (<= (+ (+ (* ?x78 |v6:3|) (* ?x49 |v5:4|)) (* 16 |v3:6|)) ?x84)))
(let ((?x73 (+ (+ (* ?x66 |v3:6|) (* (- 11) |v6:3|)) (* 16 |v1:8|))))
(let (($x60 (<= (+ (+ (* ?x49 |v8:1|) (* ?x53 |v5:4|)) (* (- 7) |v9:0|)) ?x22)))
(let (($x47 (<= (+ (+ ?x36 (* (- 5) |v9:0|)) (* 19 |v4:5|)) ?x46)))
(let ((?x29 (* 11 |v1:8|)))
(let (($x32 (<= (+ (+ (* ?x22 |v8:1|) (* 16 |v6:3|)) ?x29) (- 4))))
(let (($x19 (<= (+ (+ |v8:1| (* (- 16) |v1:8|)) (* 12 |v1:8|)) 11)))
(let (($x113 (and (or (and $x19 $x32) (or $x47 $x60)) (or (or (<= ?x73 ?x74) $x85) (or (<= ?x96 ?x66) (<= ?x108 ?x109))))))
(or (or $x113 $x187) $x253))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

