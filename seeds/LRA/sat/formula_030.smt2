(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_030.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x26 (- 16)))
(let ((?x88 10))
(let ((?x89 (* ?x88 |v5:4|)))
(let (($x285 (<= (+ (+ (* 0 |v3:6|) (* 3 |v9:0|)) ?x89) ?x26)))
(let ((?x136 3))
(let ((?x281 (+ (+ (* (- 17) |v8:1|) (* 15 |v3:6|)) (* (- 6) |v5:4|))))
(let ((?x69 17))
(let ((?x275 (+ (+ (* 7 |v4:5|) (* (- 19) |v5:4|)) (* 9 |v3:6|))))
(let ((?x91 (- 8)))
(let ((?x14 (- 14)))
(let ((?x15 (* ?x14 |v4:5|)))
(let (($x267 (<= (+ (+ (* (- 3) |v3:6|) (* (- 18) |v4:5|)) ?x15) ?x91)))
(let ((?x105 16))
(let ((?x262 (+ (+ (* 11 |v3:6|) (* (- 19) |v5:4|)) (* ?x88 |v4:5|))))
(let ((?x58 (- 6)))
(let ((?x186 (- 4)))
(let ((?x206 (* ?x186 |v2:7|)))
(let ((?x250 (+ (+ (* 19 |v8:1|) (* ?x136 |v9:0|)) (* (- 20) |v2:7|))))
(let (($x258 (or (<= ?x250 (- 18)) (<= (+ (+ (* ?x26 |v7:2|) (* 20 |v9:0|)) ?x206) ?x58))))
(let (($x288 (and (or $x258 (and (<= ?x262 ?x105) $x267)) (or (<= ?x275 ?x69) (and (<= ?x281 ?x136) $x285)))))
(let ((?x238 (+ (+ (* (- 15) |v1:8|) (* (- 13) |v5:4|)) (* ?x105 |v2:7|))))
(let ((?x130 14))
(let ((?x78 (- 19)))
(let ((?x232 (* ?x78 |v5:4|)))
(let (($x240 (or (<= (+ (+ (* (- 20) |v8:1|) (* ?x186 |v9:0|)) ?x232) ?x130) (<= ?x238 12))))
(let ((?x226 (+ (+ (* (- 5) |v6:3|) (* 6 |v3:6|)) (* 15 |v7:2|))))
(let ((?x42 (- 10)))
(let ((?x220 (+ (+ (* (- 12) |v8:1|) (* ?x69 |v7:2|)) (* 2 |v1:8|))))
(let (($x213 (<= (+ (+ (* ?x42 |v1:8|) (* ?x14 |v7:2|)) (* ?x58 |v3:6|)) 5)))
(let ((?x181 (- 5)))
(let (($x208 (<= (+ (+ (* (- 12) |v5:4|) (* 20 |v3:6|)) ?x206) ?x181)))
(let ((?x66 8))
(let (($x202 (<= (+ (+ (* ?x69 |v2:7|) (* ?x78 |v3:6|)) (* 4 |v1:8|)) ?x66)))
(let (($x203 (or (<= (+ (+ (* 2 |v0:9|) (* ?x66 |v9:0|)) |v4:5|) ?x26) $x202)))
(let (($x242 (and (or $x203 (and $x208 $x213)) (or (or (<= ?x220 ?x42) (<= ?x226 ?x130)) $x240))))
(let (($x177 (<= (+ (+ (* (- 17) |v0:9|) (* ?x14 |v2:7|)) (* ?x78 |v0:9|)) 1)))
(let (($x188 (or $x177 (<= (+ (+ (* ?x58 |v3:6|) (* ?x181 |v4:5|)) (* ?x130 |v5:4|)) ?x186))))
(let ((?x34 (- 20)))
(let ((?x169 (+ (+ (* 6 |v0:9|) (* 5 |v0:9|)) (* (- 17) |v5:4|))))
(let ((?x133 (- 11)))
(let (($x163 (<= (+ (+ (* ?x91 |v1:8|) (* (- 3) |v3:6|)) (* ?x88 |v3:6|)) ?x133)))
(let ((?x154 (+ (+ (* ?x26 |v3:6|) (* 20 |v0:9|)) (* (- 13) |v8:1|))))
(let (($x147 (<= (+ (+ (* ?x34 |v0:9|) (* ?x133 |v3:6|)) (* 2 |v9:0|)) ?x91)))
(let ((?x54 (- 17)))
(let ((?x131 (* ?x130 |v9:0|)))
(let (($x134 (<= (+ (+ (* 15 |v6:3|) (* 20 |v3:6|)) ?x131) ?x133)))
(let (($x157 (or (or $x134 (<= (+ (+ (* ?x136 |v4:5|) ?x131) (* ?x91 |v9:0|)) ?x54)) (or $x147 (<= ?x154 ?x42)))))
(let ((?x117 (+ (+ (* 12 |v4:5|) (* 20 |v7:2|)) (* ?x58 |v6:3|))))
(let (($x120 (and (<= (+ (+ ?x89 (* 13 |v1:8|)) (* ?x69 |v3:6|)) ?x105) (<= ?x117 (- 3)))))
(let ((?x85 (- 12)))
(let ((?x84 (+ (+ (* 9 |v4:5|) (* ?x78 |v4:5|)) (* 4 |v2:7|))))
(let (($x97 (or (<= ?x84 ?x85) (<= (+ (+ ?x89 (* ?x91 |v4:5|)) (* 9 |v6:3|)) ?x14))))
(let (($x70 (<= (+ (+ (* ?x58 |v9:0|) (* 18 |v2:7|)) (* ?x66 |v3:6|)) ?x69)))
(let ((?x52 (* (- 15) |v1:8|)))
(let (($x71 (and (<= (+ (+ (* ?x42 |v6:3|) (* 0 |v3:6|)) ?x52) ?x54) $x70)))
(let (($x37 (<= (+ (+ (* ?x26 |v8:1|) (* 5 |v0:9|)) (* ?x34 |v9:0|)) ?x26)))
(let (($x23 (<= (+ (+ (* 11 |v5:4|) ?x15) (* 2 |v9:0|)) 1)))
(let (($x191 (or (and (or (and $x23 $x37) $x71) (and $x97 $x120)) (or $x157 (or (and $x163 (<= ?x169 ?x34)) $x188)))))
(or $x191 (and $x242 $x288)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

