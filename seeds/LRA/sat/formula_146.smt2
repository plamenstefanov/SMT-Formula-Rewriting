(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_146.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x46 5))
(let ((?x14 (- 13)))
(let ((?x74 (* ?x14 |v3:6|)))
(let (($x288 (<= (+ (+ (* 6 |v0:9|) (* 18 |v9:0|)) ?x74) ?x46)))
(let ((?x282 (+ (+ (* 4 |v2:7|) (* (- 18) |v1:8|)) (* (- 20) |v6:3|))))
(let ((?x116 4))
(let ((?x275 (+ (+ (* (- 5) |v0:9|) (* (- 18) |v7:2|)) (* 20 |v4:5|))))
(let ((?x167 (- 16)))
(let ((?x269 (+ (+ (* (- 5) |v9:0|) (* ?x46 |v6:3|)) (* 18 |v0:9|))))
(let ((?x234 (- 18)))
(let ((?x90 (- 17)))
(let ((?x219 (* ?x90 |v9:0|)))
(let (($x263 (<= (+ (+ (* 12 |v3:6|) (* (- 15) |v9:0|)) ?x219) ?x234)))
(let ((?x258 (+ (+ (* (- 11) |v3:6|) (* (- 4) |v6:3|)) (* 20 |v0:9|))))
(let ((?x70 (- 1)))
(let ((?x251 (+ (+ (* 18 |v3:6|) (* (- 20) |v9:0|)) (* (- 4) |v9:0|))))
(let ((?x50 18))
(let ((?x247 (+ (+ (* (- 15) |v9:0|) (* 10 |v0:9|)) (* 0 |v8:1|))))
(let (($x265 (and (and (<= ?x247 ?x50) (<= ?x251 ?x70)) (and (<= ?x258 (- 6)) $x263))))
(let (($x291 (or $x265 (or (or (<= ?x269 ?x167) (<= ?x275 ?x116)) (and (<= ?x282 ?x46) $x288)))))
(let ((?x10 15))
(let (($x239 (<= (+ (+ (* ?x90 |v1:8|) (* ?x234 |v3:6|)) (* (- 5) |v9:0|)) ?x10)))
(let ((?x134 2))
(let ((?x230 (+ (+ (* (- 3) |v4:5|) (* (- 20) |v9:0|)) (* 0 |v5:4|))))
(let ((?x26 12))
(let ((?x217 (+ (+ (* (- 10) |v4:5|) (* 13 |v0:9|)) (* (- 5) |v5:4|))))
(let (($x226 (and (<= ?x217 ?x26) (<= (+ (+ ?x219 |v5:4|) (* 8 |v8:1|)) ?x70))))
(let ((?x93 (- 11)))
(let ((?x208 (+ (+ (* ?x50 |v2:7|) (* (- 15) |v2:7|)) (* (- 15) |v4:5|))))
(let ((?x58 14))
(let (($x203 (<= (+ (+ (* ?x10 |v1:8|) (* ?x26 |v8:1|)) (* 3 |v9:0|)) ?x58)))
(let ((?x195 (+ (+ (* ?x10 |v9:0|) (* 13 |v0:9|)) (* (- 15) |v3:6|))))
(let (($x187 (<= (+ (+ (* 10 |v1:8|) (* ?x46 |v0:9|)) (* ?x50 |v8:1|)) ?x90)))
(let (($x242 (and (or (or $x187 (<= ?x195 (- 10))) (and $x203 (<= ?x208 ?x93))) (or $x226 (or (<= ?x230 ?x134) $x239)))))
(let ((?x15 (* ?x14 |v7:2|)))
(let (($x177 (<= (+ (+ (* 13 |v8:1|) (* 3 |v9:0|)) ?x15) ?x46)))
(let ((?x169 (+ (+ (* (- 9) |v0:9|) (* 20 |v8:1|)) (* ?x167 |v1:8|))))
(let ((?x160 (+ (+ (* ?x134 |v3:6|) (* 9 |v9:0|)) (* (- 8) |v4:5|))))
(let ((?x84 (- 3)))
(let ((?x152 (+ (+ (* ?x70 |v8:1|) (* (- 20) |v0:9|)) (* 13 |v6:3|))))
(let ((?x144 10))
(let (($x145 (<= (+ (+ (* ?x58 |v1:8|) (* 9 |v3:6|)) (* ?x26 |v4:5|)) ?x144)))
(let ((?x133 (+ (+ (* 17 |v9:0|) (* 20 |v7:2|)) (* 11 |v9:0|))))
(let ((?x123 (+ (+ (* (- 9) |v1:8|) (* ?x116 |v4:5|)) (* 16 |v0:9|))))
(let ((?x110 (+ (+ (* 17 |v8:1|) (* (- 4) |v6:3|)) (* ?x14 |v8:1|))))
(let (($x180 (or (or (and (<= ?x110 ?x90) (<= ?x123 ?x14)) (and (<= ?x133 ?x134) $x145)) (and (and (<= ?x152 ?x84) (<= ?x160 ?x116)) (and (<= ?x169 ?x167) $x177)))))
(let (($x100 (<= (+ (+ (* ?x90 |v3:6|) (* ?x93 |v9:0|)) (* 6 |v2:7|)) ?x50)))
(let ((?x87 (- 4)))
(let ((?x86 (+ (+ (* (- 12) |v3:6|) (* (- 20) |v9:0|)) (* ?x84 |v5:4|))))
(let ((?x67 (+ (+ (* ?x58 |v5:4|) (* (- 20) |v5:4|)) (* (- 2) |v6:3|))))
(let (($x77 (and (<= ?x67 (- 2)) (<= (+ (+ (* ?x70 |v5:4|) (* (- 19) |v6:3|)) ?x74) ?x70))))
(let ((?x53 13))
(let (($x54 (<= (+ (+ (* (- 12) |v8:1|) (* ?x46 |v7:2|)) (* ?x50 |v3:6|)) ?x53)))
(let ((?x36 (+ (+ (* ?x26 |v3:6|) (* (- 9) |v2:7|)) (* 20 |v3:6|))))
(let ((?x21 0))
(let (($x39 (or (<= (+ (+ (* ?x10 |v5:4|) ?x15) (* (- 19) |v5:4|)) ?x21) (<= ?x36 19))))
(or (or (and (or $x39 $x54) (and $x77 (or (<= ?x86 ?x87) $x100))) $x180) (or $x242 $x291)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

