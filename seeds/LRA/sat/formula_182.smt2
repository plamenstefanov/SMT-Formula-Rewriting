(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_182.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x190 (- 7)))
(let ((?x274 (+ (+ (* (- 4) |v7:2|) (* 10 |v4:5|)) (* 4 |v5:4|))))
(let ((?x48 (- 16)))
(let (($x269 (<= (+ (+ (* 11 |v9:0|) (* ?x190 |v6:3|)) (* ?x48 |v2:7|)) ?x48)))
(let ((?x146 (- 11)))
(let ((?x261 (+ (+ (* 9 |v0:9|) (* 3 |v3:6|)) (* 5 |v0:9|))))
(let ((?x255 (+ (+ (* (- 6) |v1:8|) (* (- 12) |v3:6|)) (* (- 9) |v0:9|))))
(let (($x277 (or (or (<= ?x255 1) (<= ?x261 ?x146)) (or $x269 (<= ?x274 ?x190)))))
(let ((?x64 11))
(let ((?x247 (+ (+ (* 14 |v9:0|) (* 2 |v0:9|)) (* (- 19) |v9:0|))))
(let ((?x242 (+ (+ (* ?x146 |v1:8|) (* (- 10) |v8:1|)) (* 9 |v3:6|))))
(let ((?x235 (+ (+ (* 0 |v9:0|) (* (- 1) |v0:9|)) (* (- 1) |v4:5|))))
(let (($x250 (and (<= ?x235 1) (or (<= ?x242 7) (<= ?x247 ?x64)))))
(let ((?x67 16))
(let ((?x223 (+ (+ (* 2 |v8:1|) (* ?x146 |v9:0|)) (* 6 |v0:9|))))
(let ((?x162 12))
(let ((?x217 (+ (+ (* (- 8) |v7:2|) (* (- 5) |v7:2|)) (* 10 |v6:3|))))
(let ((?x209 (+ (+ (* 3 |v6:3|) (* (- 3) |v2:7|)) (* ?x190 |v2:7|))))
(let ((?x112 2))
(let ((?x200 (+ (+ (* (- 6) |v3:6|) (* 19 |v4:5|)) (* ?x146 |v5:4|))))
(let (($x226 (and (and (<= ?x200 ?x112) (<= ?x209 (- 12))) (or (<= ?x217 ?x162) (<= ?x223 ?x67)))))
(let ((?x60 0))
(let ((?x192 (+ (+ (* (- 3) |v4:5|) (* (- 10) |v3:6|)) (* ?x190 |v8:1|))))
(let ((?x184 (+ (+ (* 14 |v9:0|) (* ?x112 |v4:5|)) (* 17 |v0:9|))))
(let ((?x127 17))
(let ((?x176 (+ (+ (* ?x162 |v2:7|) (* (- 14) |v5:4|)) (* 10 |v2:7|))))
(let (($x227 (or (or (<= ?x176 ?x127) (or (<= ?x184 14) (<= ?x192 ?x60))) $x226)))
(let (($x167 (<= (+ (+ (* 13 |v4:5|) (* ?x162 |v9:0|)) (* ?x64 |v5:4|)) (- 2))))
(let ((?x42 5))
(let ((?x158 (+ (+ (* (- 20) |v5:4|) (* (- 3) |v6:3|)) (* 7 |v0:9|))))
(let ((?x124 9))
(let ((?x150 (+ (+ (* (- 3) |v5:4|) (* ?x146 |v6:3|)) (* (- 10) |v2:7|))))
(let ((?x142 (+ (+ (* (- 3) |v8:1|) (* 18 |v6:3|)) (* (- 8) |v9:0|))))
(let (($x133 (<= (+ (+ (* ?x124 |v7:2|) (* ?x127 |v7:2|)) (* (- 4) |v3:6|)) 13)))
(let (($x121 (<= (+ (+ (* ?x112 |v7:2|) (* 18 |v3:6|)) (* ?x64 |v0:9|)) ?x42)))
(let ((?x107 (* (- 20) |v5:4|)))
(let (($x109 (<= (+ (+ (* (- 6) |v9:0|) (* (- 19) |v3:6|)) ?x107) ?x67)))
(let ((?x97 (- 4)))
(let ((?x96 (+ (+ (* 15 |v8:1|) (* 10 |v5:4|)) (* (- 17) |v3:6|))))
(let (($x170 (or (or (and (<= ?x96 ?x97) $x109) (or $x121 $x133)) (or (or (<= ?x142 ?x48) (<= ?x150 ?x124)) (or (<= ?x158 ?x42) $x167)))))
(let ((?x83 (- 6)))
(let ((?x82 (+ (+ (* (- 5) |v2:7|) (* (- 15) |v7:2|)) (* 4 |v6:3|))))
(let (($x68 (<= (+ (+ (* (- 3) |v3:6|) (* ?x60 |v6:3|)) (* ?x64 |v2:7|)) ?x67)))
(let (($x52 (<= (+ (+ (* ?x42 |v2:7|) (* (- 10) |v4:5|)) (* ?x48 |v5:4|)) 20)))
(let ((?x37 (- 10)))
(let ((?x36 (+ (+ (* (- 9) |v1:8|) (* 6 |v7:2|)) (* (- 17) |v2:7|))))
(let ((?x21 (+ (+ (* (- 14) |v4:5|) (* (- 2) |v1:8|)) (* (- 18) |v2:7|))))
(let (($x85 (or (and (or (<= ?x21 19) (<= ?x36 ?x37)) (and $x52 $x68)) (<= ?x82 ?x83))))
(and (and $x85 $x170) (or $x227 (or $x250 $x277))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

