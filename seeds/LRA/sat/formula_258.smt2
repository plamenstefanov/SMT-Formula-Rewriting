(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_258.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x53 12))
(let ((?x253 (+ (+ (* (- 12) |v8:1|) (* 18 |v6:3|)) (* 11 |v5:4|))))
(let ((?x128 19))
(let ((?x248 (+ (+ (* ?x128 |v6:3|) (* (- 11) |v1:8|)) (* 5 |v3:6|))))
(let ((?x241 (+ (+ (* (- 15) |v1:8|) (* ?x53 |v4:5|)) (* (- 4) |v8:1|))))
(let ((?x173 8))
(let ((?x47 (* 15 |v4:5|)))
(let (($x243 (or (<= (+ (+ (* (- 4) |v0:9|) (* ?x173 |v7:2|)) ?x47) ?x173) (<= ?x241 (- 8)))))
(let ((?x226 (+ (+ (* 4 |v8:1|) (* 14 |v1:8|)) (* (- 10) |v1:8|))))
(let ((?x217 (+ (+ (* 13 |v9:0|) (* (- 13) |v6:3|)) (* (- 1) |v7:2|))))
(let ((?x210 (+ (+ (* (- 15) |v4:5|) (* (- 5) |v8:1|)) (* (- 11) |v2:7|))))
(let (($x230 (or (<= ?x210 20) (or (<= ?x217 18) (<= ?x226 0)))))
(let ((?x36 (- 1)))
(let ((?x198 (+ (+ (* (- 18) |v0:9|) (* (- 13) |v2:7|)) (* (- 19) |v1:8|))))
(let ((?x191 (+ (+ (* 6 |v7:2|) (* (- 7) |v8:1|)) (* (- 19) |v5:4|))))
(let ((?x181 (+ (+ (* (- 19) |v0:9|) (* 2 |v1:8|)) (* (- 3) |v1:8|))))
(let (($x183 (or (<= (+ (+ ?x47 (* (- 16) |v8:1|)) (* ?x173 |v3:6|)) ?x36) (<= ?x181 ?x173))))
(let (($x167 (<= (+ (+ |v3:6| (* 10 |v5:4|)) (* 7 |v7:2|)) (- 14))))
(let ((?x14 (- 16)))
(let ((?x160 (+ (+ (* (- 15) |v3:6|) (* (- 18) |v8:1|)) (* 3 |v3:6|))))
(let ((?x10 16))
(let ((?x151 (+ (+ (* (- 13) |v4:5|) (* (- 14) |v8:1|)) (* ?x10 |v0:9|))))
(let ((?x117 (- 3)))
(let ((?x143 (+ (+ (* 13 |v2:7|) (* 14 |v2:7|)) (* (- 6) |v5:4|))))
(let (($x202 (and (and (or (<= ?x143 ?x117) (<= ?x151 ?x10)) (and (<= ?x160 ?x14) $x167)) (and $x183 (and (<= ?x191 (- 8)) (<= ?x198 ?x36))))))
(let ((?x28 (- 6)))
(let (($x123 (<= (+ (+ (* ?x117 |v7:2|) (* ?x117 |v4:5|)) (* 10 |v9:0|)) ?x28)))
(let (($x133 (or $x123 (<= (+ (+ (* ?x36 |v3:6|) |v3:6|) (* ?x128 |v1:8|)) 6))))
(let ((?x113 (- 11)))
(let (($x134 (and (<= (+ (+ (* ?x14 |v4:5|) |v9:0|) (* (- 12) |v3:6|)) ?x113) $x133)))
(let ((?x103 (+ (+ (* (- 13) |v8:1|) (* (- 19) |v3:6|)) (* 13 |v5:4|))))
(let ((?x68 13))
(let ((?x91 (+ (+ (* ?x10 |v8:1|) (* 17 |v0:9|)) (* (- 15) |v5:4|))))
(let ((?x65 10))
(let ((?x83 (* ?x65 |v5:4|)))
(let (($x86 (<= (+ (+ (* 18 |v6:3|) (* (- 15) |v1:8|)) ?x83) 17)))
(let (($x73 (<= (+ (+ (* ?x65 |v3:6|) (* ?x68 |v6:3|)) (* 5 |v8:1|)) 11)))
(let ((?x58 (* 5 |v8:1|)))
(let (($x60 (<= (+ (+ (* (- 2) |v1:8|) (* 4 |v3:6|)) ?x58) ?x10)))
(let (($x54 (<= (+ (+ (* (- 20) |v2:7|) ?x47) (* (- 18) |v4:5|)) ?x53)))
(let ((?x34 (* (- 2) |v1:8|)))
(let ((?x22 (- 19)))
(let (($x23 (<= (+ (+ (* ?x10 |v8:1|) (* ?x14 |v6:3|)) (* 4 |v3:6|)) ?x22)))
(let (($x62 (or (or $x23 (<= (+ (+ (* ?x22 |v6:3|) (* ?x28 |v9:0|)) ?x34) ?x36)) (or $x54 $x60))))
(let (($x136 (or (or $x62 (and $x73 (and $x86 (<= ?x91 ?x68)))) (or (<= ?x103 2) $x134))))
(or $x136 (or $x202 (or $x230 (or $x243 (and (<= ?x248 ?x128) (<= ?x253 ?x53))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

