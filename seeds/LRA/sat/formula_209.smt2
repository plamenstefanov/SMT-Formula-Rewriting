(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_209.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x183 (- 4)))
(let (($x259 (<= (+ (+ (* 12 |v5:4|) |v7:2|) (* 5 |v4:5|)) ?x183)))
(let ((?x108 14))
(let ((?x251 (+ (+ (* (- 16) |v0:9|) (* 20 |v0:9|)) (* 6 |v3:6|))))
(let ((?x245 (+ (+ (* 9 |v3:6|) (* 20 |v5:4|)) (* (- 13) |v6:3|))))
(let ((?x92 (- 18)))
(let ((?x238 (+ (+ (* (- 5) |v7:2|) (* (- 7) |v0:9|)) (* 8 |v6:3|))))
(let ((?x10 13))
(let ((?x230 (+ (+ (* 17 |v7:2|) (* (- 7) |v6:3|)) (* (- 15) |v2:7|))))
(let (($x254 (or (or (<= ?x230 ?x10) (<= ?x238 ?x92)) (or (<= ?x245 7) (<= ?x251 ?x108)))))
(let ((?x35 (- 7)))
(let ((?x222 (+ (+ (* (- 1) |v8:1|) (* 12 |v6:3|)) (* (- 17) |v2:7|))))
(let ((?x31 12))
(let ((?x32 (* ?x31 |v3:6|)))
(let (($x217 (<= (+ (+ (* (- 9) |v7:2|) (* (- 12) |v6:3|)) ?x32) ?x31)))
(let ((?x211 (+ (+ (* (- 9) |v8:1|) (* 15 |v0:9|)) (* (- 17) |v3:6|))))
(let ((?x203 20))
(let ((?x202 (+ (+ (* 18 |v2:7|) (* (- 16) |v1:8|)) (* (- 1) |v2:7|))))
(let ((?x196 (+ (+ (* (- 3) |v9:0|) (* (- 5) |v3:6|)) (* (- 6) |v4:5|))))
(let (($x188 (<= (+ (+ (* ?x92 |v2:7|) (* ?x183 |v8:1|)) (* 4 |v5:4|)) ?x183)))
(let ((?x179 (+ (+ (* (- 12) |v3:6|) (* 19 |v3:6|)) (* ?x10 |v8:1|))))
(let (($x226 (or (or (and (<= ?x179 ?x31) $x188) (and (<= ?x196 ?x35) (<= ?x202 ?x203))) (and (<= ?x211 3) (and $x217 (<= ?x222 ?x35))))))
(let ((?x169 (+ (+ (* 6 |v0:9|) (* 9 |v5:4|)) (* (- 17) |v0:9|))))
(let ((?x129 19))
(let ((?x157 (+ (+ (* 3 |v0:9|) (* 2 |v4:5|)) (* ?x92 |v1:8|))))
(let ((?x19 (- 1)))
(let ((?x149 (+ (+ (* ?x35 |v5:4|) (* (- 5) |v8:1|)) (* 2 |v3:6|))))
(let (($x140 (<= (+ (+ (* (- 9) |v9:0|) (* ?x10 |v2:7|)) (* ?x19 |v1:8|)) 16)))
(let ((?x131 (- 3)))
(let (($x141 (and (<= (+ (+ (* ?x129 |v1:8|) (* ?x131 |v0:9|)) (* ?x35 |v8:1|)) ?x131) $x140)))
(let ((?x124 (+ (+ (* (- 15) |v0:9|) (* 16 |v4:5|)) (* (- 12) |v9:0|))))
(let ((?x59 (- 17)))
(let (($x113 (<= (+ (+ (* (- 16) |v6:3|) (* ?x108 |v0:9|)) (* ?x10 |v5:4|)) ?x59)))
(let (($x173 (or (and (and $x113 (<= ?x124 ?x108)) $x141) (or (and (<= ?x149 ?x19) (<= ?x157 ?x129)) (<= ?x169 10)))))
(let (($x101 (<= (+ (+ (* ?x10 |v2:7|) (* ?x35 |v8:1|)) (* 18 |v1:8|)) ?x35)))
(let ((?x91 (+ (+ (* (- 8) |v5:4|) (* (- 9) |v2:7|)) (* 7 |v5:4|))))
(let ((?x80 (+ (+ (* 15 |v7:2|) (* 0 |v8:1|)) (* ?x31 |v8:1|))))
(let ((?x66 (+ (+ (* ?x59 |v4:5|) (* 17 |v6:3|)) (* 18 |v6:3|))))
(let ((?x52 18))
(let ((?x53 (* ?x52 |v2:7|)))
(let (($x56 (<= (+ (+ (* 5 |v2:7|) (* (- 10) |v7:2|)) ?x53) (- 13))))
(let (($x39 (<= (+ (+ (* (- 8) |v5:4|) ?x32) (* ?x35 |v6:3|)) 4)))
(let ((?x22 (- 5)))
(let (($x23 (<= (+ (+ (* ?x10 |v9:0|) (* (- 20) |v6:3|)) (* ?x19 |v0:9|)) ?x22)))
(let (($x103 (or (and (or $x23 $x39) (or $x56 (<= ?x66 ?x10))) (and (or (<= ?x80 (- 14)) (<= ?x91 ?x92)) $x101))))
(and (or $x103 $x173) (or $x226 (or $x254 $x259)))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

