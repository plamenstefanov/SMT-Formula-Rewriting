(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_148.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x79 (- 14)))
(let ((?x184 (* ?x79 |v6:3|)))
(let (($x266 (<= (+ (+ (* (- 8) |v3:6|) (* 14 |v0:9|)) ?x184) 13)))
(let ((?x256 (+ (+ (* 9 |v1:8|) (* 15 |v6:3|)) (* 17 |v7:2|))))
(let ((?x40 5))
(let ((?x249 (+ (+ (* 0 |v8:1|) (* 16 |v8:1|)) (* ?x40 |v2:7|))))
(let ((?x60 17))
(let ((?x244 (+ (+ (* 0 |v8:1|) (* (- 15) |v9:0|)) (* (- 13) |v4:5|))))
(let ((?x165 7))
(let ((?x238 (+ (+ (* (- 11) |v7:2|) (* (- 9) |v1:8|)) (* 0 |v0:9|))))
(let (($x260 (and (or (<= ?x238 ?x165) (<= ?x244 ?x60)) (and (<= ?x249 ?x40) (<= ?x256 13)))))
(let ((?x230 (+ (+ (* (- 18) |v1:8|) (* (- 5) |v4:5|)) (* 12 |v4:5|))))
(let ((?x95 (- 11)))
(let ((?x222 (* ?x95 |v7:2|)))
(let (($x225 (<= (+ (+ (* 19 |v7:2|) (* (- 7) |v5:4|)) ?x222) (- 12))))
(let ((?x179 15))
(let ((?x215 (+ (+ (* (- 19) |v0:9|) (* (- 7) |v1:8|)) (* 0 |v9:0|))))
(let ((?x209 (+ (+ (* 14 |v4:5|) (* 6 |v9:0|)) (* (- 4) |v6:3|))))
(let (($x233 (and (or (<= ?x209 (- 3)) (<= ?x215 ?x179)) (and $x225 (<= ?x230 ?x165)))))
(let ((?x129 0))
(let ((?x139 (* 2 |v8:1|)))
(let (($x203 (<= (+ (+ (* 6 |v7:2|) (* 14 |v4:5|)) ?x139) ?x129)))
(let ((?x27 (- 4)))
(let ((?x80 (* ?x79 |v7:2|)))
(let (($x196 (<= (+ (+ (* (- 18) |v6:3|) (* 16 |v0:9|)) ?x80) ?x27)))
(let (($x189 (<= (+ (+ ?x184 (* (- 19) |v6:3|)) (* (- 7) |v6:3|)) (- 6))))
(let (($x182 (<= (+ (+ (* ?x27 |v5:4|) (* (- 5) |v2:7|)) (* ?x179 |v2:7|)) ?x165)))
(let ((?x72 (- 19)))
(let ((?x89 (* ?x72 |v2:7|)))
(let (($x171 (<= (+ (+ (* (- 16) |v0:9|) (* 19 |v6:3|)) ?x89) (- 20))))
(let ((?x164 (+ (+ (* 4 |v4:5|) (* 18 |v2:7|)) (* 10 |v1:8|))))
(let (($x158 (<= (+ (+ (* ?x72 |v6:3|) (* ?x40 |v7:2|)) (* (- 20) |v0:9|)) ?x95)))
(let ((?x73 (* ?x72 |v7:2|)))
(let (($x150 (<= (+ (+ (* (- 13) |v9:0|) (* 3 |v6:3|)) ?x73) ?x40)))
(let (($x143 (<= (+ (+ (* 19 |v2:7|) ?x139) (* (- 8) |v1:8|)) ?x79)))
(let ((?x132 (- 13)))
(let (($x144 (or (<= (+ (+ ?x80 (* 8 |v1:8|)) (* ?x129 |v1:8|)) ?x132) $x143)))
(let ((?x66 10))
(let ((?x119 (+ (+ (* 20 |v2:7|) (* 14 |v9:0|)) (* (- 8) |v0:9|))))
(let (($x108 (<= (+ (+ (* ?x66 |v0:9|) (* 16 |v0:9|)) ?x89) 3)))
(let (($x174 (and (and (and $x108 (<= ?x119 ?x66)) $x144) (and (or $x150 $x158) (or (<= ?x164 ?x165) $x171)))))
(let (($x99 (<= (+ (+ ?x89 (* (- 10) |v7:2|)) (* ?x95 |v4:5|)) 9)))
(let (($x87 (<= (+ (+ (* (- 9) |v9:0|) ?x80) (* 18 |v0:9|)) (- 3))))
(let (($x101 (and (<= (+ (+ (* ?x66 |v6:3|) (* (- 9) |v5:4|)) ?x73) ?x60) (or $x87 $x99))))
(let ((?x59 (+ (+ (* (- 1) |v4:5|) (* 16 |v8:1|)) (* (- 9) |v8:1|))))
(let ((?x47 (- 7)))
(let (($x48 (<= (+ (+ (* ?x27 |v5:4|) (* ?x40 |v0:9|)) (* (- 15) |v0:9|)) ?x47)))
(let ((?x18 16))
(let ((?x31 (* ?x18 |v0:9|)))
(let (($x34 (<= (+ (+ (* (- 16) |v4:5|) (* ?x27 |v2:7|)) ?x31) 12)))
(let ((?x21 (- 5)))
(let ((?x20 (+ (+ (* 4 |v4:5|) (* (- 16) |v9:0|)) (* ?x18 |v4:5|))))
(let (($x175 (or (or (and (or (<= ?x20 ?x21) $x34) (and $x48 (<= ?x59 ?x60))) $x101) $x174)))
(or $x175 (or (or (or (and $x182 $x189) (and $x196 $x203)) $x233) (or $x260 $x266)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

