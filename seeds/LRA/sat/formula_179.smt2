(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_179.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x125 7))
(let (($x258 (<= (+ (+ |v0:9| (* (- 20) |v6:3|)) (* 16 |v2:7|)) ?x125)))
(let ((?x151 (- 9)))
(let ((?x158 (* ?x151 |v2:7|)))
(let (($x252 (<= (+ (+ (* 20 |v2:7|) (* 10 |v8:1|)) ?x158) ?x151)))
(let ((?x245 (+ (+ (* (- 15) |v5:4|) (* (- 15) |v6:3|)) (* 15 |v7:2|))))
(let ((?x200 5))
(let (($x240 (<= (+ (+ (* (- 4) |v3:6|) |v4:5|) (* (- 1) |v8:1|)) ?x200)))
(let ((?x99 (- 3)))
(let ((?x228 (+ (+ (* (- 16) |v5:4|) (* 14 |v8:1|)) (* (- 17) |v1:8|))))
(let ((?x222 (+ (+ (* 6 |v4:5|) (* 2 |v8:1|)) (* (- 5) |v0:9|))))
(let (($x213 (<= (+ (+ (* (- 18) |v1:8|) (* 8 |v9:0|)) |v0:9|) (- 14))))
(let ((?x206 (* (- 20) |v6:3|)))
(let (($x214 (or (<= (+ (+ (* ?x200 |v4:5|) (* 8 |v1:8|)) ?x206) ?x200) $x213)))
(let (($x261 (or (and $x214 (and (<= ?x222 (- 6)) (<= ?x228 ?x99))) (or (or $x240 (<= ?x245 (- 19))) (or $x252 $x258)))))
(let ((?x193 (+ (+ (* 12 |v4:5|) (* 20 |v6:3|)) (* (- 12) |v5:4|))))
(let ((?x82 11))
(let ((?x184 (+ (+ (* (- 13) |v1:8|) (* 0 |v5:4|)) (* ?x99 |v6:3|))))
(let ((?x112 (* 0 |v5:4|)))
(let (($x180 (<= (+ (+ (* 15 |v1:8|) (* (- 10) |v9:0|)) ?x112) 19)))
(let ((?x169 (+ (+ (* ?x125 |v4:5|) (* (- 13) |v1:8|)) (* 10 |v3:6|))))
(let (($x197 (or (and (<= ?x169 14) $x180) (and (<= ?x184 ?x82) (<= ?x193 (- 14))))))
(let ((?x46 (- 15)))
(let (($x162 (<= (+ (+ (* 18 |v3:6|) ?x158) (* (- 16) |v9:0|)) ?x46)))
(let ((?x55 20))
(let (($x156 (<= (+ (+ (* ?x151 |v7:2|) (* 0 |v3:6|)) (* ?x99 |v3:6|)) ?x55)))
(let ((?x49 18))
(let ((?x147 (+ (+ (* (- 7) |v6:3|) (* (- 2) |v1:8|)) (* ?x49 |v7:2|))))
(let ((?x139 (+ (+ (* (- 7) |v4:5|) (* (- 8) |v6:3|)) (* 8 |v2:7|))))
(let (($x262 (and (or (or (and (<= ?x139 ?x99) (<= ?x147 ?x49)) (or $x156 $x162)) $x197) $x261)))
(let ((?x10 15))
(let ((?x127 (+ (+ (* 10 |v0:9|) (* 0 |v3:6|)) (* ?x125 |v2:7|))))
(let ((?x94 2))
(let (($x117 (<= (+ (+ ?x112 (* (- 8) |v5:4|)) (* 4 |v9:0|)) ?x94)))
(let ((?x76 1))
(let (($x118 (and (<= (+ (+ (* (- 5) |v9:0|) (* ?x10 |v2:7|)) |v3:6|) ?x76) $x117)))
(let (($x100 (<= (+ (+ (* 12 |v3:6|) (* ?x94 |v2:7|)) (* ?x55 |v3:6|)) ?x99)))
(let (($x87 (<= (+ (+ (* (- 18) |v3:6|) (* ?x82 |v9:0|)) (* ?x82 |v5:4|)) ?x76)))
(let ((?x75 (+ (+ (* (- 13) |v1:8|) (* (- 13) |v1:8|)) (* 13 |v5:4|))))
(let ((?x26 (- 8)))
(let ((?x64 (+ (+ (* ?x55 |v4:5|) (* (- 17) |v4:5|)) (* (- 19) |v5:4|))))
(let (($x130 (or (or (or (<= ?x64 ?x26) (<= ?x75 ?x76)) (and $x87 $x100)) (or $x118 (<= ?x127 ?x10)))))
(let ((?x48 (+ (+ (* (- 6) |v6:3|) (* 9 |v0:9|)) (* ?x46 |v7:2|))))
(let ((?x35 (- 16)))
(let (($x51 (or (<= (+ (+ (* ?x26 |v6:3|) (* 4 |v5:4|)) |v9:0|) ?x35) (<= ?x48 ?x49))))
(let ((?x22 (- 18)))
(let ((?x21 (+ (+ (* ?x10 |v0:9|) (* 3 |v7:2|)) (* (- 11) |v6:3|))))
(and (or (or (<= ?x21 ?x22) $x51) $x130) $x262)))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

