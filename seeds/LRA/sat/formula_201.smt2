(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_201.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x291 (+ (+ (* (- 8) |v6:3|) (* 12 |v5:4|)) (* 0 |v6:3|))))
(let ((?x110 16))
(let ((?x155 9))
(let ((?x240 (* ?x155 |v8:1|)))
(let (($x284 (<= (+ (+ (* 15 |v3:6|) (* 7 |v4:5|)) ?x240) ?x110)))
(let ((?x25 3))
(let ((?x278 (+ (+ (* 10 |v7:2|) (* 4 |v5:4|)) (* 2 |v8:1|))))
(let ((?x191 (- 16)))
(let ((?x272 (+ (+ (* 14 |v2:7|) (* ?x110 |v5:4|)) (* 11 |v2:7|))))
(let (($x294 (or (or (<= ?x272 ?x191) (<= ?x278 ?x25)) (and $x284 (<= ?x291 (- 12))))))
(let ((?x169 18))
(let ((?x264 (+ (+ (* 17 |v8:1|) (* (- 19) |v3:6|)) (* (- 9) |v6:3|))))
(let ((?x252 (* (- 17) |v7:2|)))
(let (($x260 (<= (+ (+ (* 11 |v7:2|) (* 20 |v9:0|)) ?x252) 19)))
(let ((?x94 8))
(let ((?x99 (* (- 10) |v2:7|)))
(let (($x251 (<= (+ (+ (* 20 |v7:2|) (* 2 |v9:0|)) ?x99) (- 3))))
(let (($x257 (and $x251 (<= (+ (+ ?x252 (* ?x155 |v0:9|)) (* (- 7) |v2:7|)) ?x94))))
(let ((?x39 6))
(let (($x244 (<= (+ (+ (* (- 5) |v9:0|) ?x240) (* 12 |v6:3|)) ?x39)))
(let ((?x53 17))
(let (($x238 (<= (+ (+ (* ?x53 |v7:2|) (* ?x191 |v2:7|)) (* 13 |v1:8|)) ?x53)))
(let ((?x84 (- 6)))
(let ((?x231 (+ (+ (* 15 |v7:2|) (* ?x169 |v2:7|)) (* 11 |v3:6|))))
(let ((?x222 (+ (+ (* ?x191 |v6:3|) (* (- 7) |v2:7|)) (* (- 18) |v4:5|))))
(let ((?x21 12))
(let ((?x91 (- 5)))
(let ((?x212 (* ?x91 |v9:0|)))
(let (($x214 (<= (+ (+ (* (- 2) |v4:5|) (* (- 4) |v3:6|)) ?x212) ?x21)))
(let (($x205 (<= (+ (+ (* 4 |v6:3|) (* ?x25 |v5:4|)) (* ?x84 |v9:0|)) ?x94)))
(let ((?x198 (+ (+ (* ?x191 |v8:1|) (* (- 14) |v2:7|)) (* (- 1) |v4:5|))))
(let (($x246 (or (or (or (<= ?x198 ?x94) $x205) (and $x214 (<= ?x222 (- 9)))) (and (or (<= ?x231 ?x84) $x238) $x244))))
(let (($x185 (<= (+ (+ (* ?x53 |v0:9|) (* ?x21 |v9:0|)) (* (- 3) |v8:1|)) ?x53)))
(let ((?x158 15))
(let ((?x176 (+ (+ (* ?x169 |v0:9|) (* 7 |v4:5|)) (* 5 |v6:3|))))
(let (($x166 (<= (+ (+ (* ?x158 |v6:3|) (* 11 |v7:2|)) (* ?x39 |v8:1|)) 1)))
(let (($x159 (<= (+ (+ (* 0 |v8:1|) (* ?x21 |v2:7|)) (* ?x155 |v1:8|)) ?x158)))
(let ((?x57 4))
(let ((?x146 (+ (+ (* (- 2) |v0:9|) (* (- 14) |v8:1|)) (* 13 |v3:6|))))
(let ((?x135 (+ (+ (* 20 |v4:5|) (* (- 20) |v0:9|)) (* ?x94 |v4:5|))))
(let ((?x126 (+ (+ (* 5 |v2:7|) (* ?x91 |v4:5|)) (* (- 15) |v6:3|))))
(let ((?x114 (+ (+ (* 19 |v1:8|) (* ?x110 |v8:1|)) (* (- 20) |v3:6|))))
(let (($x149 (or (or (<= ?x114 ?x53) (<= ?x126 14)) (and (<= ?x135 (- 17)) (<= ?x146 ?x57)))))
(let (($x87 (<= (+ (+ (* ?x39 |v8:1|) (* (- 11) |v3:6|)) (* ?x84 |v8:1|)) ?x39)))
(let (($x103 (and $x87 (<= (+ (+ (* ?x91 |v5:4|) (* ?x94 |v2:7|)) ?x99) 11))))
(let ((?x75 (- 19)))
(let ((?x77 (+ (+ (* (- 12) |v3:6|) (* 13 |v8:1|)) (* ?x75 |v9:0|))))
(let ((?x64 0))
(let (($x65 (<= (+ (+ (* ?x53 |v8:1|) (* ?x57 |v7:2|)) (* (- 20) |v9:0|)) ?x64)))
(let ((?x46 (+ (+ (* ?x39 |v6:3|) (* 20 |v9:0|)) (* (- 13) |v0:9|))))
(let ((?x13 2))
(let (($x35 (<= (+ (+ (* ?x25 |v9:0|) (* ?x25 |v2:7|)) (* 10 |v1:8|)) ?x13)))
(let ((?x20 (+ (+ (* 20 |v0:9|) (* ?x13 |v0:9|)) (* (- 18) |v8:1|))))
(let (($x105 (or (or (<= ?x20 ?x21) (or $x35 (<= ?x46 (- 11)))) (and (and $x65 (<= ?x77 ?x75)) $x103))))
(and (and $x105 (and $x149 (or (and $x159 $x166) (or (<= ?x176 ?x158) $x185)))) (or $x246 (or (and $x257 (and $x260 (<= ?x264 ?x169))) $x294))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

