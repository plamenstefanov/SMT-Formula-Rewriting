(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_248.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x148 16))
(let ((?x258 (+ (+ (* (- 2) |v2:7|) (* (- 2) |v2:7|)) (* 14 |v3:6|))))
(let ((?x35 (- 8)))
(let ((?x252 (+ (+ (* 6 |v8:1|) (* 6 |v3:6|)) (* (- 20) |v7:2|))))
(let ((?x244 (+ (+ (* 7 |v6:3|) (* (- 17) |v6:3|)) (* 3 |v0:9|))))
(let ((?x237 (+ (+ (* (- 1) |v3:6|) (* 13 |v1:8|)) (* 3 |v8:1|))))
(let ((?x226 (+ (+ (* ?x35 |v6:3|) (* 5 |v5:4|)) (* 15 |v0:9|))))
(let (($x220 (<= (+ (+ (* (- 6) |v9:0|) |v2:7|) (* (- 5) |v3:6|)) 19)))
(let (($x261 (and (or $x220 (or (<= ?x226 (- 20)) (<= ?x237 10))) (or (or (<= ?x244 12) (<= ?x252 ?x35)) (<= ?x258 ?x148)))))
(let ((?x209 (+ (+ (* (- 12) |v5:4|) (* 7 |v8:1|)) (* 4 |v2:7|))))
(let ((?x203 (+ (+ (* (- 19) |v2:7|) (* 7 |v1:8|)) (* 0 |v5:4|))))
(let ((?x76 (- 11)))
(let ((?x197 (+ (+ (* 15 |v1:8|) (* (- 3) |v8:1|)) (* (- 7) |v6:3|))))
(let ((?x156 (- 3)))
(let (($x191 (<= (+ (+ |v0:9| (* 11 |v9:0|)) (* 2 |v2:7|)) ?x156)))
(let ((?x46 11))
(let ((?x54 (- 18)))
(let ((?x146 (* ?x54 |v5:4|)))
(let (($x192 (or (<= (+ (+ (* ?x35 |v3:6|) (* (- 12) |v8:1|)) ?x146) ?x46) $x191)))
(let (($x180 (<= (+ (+ (* (- 13) |v1:8|) |v0:9|) (* 9 |v9:0|)) ?x76)))
(let ((?x171 (+ (+ (* 14 |v2:7|) (* 8 |v4:5|)) (* ?x156 |v0:9|))))
(let (($x213 (and (or (or (<= ?x171 9) $x180) $x192) (or (<= ?x197 ?x76) (or (<= ?x203 ?x148) (<= ?x209 17))))))
(let (($x162 (<= (+ (+ (* ?x156 |v2:7|) |v3:6|) (* 5 |v1:8|)) 17)))
(let (($x163 (or (<= (+ (+ ?x146 (* ?x148 |v3:6|)) (* ?x148 |v6:3|)) 5) $x162)))
(let ((?x51 14))
(let ((?x143 (+ (+ (* 0 |v3:6|) (* (- 15) |v0:9|)) (* 15 |v7:2|))))
(let ((?x133 3))
(let ((?x130 15))
(let ((?x131 (* ?x130 |v1:8|)))
(let (($x145 (or (<= (+ (+ (* (- 16) |v6:3|) (* ?x76 |v9:0|)) ?x131) ?x133) (<= ?x143 ?x51))))
(let ((?x120 (+ (+ (* (- 17) |v6:3|) (* ?x54 |v1:8|)) (* (- 12) |v4:5|))))
(let ((?x107 (+ (+ (* ?x76 |v8:1|) (* (- 7) |v2:7|)) (* 18 |v1:8|))))
(let ((?x10 4))
(let ((?x99 (+ (+ (* 2 |v1:8|) (* 12 |v1:8|)) (* (- 7) |v5:4|))))
(let ((?x14 5))
(let (($x89 (<= (+ (+ (* (- 6) |v6:3|) |v0:9|) (* (- 9) |v2:7|)) ?x14)))
(let (($x82 (<= (+ (+ (* (- 2) |v6:3|) (* ?x76 |v7:2|)) (* ?x46 |v8:1|)) 8)))
(let (($x67 (<= (+ (+ (* 2 |v9:0|) (* ?x14 |v3:6|)) (* ?x51 |v2:7|)) 1)))
(let (($x55 (<= (+ (+ (* (- 12) |v6:3|) (* ?x46 |v0:9|)) (* ?x51 |v8:1|)) ?x54)))
(let ((?x38 7))
(let ((?x37 (+ (+ (* (- 6) |v5:4|) (* (- 19) |v5:4|)) (* ?x35 |v1:8|))))
(let (($x23 (<= (+ (+ (* ?x10 |v0:9|) (* ?x14 |v6:3|)) (* (- 10) |v9:0|)) 10)))
(let (($x111 (or (and (or $x23 (<= ?x37 ?x38)) (or $x55 $x67)) (and (and $x82 $x89) (and (<= ?x99 ?x10) (<= ?x107 (- 10)))))))
(or (or $x111 (or (<= ?x120 19) (or $x145 $x163))) (and $x213 $x261))))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

