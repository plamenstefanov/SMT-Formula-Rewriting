(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status sat)
(declare-fun y2 () Real)
(declare-fun y3 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(assert (or (forall ((?y2 Real)) (exists ((?y3 Real)) (let ((?v_0 (* 75 ?y2)) (?v_3 (* 65 ?y3)) (?v_5 (* 64 x1)) (?v_2 (* (- 51) x1)) (?v_1 (* (- 96) ?y2)) (?v_4 (* (- 18) ?y2))) (or (or (or (or (or (or (< (+ (+ (* (- 71) ?y3) (* (- 57) ?y2)) (* (- 71) x1)) (- 47)) (> ?v_2 83)) (and (<= (+ (+ (* 63 ?y3) (* 93 ?y2)) (* (- 26) x1)) 18) (not (= (+ (+ (* 73 ?y3) (* 86 ?y2)) (* (- 44) x1)) 95)))) (not (= (+ (+ (* 22 ?y3) ?v_0) (* 63 x1)) 0))) (and (or (and (< (+ (* 72 ?y2) (* (- 69) x1)) (- 44)) (> (+ (* (- 11) ?y3) ?v_0) (- 97))) (or (= (+ (+ (* (- 90) ?y3) (* 61 ?y2)) (* (- 88) x1)) (- 51)) (not (= (+ (+ ?v_3 ?v_1) ?v_5) 0)))) (and (or (not (= (+ (* 12 ?y2) (* 47 x1)) 0)) (not (= (+ (+ (* (- 37) ?y3) (* 85 ?y2)) (* 41 x1)) (- 94)))) (<= (+ (+ (* (- 93) ?y3) ?v_1) (* 95 x1)) (- 70))))) (or (and (or (or (not (= (+ (* (- 78) ?y2) (* (- 42) x1)) (- 85))) (> (+ (* 45 ?y3) (* (- 59) ?y2)) (- 88))) (and (not (= (+ ?v_4 ?v_2) 0)) (not (= (+ (* (- 20) ?y2) (* (- 12) x1)) 77)))) (and (= (+ ?v_3 (* 82 x1)) 5) (> (+ (+ (* (- 20) ?y3) ?v_4) (* (- 60) x1)) 0))) (and (= (+ (* 36 ?y2) (* 70 x1)) (- 42)) (< (+ ?v_4 (* (- 63) x1)) (- 56))))) (and (and (or (and (<= (+ (* (- 72) ?y3) (* (- 9) ?y2)) (- 43)) (>= (+ (+ (* (- 15) ?y3) (* (- 5) ?y2)) (* (- 43) x1)) (- 44))) (and (>= (+ (+ (* (- 7) ?y3) (* (- 68) ?y2)) (* (- 36) x1)) (- 74)) (<= (+ (+ (* (- 26) ?y3) (* 1 ?y2)) (* 5 x1)) 92))) (or (and (< (+ (* 16 ?y3) (* (- 65) ?y2)) (- 86)) (>= (+ (* 61 ?y3) (* 49 ?y2)) 85)) (< (* (- 28) x1) (- 44)))) (and (or (or (< (+ (+ (* (- 65) ?y3) (* (- 73) ?y2)) (* 79 x1)) (- 17)) (or (>= (+ (+ (* 93 ?y3) (* (- 80) ?y2)) (* (- 83) x1)) 40) (>= (+ (* 10 ?y3) (* (- 30) x1)) (- 41)))) (and (> (+ (+ (* 88 ?y3) (* 46 ?y2)) (* (- 21) x1)) (- 45)) (> (+ (+ (* (- 91) ?y3) (* 84 ?y2)) (* (- 57) x1)) 0))) (and (or (or (> (+ (* (- 79) ?y2) (* (- 49) x1)) 59) (not (= (+ (* 75 ?y3) ?v_5) (- 1)))) (and (> (+ (* (- 19) ?y3) (* 100 x1)) (- 76)) (< (* (- 7) x1) 10))) (>= (+ (* (- 1) ?y3) (* 59 x1)) 0)))))))) (forall ((?y1 Real)) (exists ((?y3 Real)) (let ((?v_8 (* 57 ?y1)) (?v_7 (* 21 x1)) (?v_6 (* 6 ?y1))) (and (or (and (and (and (<= (+ (* (- 3) ?y3) (* 49 ?y1)) (- 31)) (= (+ (* (- 55) ?y3) (* (- 5) ?y1)) 0)) (or (< (+ (* 22 ?y3) (* 22 x1)) 0) (< (+ (+ (* 35 ?y3) (* 36 ?y1)) (* 52 x1)) 0))) (or (<= (+ (+ (* (- 70) ?y3) ?v_8) (* 58 x1)) 0) (or (or (< (* (- 13) x1) 61) (< (+ (+ (* 40 ?y3) (* (- 41) ?y1)) (* (- 61) x1)) 43)) (<= (* (- 9) x1) 68)))) (and (or (and (not (= (+ (* (- 83) ?y1) (* 5 x1)) 69)) (< (+ (* 35 ?y1) (* 50 x1)) 0)) (or (and (>= (* 34 x1) 0) (< (+ (+ (* (- 38) ?y3) (* (- 81) ?y1)) ?v_7) 55)) (and (not (= (+ (* (- 45) ?y1) (* 82 x1)) 0)) (>= (+ (+ (* 38 ?y3) (* 30 ?y1)) (* 26 x1)) 0)))) (and (and (and (= (+ (+ (* (- 21) ?y3) (* (- 8) ?y1)) (* 61 x1)) (- 27)) (< (+ (* (- 31) ?y3) (* 55 ?y1)) (- 47))) (or (<= (+ (* 47 ?y3) (* 92 x1)) (- 60)) (<= (+ ?v_6 (* (- 79) x1)) 60))) (and (or (< (+ (+ (* (- 61) ?y3) ?v_6) (* 46 x1)) (- 86)) (> (+ (* (- 69) ?y3) (* 89 x1)) (- 1))) (>= (* 85 x1) (- 68)))))) (and (or (or (and (or (< (+ (+ (* 99 ?y3) (* (- 59) ?y1)) ?v_7) 67) (< (+ (* (- 87) ?y3) (* 93 ?y1)) (- 50))) (or (>= (+ (* (- 39) ?y1) (* (- 54) x1)) 0) (= (+ (+ (* (- 82) ?y3) (* (- 78) ?y1)) (* (- 65) x1)) 96))) (and (< (* (- 73) ?y3) (- 74)) (or (= (* (- 57) ?y3) (- 39)) (not (= (+ (+ (* 54 ?y3) ?v_8) (* (- 37) x1)) 53))))) (and (or (and (= (+ (+ (* (- 48) ?y3) (* (- 69) ?y1)) (* 30 x1)) (- 60)) (not (= (* 61 ?y1) 0))) (or (> (+ (* 98 ?y3) (* 20 ?y1)) (- 28)) (<= (+ (* (- 13) ?y3) (* 64 x1)) (- 39)))) (>= (+ (* (- 44) ?y1) (* 90 x1)) 0))) (and (or (<= (* (- 53) x1) 0) (< (* 80 ?y3) 67)) (and (and (<= (* (- 56) ?y3) 32) (= (+ (+ (* (- 8) ?y3) (* (- 93) ?y1)) (* 4 x1)) 0)) (and (not (= (+ (* 60 ?y1) (* (- 44) x1)) (- 18))) (< (+ (* 11 ?y1) (* (- 11) x1)) 1)))))))))))
(check-sat)
(exit)
