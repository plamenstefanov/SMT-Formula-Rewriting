(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status sat)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(assert (exists ((?x1 Real)) (forall ((?x2 Real)) (exists ((?x3 Real)) (let ((?v_2 (* 5 ?x3)) (?v_5 (* 60 ?x1)) (?v_0 (* (- 68) ?x2)) (?v_6 (* (- 11) ?x3)) (?v_1 (* (- 91) ?x3)) (?v_3 (* (- 1) ?x2)) (?v_4 (* (- 8) ?x3))) (or (or (and (or (or (>= (+ (+ (* 18 ?x1) (* 83 ?x2)) (* 95 ?x3)) (- 47)) (or (not (= (+ (+ (* 75 ?x1) ?v_0) (* 62 ?x3)) 0)) (>= (+ (* 63 ?x1) (* 29 ?x3)) 22))) (and (or (< (+ (* (- 97) ?x1) ?v_6) (- 44)) (= (+ (* (- 90) ?x2) (* 65 ?x3)) (- 51))) (= (+ (+ (* (- 70) ?x1) (* (- 94) ?x2)) (* (- 93) ?x3)) 0))) (or (or (or (not (= (+ (* (- 88) ?x1) (* 45 ?x3)) (- 85))) (not (= (* 77 ?x1) 0))) (= (+ (* 65 ?x2) (* (- 20) ?x3)) 5)) (and (or (= (+ (+ (* 36 ?x1) (* (- 76) ?x2)) (* (- 40) ?x3)) (- 42)) (<= (+ (+ (* 70 ?x1) (* (- 63) ?x2)) (* 81 ?x3)) 0)) (and (< (+ (* (- 18) ?x1) (* 66 ?x2)) (- 56)) (<= (+ (* (- 63) ?x1) (* 14 ?x2)) 0))))) (or (and (and (and (> (+ (* (- 72) ?x1) (* (- 9) ?x2)) (- 43)) (< (+ (+ (* (- 15) ?x1) (* (- 5) ?x2)) (* (- 43) ?x3)) (- 44))) (or (< (+ (+ (* (- 7) ?x1) ?v_0) (* (- 36) ?x3)) (- 74)) (> (+ (+ (* (- 26) ?x1) (* 1 ?x2)) ?v_2) 92))) (or (or (>= (+ (* 16 ?x1) (* (- 65) ?x2)) (- 86)) (< (+ (* 61 ?x1) (* 49 ?x2)) 85)) (and (< (+ (* 33 ?x2) (* 71 ?x3)) (- 44)) (>= (+ (+ (* (- 28) ?x1) (* (- 19) ?x2)) (* (- 2) ?x3)) 0)))) (and (or (>= (+ (+ (* 40 ?x1) (* (- 17) ?x2)) (* (- 41) ?x3)) (- 86)) (> (+ (* 88 ?x2) ?v_1) (- 45))) (or (<= (+ (+ (* (- 76) ?x1) ?v_3) (* 10 ?x3)) 59) (< (+ (* (- 1) ?x1) (* 59 ?x3)) 0))))) (or (and (and (or (<= (+ (* (- 3) ?x2) (* (- 55) ?x3)) (- 31)) (< (+ (* 22 ?x2) (* 35 ?x3)) 0)) (or (or (<= (+ (+ (* 57 ?x1) (* 12 ?x2)) (* (- 58) ?x3)) 0) (not (= (+ (* 58 ?x1) ?v_1) (- 70)))) (or (< (+ (* 43 ?x1) (* 40 ?x3)) 61) (> (* (- 9) ?x3) 68)))) (or (or (and (= (+ (* (- 83) ?x2) ?v_2) 69) (>= (+ (* 35 ?x2) (* 50 ?x3)) 0)) (and (>= (+ (* 55 ?x1) (* (- 38) ?x3)) 0) (not (= (* 38 ?x3) 0)))) (and (or (= (+ (+ (* (- 47) ?x1) (* (- 21) ?x2)) (* (- 31) ?x3)) (- 27)) (<= (+ ?v_5 (* 47 ?x2)) (- 60))) (>= (+ (* (- 68) ?x1) ?v_3) (- 86))))) (or (and (or (or (or (>= (+ (+ (* 99 ?x1) (* (- 59) ?x2)) (* 21 ?x3)) 67) (>= (+ (* (- 87) ?x1) (* 93 ?x2)) (- 50))) (and (< (+ (* (- 39) ?x2) (* (- 54) ?x3)) 0) (not (= (+ (+ (* (- 82) ?x1) (* (- 78) ?x2)) (* (- 65) ?x3)) 96)))) (or (or (< (* (- 89) ?x2) (- 74)) (= (+ (* 37 ?x2) (* (- 14) ?x3)) (- 73))) (and (not (= (* (- 57) ?x1) (- 39))) (= (+ (+ (* 54 ?x1) (* 57 ?x2)) (* (- 37) ?x3)) 53)))) (and (or (= (* (- 48) ?x2) (- 60)) (> (+ (+ (* (- 39) ?x1) (* 98 ?x2)) (* (- 13) ?x3)) (- 28))) (and (or (< (* (- 79) ?x3) 0) (>= (* (- 88) ?x3) (- 44))) (or (> (+ (* 60 ?x2) ?v_4) 0) (> (+ (* 13 ?x1) (* 89 ?x2)) 90))))) (or (or (or (<= (+ (* 85 ?x2) (* 14 ?x3)) 0) (not (= (* (- 53) ?x1) 0))) (and (< (* 80 ?x2) 67) (> (* (- 15) ?x2) 80))) (and (<= (+ (* (- 56) ?x2) ?v_4) 32) (and (and (not (= ?v_5 (- 18))) (= (+ (* (- 44) ?x1) (* 82 ?x2)) 0)) (>= (+ (* 11 ?x2) ?v_6) 1))))))))))))
(check-sat)
(exit)
