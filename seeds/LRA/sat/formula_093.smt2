(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B1/formula_093.m
(set-info :status sat)
(assert
 (forall ((|v9:0| Real) )(exists ((|v8:1| Real) )(forall ((|v7:2| Real) )(exists ((|v6:3| Real) )(forall ((|v5:4| Real) )(exists ((|v4:5| Real) )(forall ((|v3:6| Real) )(exists ((|v2:7| Real) )(forall ((|v1:8| Real) )(exists ((|v0:9| Real) )(let ((?x243 (+ (+ (* (- 8) |v0:9|) (* 19 |v7:2|)) (* 15 |v1:8|))))
(let ((?x237 (+ (+ (* (- 2) |v1:8|) (* 4 |v8:1|)) (* (- 8) |v3:6|))))
(let ((?x131 3))
(let ((?x229 (+ (+ (* 18 |v9:0|) (* (- 9) |v4:5|)) (* (- 18) |v0:9|))))
(let ((?x223 (+ (+ (* (- 17) |v9:0|) (* (- 17) |v6:3|)) (* 8 |v8:1|))))
(let (($x246 (and (or (<= ?x223 15) (<= ?x229 ?x131)) (or (<= ?x237 16) (<= ?x243 (- 14))))))
(let ((?x170 (- 8)))
(let ((?x214 (+ (+ (* (- 1) |v5:4|) (* (- 2) |v9:0|)) (* 7 |v3:6|))))
(let ((?x105 5))
(let ((?x205 (* 19 |v7:2|)))
(let (($x207 (<= (+ (+ (* 20 |v3:6|) (* 13 |v9:0|)) ?x205) ?x105)))
(let ((?x196 (+ (+ (* 9 |v8:1|) (* 20 |v4:5|)) (* (- 18) |v4:5|))))
(let ((?x189 (+ (+ (* (- 17) |v1:8|) (* (- 7) |v5:4|)) (* (- 19) |v1:8|))))
(let (($x217 (or (or (<= ?x189 (- 12)) (<= ?x196 (- 6))) (and $x207 (<= ?x214 ?x170)))))
(let ((?x125 14))
(let ((?x126 (* ?x125 |v2:7|)))
(let (($x183 (<= (+ (+ (* (- 18) |v9:0|) (* 0 |v3:6|)) ?x126) 10)))
(let ((?x101 (- 17)))
(let ((?x172 (+ (+ (* (- 11) |v6:3|) (* 9 |v8:1|)) (* ?x170 |v6:3|))))
(let ((?x163 (+ (+ (* ?x131 |v0:9|) (* 0 |v1:8|)) (* (- 19) |v0:9|))))
(let (($x157 (<= (+ (+ (* ?x125 |v8:1|) (* (- 3) |v5:4|)) (* ?x101 |v0:9|)) 2)))
(let ((?x108 12))
(let ((?x150 (+ (+ (* 4 |v3:6|) (* 8 |v0:9|)) (* ?x105 |v0:9|))))
(let ((?x144 (+ (+ (* ?x101 |v7:2|) (* 8 |v1:8|)) (* 0 |v8:1|))))
(let (($x136 (<= (+ (+ (* ?x105 |v1:8|) (* ?x131 |v4:5|)) (* 18 |v9:0|)) ?x108)))
(let (($x128 (<= (+ (+ (* 6 |v5:4|) (* (- 7) |v3:6|)) ?x126) (- 10))))
(let (($x176 (or (or (and $x128 $x136) (<= ?x144 (- 4))) (and (and (<= ?x150 ?x108) $x157) (or (<= ?x163 ?x125) (<= ?x172 ?x101))))))
(let (($x113 (<= (+ (+ (* ?x105 |v4:5|) (* ?x108 |v6:3|)) (* 7 |v2:7|)) ?x101)))
(let ((?x100 (+ (+ (* 11 |v3:6|) (* 18 |v2:7|)) (* 7 |v1:8|))))
(let ((?x87 (- 1)))
(let ((?x79 (+ (+ (* (- 19) |v6:3|) (* 0 |v3:6|)) (* 13 |v8:1|))))
(let (($x91 (and (<= ?x79 11) (<= (+ (+ (* (- 10) |v3:6|) |v6:3|) (* ?x87 |v1:8|)) ?x87))))
(let ((?x66 20))
(let ((?x64 (* 4 |v3:6|)))
(let (($x67 (<= (+ (+ (* 13 |v5:4|) (* (- 3) |v1:8|)) ?x64) ?x66)))
(let ((?x51 (- 18)))
(let ((?x50 (+ (+ (* (- 11) |v6:3|) (* (- 4) |v9:0|)) (* (- 14) |v8:1|))))
(let ((?x35 (+ (+ (* 18 |v3:6|) (* (- 16) |v5:4|)) (* (- 11) |v9:0|))))
(let ((?x21 (+ (+ (* (- 5) |v7:2|) (* (- 11) |v3:6|)) (* (- 9) |v0:9|))))
(let (($x69 (and (or (<= ?x21 (- 13)) (<= ?x35 2)) (and (<= ?x50 ?x51) $x67))))
(or (and (and $x69 (and $x91 (and (<= ?x100 ?x101) $x113))) $x176) (or $x183 (or $x217 $x246))))))))))))))))))))))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

