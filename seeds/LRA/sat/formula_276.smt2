(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Monniaux, David; Quantifier Elimination by Lazy Model Enumeration, CAV 2010
|)
(set-info :category "random")
; ./Mjollnir_examples/B2/formula_276.m
(set-info :status sat)
(assert
 (forall ((|v11:0| Real) )(exists ((|v10:1| Real) )(forall ((|v9:2| Real) )(exists ((|v8:3| Real) )(forall ((|v7:4| Real) )(exists ((|v6:5| Real) )(forall ((|v5:6| Real) )(exists ((|v4:7| Real) )(forall ((|v3:8| Real) )(exists ((|v2:9| Real) )(forall ((|v1:10| Real) )(exists ((|v0:11| Real) )(let ((?x39 12))
(let ((?x165 (+ (+ (* (- 13) |v2:9|) (* 10 |v4:7|)) (* (- 13) |v8:3|))))
(let ((?x153 (+ (+ (* (- 18) |v0:11|) (* 17 |v8:3|)) (* 16 |v4:7|))))
(let ((?x30 (- 8)))
(let ((?x55 (* ?x30 |v6:5|)))
(let ((?x140 (+ (+ (* 20 |v3:8|) (* (- 2) |v7:4|)) (* ?x39 |v8:3|))))
(let ((?x129 (+ (+ (* 7 |v11:0|) (* 14 |v5:6|)) (* (- 4) |v10:1|))))
(let ((?x115 (+ (+ (* (- 13) |v11:0|) (* 0 |v4:7|)) (* (- 15) |v5:6|))))
(let (($x133 (or (<= (+ ?x115 (* 4 |v11:0|)) 8) (<= (+ ?x129 (* 15 |v3:8|)) (- 6)))))
(let ((?x102 (+ (+ (* (- 15) |v2:9|) (* (- 13) |v0:11|)) (* (- 2) |v3:8|))))
(let ((?x86 (+ (+ (* 20 |v1:10|) (* (- 11) |v6:5|)) (* 13 |v1:10|))))
(let (($x107 (and (<= (+ ?x86 (* 18 |v6:5|)) (- 1)) (<= (+ ?x102 (* (- 11) |v10:1|)) 13))))
(let ((?x68 (+ (+ (* ?x30 |v5:6|) (* 15 |v2:9|)) (* 8 |v6:5|))))
(let ((?x59 (+ (+ (+ (* (- 9) |v5:6|) ?x55) (* 20 |v3:8|)) (* 4 |v6:5|))))
(let (($x75 (and (<= ?x59 (- 7)) (<= (+ ?x68 (* (- 16) |v4:7|)) (- 6)))))
(let ((?x44 (* 20 |v3:8|)))
(let ((?x45 (+ (+ (+ (* ?x30 |v0:11|) (* (- 19) |v4:7|)) (* ?x39 |v3:8|)) ?x44)))
(let ((?x26 4))
(let ((?x19 (* 15 |v2:9|)))
(let ((?x25 (+ (+ (+ (* 17 |v0:11|) (* (- 20) |v0:11|)) ?x19) (* 3 |v7:4|))))
(let (($x135 (and (or (or (<= ?x25 ?x26) (<= ?x45 (- 1))) $x75) (and $x107 $x133))))
(let (($x158 (or (or $x135 (<= (+ ?x140 ?x55) (- 4))) (<= (+ ?x153 (* (- 19) |v3:8|)) (- 5)))))
(or $x158 (<= (+ ?x165 (* 5 |v0:11|)) ?x39)))))))))))))))))))))))))
)
)
)
)
)
)
)
)
)
)
)
)
(check-sat)
(exit)

