(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let
 (($x1022
   (forall
    ((V4_0 Int) (V5_0 Int) 
     (V2_0 Int) (V3_0 Int) 
     (V1_0 Int) (MW_S1_V4 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V3 Bool) (MW_S1_V1 Bool) 
     (MW_S2_V4 Bool) (MW_S2_V5 Bool) 
     (MW_S2_V2 Bool) (MW_S2_V3 Bool) 
     (MW_S2_V1 Bool) (S1_V4_!110 Int) 
     (S2_V4_!115 Int) (S2_V4_!120 Int) 
     (S2_V5_!116 Int) (S2_V5_!121 Int) 
     (S1_V1_!114 Int) (S1_V3_!113 Int) 
     (S1_V2_!112 Int) (S2_V1_!119 Int) 
     (S2_V1_!124 Int) (S2_V2_!117 Int) 
     (S2_V2_!122 Int) (S2_V3_!118 Int) 
     (S2_V3_!123 Int) (S1_V5_!111 Int))
    (let
    (($x933
      (= (ite MW_S2_V1 S2_V1_!119 (ite MW_S1_V1 S1_V1_!114 V1_0))
      (+ (- 1) (ite MW_S2_V1 S2_V1_!124 V1_0)))))
    (let
    (($x950
      (and
      (= (ite MW_S2_V4 S2_V4_!115 (ite MW_S1_V4 S1_V4_!110 V4_0))
      (ite MW_S2_V4 S2_V4_!120 V4_0))
      (= (ite MW_S2_V5 S2_V5_!116 (ite MW_S1_V5 S1_V5_!111 V5_0))
      (ite MW_S2_V5 S2_V5_!121 V5_0))
      (= (ite MW_S2_V2 S2_V2_!117 (ite MW_S1_V2 S1_V2_!112 V2_0))
      (ite MW_S2_V2 S2_V2_!122 V2_0))
      (= (ite MW_S2_V3 S2_V3_!118 (ite MW_S1_V3 S1_V3_!113 V3_0))
      (ite MW_S2_V3 S2_V3_!123 V3_0)) $x933)))
    (let
    (($x953
      (>= (ite MW_S2_V1 S2_V1_!119 (ite MW_S1_V1 S1_V1_!114 V1_0))
      (+ (- 1) (ite MW_S2_V2 S2_V2_!117 (ite MW_S1_V2 S1_V2_!112 V2_0))))))
    (let
    (($x956
      (and (not (<= V2_0 V1_0)) $x953
      (>= (ite MW_S2_V1 S2_V1_!124 V1_0) (ite MW_S2_V2 S2_V2_!122 V2_0)))))
    (let
    (($x991
      (and (or (not R_S2_V4) (= (ite MW_S1_V4 S1_V4_!110 V4_0) V4_0))
      (or (not R_S2_V5) (= (ite MW_S1_V5 S1_V5_!111 V5_0) V5_0))
      (or (not R_S2_V2) (= (ite MW_S1_V2 S1_V2_!112 V2_0) V2_0))
      (or (not R_S2_V3) (= (ite MW_S1_V3 S1_V3_!113 V3_0) V3_0))
      (or (not R_S2_V1) (= (ite MW_S1_V1 S1_V1_!114 V1_0) V1_0)))))
    (let (($x992 (not $x991)))
    (let
    (($x1007
      (and (or (not R_S2_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!110 V4_0)))
      (or (not R_S2_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!111 V5_0)))
      (or (not R_S2_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!112 V2_0)))
      (or (not R_S2_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!113 V3_0)))
      (or (not R_S2_V1) (= V1_0 (ite MW_S1_V1 S1_V1_!114 V1_0))))))
    (let
    (($x1019
      (and (or $x992 (= S2_V4_!115 S2_V4_!120))
      (or $x992 (= S2_V5_!116 S2_V5_!121))
      (or (not $x1007) (= S2_V1_!124 S2_V1_!119))
      (or $x992 (= S2_V2_!117 S2_V2_!122))
      (or $x992 (= S2_V3_!118 S2_V3_!123)) 
      (or (not MW_S1_V4) W_S1_V4) 
      (or (not MW_S1_V5) W_S1_V5) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S2_V5) W_S2_V5) 
      (or (not MW_S2_V2) W_S2_V2) 
      (or (not MW_S2_V3) W_S2_V3) 
      (or (not MW_S2_V1) W_S2_V1)))) 
    (or (not $x1019) (not $x956) $x950))))))))))))
 (let
 (($x87
   (or R_S2_V4 (and W_S2_V5 R_S2_V5) 
   (and W_S2_V2 R_S2_V2) (and W_S2_V3 R_S2_V3) 
   (and W_S2_V1 R_S2_V1))))
 (let (($x89 (= DISJ_W_S2_R_S2 (not $x87))))
 (let
 (($x84
   (or R_S1_V4 (and W_S2_V5 R_S1_V5) 
   (and W_S2_V2 R_S1_V2) (and W_S2_V3 R_S1_V3) 
   (and W_S2_V1 R_S1_V1))))
 (let (($x86 (= DISJ_W_S2_R_S1 (not $x84))))
 (let
 (($x81
   (or W_S1_V4 (and W_S1_V5 W_S2_V5) 
   (and W_S1_V2 W_S2_V2) W_S2_V3 
   (and W_S1_V1 W_S2_V1))))
 (let (($x83 (= DISJ_W_S1_W_S2 (not $x81))))
 (let
 (($x78
   (or (and W_S1_V4 R_S2_V4) 
   (and W_S1_V5 R_S2_V5) (and W_S1_V2 R_S2_V2) R_S2_V3 
   (and W_S1_V1 R_S2_V1))))
 (let (($x80 (= DISJ_W_S1_R_S2 (not $x78))))
 (let
 (($x75
   (or (and W_S1_V4 R_S1_V4) 
   (and W_S1_V5 R_S1_V5) (and W_S1_V2 R_S1_V2) R_S1_V3 
   (and W_S1_V1 R_S1_V1))))
 (let (($x77 (= DISJ_W_S1_R_S1 (not $x75))))
 (and W_S1_V3 W_S2_V4 $x77 $x80 $x83 $x86 $x89 $x1022)))))))))))))
(check-sat)
(exit)

