(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V6 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E2_V1 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(declare-fun R_E1_V6 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V6 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun R_E2_V6 () Bool)
(declare-fun R_E2_V4 () Bool)
(declare-fun R_E2_V5 () Bool)
(declare-fun R_E2_V2 () Bool)
(declare-fun DISJ_W_S1_R_E2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun R_E2_V3 () Bool)
(assert
 (let
 (($x60903
   (forall
    ((V1_0 Int) (V3_0 Int) 
     (V2_0 Int) (V5_0 Int) 
     (V4_0 Int) (V6_0 Int) 
     (MW_S1_V1 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V5 Bool) 
     (MW_S1_V4 Bool) (MW_S1_V6 Bool) 
     (S1_V1_!5123 Int) (S1_V3_!5124 Int) 
     (S1_V2_!5125 Int) (E1_!5120 Int) 
     (E1_!5129 Int) (E1_!5131 Int) 
     (S1_V5_!5126 Int) (E2_!5121 Int) 
     (E2_!5122 Int) (E2_!5130 Int) 
     (S1_V4_!5127 Int) (S1_V6_!5128 Int))
    (let
    (($x61267
      (and (= (ite MW_S1_V1 S1_V1_!5123 E1_!5120) (+ (- 1) E1_!5131))
      (= (ite MW_S1_V3 S1_V3_!5124 E2_!5122) E2_!5130)
      (= (ite MW_S1_V2 S1_V2_!5125 V2_0) V2_0)
      (= (ite MW_S1_V5 S1_V5_!5126 V5_0) V5_0)
      (= (ite MW_S1_V4 S1_V4_!5127 V4_0) V4_0)
      (= (ite MW_S1_V6 S1_V6_!5128 V6_0) V6_0))))
    (let
    (($x62544
      (and (not (<= V4_0 E2_!5121)) 
      (not (<= V2_0 E1_!5120)) 
      (not (<= V4_0 E2_!5122))
      (>= (ite MW_S1_V3 S1_V3_!5124 E2_!5122)
      (+ (- 1) (ite MW_S1_V4 S1_V4_!5127 V4_0)))
      (>= (ite MW_S1_V1 S1_V1_!5123 E1_!5120)
      (+ (- 1) (ite MW_S1_V2 S1_V2_!5125 V2_0))) 
      (not (<= V2_0 E1_!5129)) 
      (not (<= V4_0 E2_!5130)) 
      (>= E1_!5131 V2_0) (>= E2_!5130 (+ (- 1) V4_0)))))
    (let
    (($x60161
      (and (or (not R_E1_V1) (= E1_!5129 V1_0))
      (or (not R_E1_V3) (= E2_!5130 V3_0)))))
    (let
    (($x61321
      (and (= E1_!5129 E1_!5120) 
      (or (not $x60161) (= E1_!5131 E1_!5120))
      (or (not $x60161) (= E1_!5131 E1_!5129)) 
      (= E2_!5121 E2_!5122)
      (or (not (or (not R_E2_V1) (= E1_!5120 E1_!5129)))
      (= E2_!5121 E2_!5130))
      (or (not (or (not R_E2_V1) (= E1_!5129 E1_!5120)))
      (= E2_!5130 E2_!5122)) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S1_V3) W_S1_V3) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V4) W_S1_V4) 
      (or (not MW_S1_V6) W_S1_V6))))
    (or (not $x61321) (not $x62544) $x61267))))))))
 (let
 (($x69
   (or (and W_S1_V1 R_E1_V1) 
   (and W_S1_V3 R_E1_V3) (and W_S1_V2 R_E1_V2) R_E1_V5 
   (and W_S1_V4 R_E1_V4) (and W_S1_V6 R_E1_V6))))
 (let (($x71 (= DISJ_W_S1_R_E1 (not $x69))))
 (let
 (($x66
   (or (and W_S1_V1 R_S1_V1) 
   (and W_S1_V3 R_S1_V3) (and W_S1_V2 R_S1_V2) R_S1_V5 
   (and W_S1_V4 R_S1_V4) (and W_S1_V6 R_S1_V6))))
 (let (($x68 (= DISJ_W_S1_R_S1 (not $x66))))
 (let (($x24 (and W_S1_V6 R_E2_V6)))
 (let (($x21 (and W_S1_V4 R_E2_V4)))
 (let (($x16 (and W_S1_V2 R_E2_V2)))
 (let (($x10 (and W_S1_V1 R_E2_V1)))
 (let (($x130 (not R_E2_V3)))
 (and $x130 W_S1_V5 (= DISJ_W_S1_R_E2 (not (or $x10 $x16 R_E2_V5 $x21 $x24)))
 $x68 $x71 $x60903))))))))))))
(check-sat)
(exit)

