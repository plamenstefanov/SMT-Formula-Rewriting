(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let
 (($x1925
   (forall
    ((V1_0 Int) (V3_0 Int) 
     (V2_0 Int) (V4_0 Int) 
     (MW_S1_V1 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V4 Bool) 
     (S1_V3_!507 Int) (S1_V3_!511 Int) 
     (S1_V3_!515 Int) (S1_V4_!509 Int) 
     (S1_V4_!513 Int) (S1_V4_!517 Int) 
     (S1_V1_!506 Int) (S1_V1_!510 Int) 
     (S1_V1_!514 Int) (S1_V2_!508 Int) 
     (S1_V2_!512 Int) (S1_V2_!516 Int))
    (let
    ((?x1495 (ite MW_S1_V1 S1_V1_!514 (+ 1 (ite MW_S1_V1 S1_V1_!510 V1_0)))))
    (let
    (($x2661
      (and (= (ite MW_S1_V1 S1_V1_!506 V1_0) ?x1495)
      (= (ite MW_S1_V3 S1_V3_!507 V3_0) (ite MW_S1_V3 S1_V3_!515 V3_0))
      (= (ite MW_S1_V2 S1_V2_!508 V2_0) (ite MW_S1_V2 S1_V2_!516 V2_0))
      (= (ite MW_S1_V4 S1_V4_!509 V4_0) (ite MW_S1_V4 S1_V4_!517 V4_0)))))
    (let
    (($x1493
      (and (not (<= V2_0 V1_0))
      (>= (ite MW_S1_V1 S1_V1_!506 V1_0)
      (+ (- 1) (ite MW_S1_V2 S1_V2_!508 V2_0))) 
      (not (<= V2_0 (+ 1 V1_0)))
      (>= ?x1495 (+ (- 2) (ite MW_S1_V2 S1_V2_!516 V2_0)))
      (>= ?x1495 (+ (- 1) (ite MW_S1_V2 S1_V2_!516 V2_0))))))
    (let
    (($x1867
      (and (or (not R_S1_V1) (= V1_0 (+ 1 (ite MW_S1_V1 S1_V1_!510 V1_0))))
      (or (not R_S1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!511 V3_0)))
      (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!512 V2_0)))
      (or (not R_S1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!513 V4_0))))))
    (let (($x1414 (not $x1867)))
    (let
    (($x1401
      (and
      (or (not R_S1_V1) (= (ite MW_S1_V1 S1_V1_!510 V1_0) (+ (- 1) V1_0)))
      (or (not R_S1_V3) (= (ite MW_S1_V3 S1_V3_!511 V3_0) V3_0))
      (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!512 V2_0) V2_0))
      (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!513 V4_0) V4_0)))))
    (let (($x2030 (not $x1401)))
    (let
    (($x2270
      (and (= S1_V3_!511 S1_V3_!507) 
      (or $x2030 (= S1_V3_!515 S1_V3_!507))
      (or $x2030 (= S1_V3_!515 S1_V3_!511)) 
      (= S1_V4_!509 S1_V4_!513) 
      (or $x1414 (= S1_V4_!509 S1_V4_!517))
      (or $x2030 (= S1_V4_!517 S1_V4_!513)) 
      (= S1_V1_!510 S1_V1_!506) 
      (or $x1414 (= S1_V1_!510 S1_V1_!514))
      (or $x2030 (= S1_V1_!514 S1_V1_!506))
      (or $x1414 (= S1_V2_!508 S1_V2_!516)) 
      (= S1_V2_!512 S1_V2_!508) 
      (or $x1414 (= S1_V2_!512 S1_V2_!516)) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V4) W_S1_V4)))) 
    (or (not $x2270) (not $x1493) $x2661))))))))))))
 (let
 (($x25
   (or (and W_S1_V1 R_S1_V1) R_S1_V3 
   (and W_S1_V2 R_S1_V2) (and W_S1_V4 R_S1_V4))))
 (let (($x27 (= DISJ_W_S1_R_S1 (not $x25))))
 (let
 (($x2304
   (or (and (not W_S1_V2) DISJ_W_S1_R_S1) 
   (and (not W_S1_V1) (not W_S1_V2)) 
   (and (not R_S1_V1) DISJ_W_S1_R_S1)))) 
 (and $x2304 W_S1_V3 $x27 $x1925))))))
(check-sat)
(exit)

