(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(assert
 (let
 (($x1171
   (forall
    ((V3_0 Int) (V2_0 Int) 
     (V4_0 Int) (MW_S1_V1 Bool) 
     (MW_S1_V3 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V4 Bool) (S1_V3_!152 Int) 
     (S1_V3_!158 Int) (S1_V4_!154 Int) 
     (S1_V4_!160 Int) (S1_V1_!151 Int) 
     (S1_V1_!157 Int) (S1_V2_!153 Int) 
     (S1_V2_!159 Int) (E1_!150 Int) 
     (E1_!155 Int) (E1_!156 Int) 
     (E1_!161 Int))
    (let ((?x801 (ite MW_S1_V4 S1_V4_!160 V4_0)))
    (let ((?x592 (ite MW_S1_V4 S1_V4_!154 V4_0)))
    (let (($x751 (= ?x592 ?x801)))
    (let ((?x849 (ite MW_S1_V2 S1_V2_!159 V2_0)))
    (let ((?x850 (ite MW_S1_V2 S1_V2_!153 V2_0)))
    (let (($x848 (= ?x850 ?x849)))
    (let ((?x763 (ite MW_S1_V3 S1_V3_!158 V3_0)))
    (let ((?x588 (ite MW_S1_V3 S1_V3_!152 V3_0)))
    (let (($x747 (= ?x588 ?x763)))
    (let ((?x858 (+ (- 1) ?x849)))
    (let ((?x605 (ite MW_S1_V1 S1_V1_!151 E1_!150)))
    (let (($x794 (= ?x605 ?x858)))
    (let (($x804 (and $x794 $x747 $x848 $x751)))
    (let ((?x584 (+ (- 1) V2_0)))
    (let ((?x577 (ite MW_S1_V1 S1_V1_!157 ?x584)))
    (let ((?x742 (+ (- 1) ?x577)))
    (let (($x562 (<= E1_!161 ?x742)))
    (let (($x552 (not $x562)))
    (let ((?x814 (+ 1 E1_!156)))
    (let (($x767 (>= V2_0 ?x814)))
    (let (($x851 (<= V2_0 E1_!155)))
    (let (($x838 (not $x851)))
    (let ((?x556 (+ (- 1) ?x850)))
    (let (($x762 (>= ?x605 ?x556)))
    (let (($x583 (<= V2_0 E1_!150)))
    (let (($x818 (not $x583)))
    (let (($x817 (and $x818 $x762 $x838 $x767 $x552)))
    (let (($x752 (not $x817)))
    (let (($x870 (not MW_S1_V4)))
    (let (($x802 (or $x870 W_S1_V4)))
    (let (($x929 (not MW_S1_V2)))
    (let (($x754 (or $x929 W_S1_V2)))
    (let (($x579 (not MW_S1_V1)))
    (let (($x885 (or $x579 W_S1_V1)))
    (let (($x1146 (= E1_!161 E1_!156)))
    (let (($x887 (= ?x801 V4_0)))
    (let (($x76 (not R_E1_V4)))
    (let (($x1070 (or $x76 $x887)))
    (let (($x753 (= ?x849 V2_0)))
    (let (($x74 (not R_E1_V2)))
    (let (($x555 (or $x74 $x753)))
    (let (($x1170 (= ?x763 V3_0)))
    (let (($x72 (not R_E1_V3)))
    (let (($x1159 (or $x72 $x1170)))
    (let (($x939 (and $x1159 $x555 $x1070)))
    (let (($x914 (not $x939)))
    (let (($x1185 (or $x914 $x1146)))
    (let (($x1212 (= E1_!161 E1_!155)))
    (let (($x933 (or $x914 $x1212)))
    (let (($x1016 (= E1_!161 E1_!150)))
    (let (($x1234 (or $x914 $x1016)))
    (let (($x1173 (= E1_!155 E1_!156)))
    (let (($x1135 (= E1_!150 E1_!156)))
    (let (($x593 (= E1_!150 E1_!155)))
    (let (($x1221 (= S1_V2_!159 S1_V2_!153)))
    (let ((?x878 (+ 1 E1_!150)))
    (let (($x1231 (= V2_0 ?x878)))
    (let (($x102 (not R_S1_V1)))
    (let (($x1232 (or $x102 $x1231)))
    (let (($x1233 (not $x1232)))
    (let (($x1236 (or $x1233 $x1221)))
    (let (($x1222 (= S1_V1_!151 S1_V1_!157)))
    (let (($x607 (= E1_!150 ?x584)))
    (let (($x873 (or $x102 $x607)))
    (let (($x1198 (not $x873)))
    (let (($x913 (or $x1198 $x1222)))
    (let (($x881 (= S1_V4_!160 S1_V4_!154)))
    (let (($x1226 (or $x1233 $x881)))
    (let (($x880 (= S1_V3_!152 S1_V3_!158)))
    (let (($x1199 (or $x1198 $x880)))
    (let
    (($x755
      (and $x1199 $x1226 $x913 $x1236 $x593 $x1135 $x1173 $x1234 $x933 $x1185
      $x885 $x754 $x802)))
    (let (($x550 (not $x755))) (or $x550 $x752 $x804))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 (let (($x30 (and W_S1_V4 R_E1_V4)))
 (let (($x28 (and W_S1_V2 R_E1_V2)))
 (let (($x772 (or R_E1_V3 $x28 $x30)))
 (let (($x597 (not $x772)))
 (let (($x859 (= DISJ_W_S1_R_E1 $x597)))
 (let (($x18 (and W_S1_V4 R_S1_V4)))
 (let (($x15 (and W_S1_V2 R_S1_V2)))
 (let (($x10 (and W_S1_V1 R_S1_V1)))
 (let (($x37 (or $x10 R_S1_V3 $x15 $x18)))
 (let (($x38 (not $x37)))
 (let (($x39 (= DISJ_W_S1_R_S1 $x38)))
 (let (($x70 (not R_E1_V1))) (and $x70 W_S1_V3 $x39 $x859 $x1171)))))))))))))))
(assert
 (let (($x522 (not W_S1_V2)))
 (let (($x1083 (and $x522 DISJ_W_S1_R_S1 DISJ_W_S1_R_E1))) (not $x1083))))
(check-sat)
(exit)

