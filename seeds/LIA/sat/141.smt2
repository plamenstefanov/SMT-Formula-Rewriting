(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(assert
 (let
 (($x1171
   (forall
    ((V3_0 Int) (V2_0 Int) 
     (V4_0 Int) (MW_S1_V1 Bool) 
     (MW_S1_V3 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V4 Bool) (S1_V3_!152 Int) 
     (S1_V3_!158 Int) (S1_V4_!154 Int) 
     (S1_V4_!160 Int) (S1_V1_!151 Int) 
     (S1_V1_!157 Int) (S1_V2_!153 Int) 
     (S1_V2_!159 Int) (E1_!150 Int) 
     (E1_!155 Int) (E1_!156 Int) 
     (E1_!161 Int))
    (let
    (($x804
      (and
      (= (ite MW_S1_V1 S1_V1_!151 E1_!150)
      (+ (- 1) (ite MW_S1_V2 S1_V2_!159 V2_0)))
      (= (ite MW_S1_V3 S1_V3_!152 V3_0) (ite MW_S1_V3 S1_V3_!158 V3_0))
      (= (ite MW_S1_V2 S1_V2_!153 V2_0) (ite MW_S1_V2 S1_V2_!159 V2_0))
      (= (ite MW_S1_V4 S1_V4_!154 V4_0) (ite MW_S1_V4 S1_V4_!160 V4_0)))))
    (let
    (($x817
      (and (not (<= V2_0 E1_!150))
      (>= (ite MW_S1_V1 S1_V1_!151 E1_!150)
      (+ (- 1) (ite MW_S1_V2 S1_V2_!153 V2_0))) 
      (not (<= V2_0 E1_!155)) 
      (>= V2_0 (+ 1 E1_!156))
      (not (<= E1_!161 (+ (- 1) (ite MW_S1_V1 S1_V1_!157 (+ (- 1) V2_0))))))))
    (let
    (($x939
      (and (or (not R_E1_V3) (= (ite MW_S1_V3 S1_V3_!158 V3_0) V3_0))
      (or (not R_E1_V2) (= (ite MW_S1_V2 S1_V2_!159 V2_0) V2_0))
      (or (not R_E1_V4) (= (ite MW_S1_V4 S1_V4_!160 V4_0) V4_0)))))
    (let (($x914 (not $x939)))
    (let
    (($x1236
      (or (not (or (not R_S1_V1) (= V2_0 (+ 1 E1_!150))))
      (= S1_V2_!159 S1_V2_!153))))
    (let
    (($x913
      (or (not (or (not R_S1_V1) (= E1_!150 (+ (- 1) V2_0))))
      (= S1_V1_!151 S1_V1_!157))))
    (let
    (($x1226
      (or (not (or (not R_S1_V1) (= V2_0 (+ 1 E1_!150))))
      (= S1_V4_!160 S1_V4_!154))))
    (let
    (($x1199
      (or (not (or (not R_S1_V1) (= E1_!150 (+ (- 1) V2_0))))
      (= S1_V3_!152 S1_V3_!158))))
    (let
    (($x755
      (and $x1199 $x1226 $x913 $x1236 
      (= E1_!150 E1_!155) 
      (= E1_!150 E1_!156) 
      (= E1_!155 E1_!156) 
      (or $x914 (= E1_!161 E1_!150)) 
      (or $x914 (= E1_!161 E1_!155)) 
      (or $x914 (= E1_!161 E1_!156)) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V4) W_S1_V4)))) 
    (or (not $x755) (not $x817) $x804)))))))))))))
 (let
 (($x597 (not (or R_E1_V3 (and W_S1_V2 R_E1_V2) (and W_S1_V4 R_E1_V4)))))
 (let
 (($x37
   (or (and W_S1_V1 R_S1_V1) R_S1_V3 
   (and W_S1_V2 R_S1_V2) (and W_S1_V4 R_S1_V4))))
 (let (($x39 (= DISJ_W_S1_R_S1 (not $x37))))
 (let (($x70 (not R_E1_V1)))
 (and $x70 W_S1_V3 $x39 (= DISJ_W_S1_R_E1 $x597) $x1171)))))))
(check-sat)
(exit)

