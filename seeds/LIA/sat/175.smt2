(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V4 () Bool)
(assert
 (let
 (($x691
   (forall
    ((V4_0 Int) (V5_0 Int) 
     (V2_0 Int) (MW_S1_V4 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V1 Bool) (S1_V4_!72 Int) 
     (S1_V4_!76 Int) (S1_V1_!75 Int) 
     (S1_V1_!79 Int) (S1_V2_!74 Int) 
     (S1_V2_!78 Int) (S1_V5_!73 Int) 
     (S1_V5_!77 Int))
    (let
    (($x716
      (and (= (ite MW_S1_V4 S1_V4_!72 V4_0) (ite MW_S1_V4 S1_V4_!76 V4_0))
      (= (ite MW_S1_V5 S1_V5_!73 V5_0) (ite MW_S1_V5 S1_V5_!77 V5_0))
      (= (ite MW_S1_V2 S1_V2_!74 V2_0) (ite MW_S1_V2 S1_V2_!78 V2_0))
      (= (ite MW_S1_V1 S1_V1_!75 0) (+ (- 1) (ite MW_S1_V2 S1_V2_!78 V2_0))))))
    (let
    (($x705
      (and (not (<= V2_0 0))
      (>= (ite MW_S1_V1 S1_V1_!75 0) (+ (- 1) (ite MW_S1_V2 S1_V2_!74 V2_0)))
      (>= V2_0 1) (not (<= 2 V2_0))
      (not (<= (ite MW_S1_V2 S1_V2_!78 V2_0) 0)))))
    (let
    (($x554
      (and (= S1_V4_!76 S1_V4_!72) 
      (= S1_V1_!75 S1_V1_!79) 
      (= S1_V2_!74 S1_V2_!78) 
      (= S1_V5_!73 S1_V5_!77) 
      (or (not MW_S1_V5) W_S1_V5) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V1) W_S1_V1)))) 
    (or (not $x554) (not $x705) $x716)))))))
 (let
 (($x25
   (or R_S1_V4 (and W_S1_V5 R_S1_V5) 
   (and W_S1_V2 R_S1_V2) (and W_S1_V1 R_S1_V1))))
 (let (($x27 (= DISJ_W_S1_R_S1 (not $x25)))) (and W_S1_V4 $x27 $x691)))))
(check-sat)
(exit)

