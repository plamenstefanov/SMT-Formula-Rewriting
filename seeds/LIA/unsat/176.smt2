(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V4 () Bool)
(assert
 (let
 (($x691
   (forall
    ((V4_0 Int) (V5_0 Int) 
     (V2_0 Int) (MW_S1_V4 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V1 Bool) (S1_V4_!72 Int) 
     (S1_V4_!76 Int) (S1_V1_!75 Int) 
     (S1_V1_!79 Int) (S1_V2_!74 Int) 
     (S1_V2_!78 Int) (S1_V5_!73 Int) 
     (S1_V5_!77 Int))
    (let ((?x702 (ite MW_S1_V2 S1_V2_!78 V2_0)))
    (let ((?x714 (+ (- 1) ?x702)))
    (let ((?x640 (ite MW_S1_V1 S1_V1_!75 0)))
    (let (($x715 (= ?x640 ?x714)))
    (let ((?x696 (ite MW_S1_V2 S1_V2_!74 V2_0)))
    (let (($x713 (= ?x696 ?x702)))
    (let ((?x711 (ite MW_S1_V5 S1_V5_!77 V5_0)))
    (let ((?x710 (ite MW_S1_V5 S1_V5_!73 V5_0)))
    (let (($x712 (= ?x710 ?x711)))
    (let ((?x708 (ite MW_S1_V4 S1_V4_!76 V4_0)))
    (let ((?x707 (ite MW_S1_V4 S1_V4_!72 V4_0)))
    (let (($x709 (= ?x707 ?x708)))
    (let (($x716 (and $x709 $x712 $x713 $x715)))
    (let (($x703 (<= ?x702 0)))
    (let (($x704 (not $x703)))
    (let (($x700 (<= 2 V2_0)))
    (let (($x701 (not $x700)))
    (let (($x699 (>= V2_0 1)))
    (let ((?x697 (+ (- 1) ?x696)))
    (let (($x698 (>= ?x640 ?x697)))
    (let (($x694 (<= V2_0 0)))
    (let (($x695 (not $x694)))
    (let (($x705 (and $x695 $x698 $x699 $x701 $x704)))
    (let (($x706 (not $x705)))
    (let (($x663 (not MW_S1_V1)))
    (let (($x664 (or $x663 W_S1_V1)))
    (let (($x665 (not MW_S1_V2)))
    (let (($x666 (or $x665 W_S1_V2)))
    (let (($x667 (not MW_S1_V5)))
    (let (($x668 (or $x667 W_S1_V5)))
    (let (($x672 (= S1_V5_!73 S1_V5_!77)))
    (let (($x678 (= S1_V2_!74 S1_V2_!78)))
    (let (($x680 (= S1_V1_!75 S1_V1_!79)))
    (let (($x682 (= S1_V4_!76 S1_V4_!72)))
    (let (($x554 (and $x682 $x680 $x678 $x672 $x668 $x666 $x664)))
    (let (($x552 (not $x554))) (or $x552 $x706 $x716))))))))))))))))))))))))))))))))))))))))
 (let (($x18 (and W_S1_V1 R_S1_V1)))
 (let (($x15 (and W_S1_V2 R_S1_V2)))
 (let (($x12 (and W_S1_V5 R_S1_V5)))
 (let (($x25 (or R_S1_V4 $x12 $x15 $x18)))
 (let (($x26 (not $x25)))
 (let (($x27 (= DISJ_W_S1_R_S1 $x26))) (and W_S1_V4 $x27 $x691)))))))))
(assert W_S1_V1)
(check-sat)
(exit)

