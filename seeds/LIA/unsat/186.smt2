(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(assert
 (forall
  ((V2_0 Int) (V5_0 Int) (V4_0 Int) 
   (S1_V4_!75 Int) (S1_V4_!79 Int) 
   (S1_V1_!73 Int) (S1_V1_!77 Int) 
   (S1_V2_!72 Int) (S1_V2_!76 Int) 
   (S1_V5_!74 Int) (S1_V5_!78 Int))
  (let
  (($x1274
    (and (= (ite W_S1_V2 S1_V2_!72 V2_0) (ite W_S1_V2 S1_V2_!76 V2_0))
    (= (ite W_S1_V1 S1_V1_!73 0) (+ (- 1) (ite W_S1_V2 S1_V2_!76 V2_0)))
    (= (ite W_S1_V5 S1_V5_!74 V5_0) (ite W_S1_V5 S1_V5_!78 V5_0))
    (= (ite W_S1_V4 S1_V4_!75 V4_0) (ite W_S1_V4 S1_V4_!79 V4_0)))))
  (let
  (($x1285
    (and (not (<= V2_0 0))
    (>= (ite W_S1_V1 S1_V1_!73 0) (+ (- 1) (ite W_S1_V2 S1_V2_!72 V2_0)))
    (>= V2_0 1) (not (<= 2 V2_0)) 
    (not (<= (ite W_S1_V2 S1_V2_!76 V2_0) 0)))))
  (let
  (($x1441
    (not
    (and (= S1_V4_!79 S1_V4_!75) 
    (= S1_V1_!77 S1_V1_!73) 
    (= S1_V2_!76 S1_V2_!72) 
    (= S1_V5_!78 S1_V5_!74))))) 
  (or $x1441 (not $x1285) $x1274))))))
(assert W_S1_V1)
(check-sat)
(exit)

