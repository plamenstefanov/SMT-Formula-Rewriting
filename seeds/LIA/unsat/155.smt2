(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun W_S1_V6 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V6 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V5 () Bool)
(assert
 (let
 (($x18341
   (forall
    ((V1_0 Int) (V2_0 Int) 
     (V5_0 Int) (V6_0 Int) 
     (V4_0 Int) (MW_S1_V1 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V5 Bool) 
     (MW_S1_V6 Bool) (S1_V1_!1392 Int) 
     (S1_V1_!1396 Int) (S1_V1_!1400 Int) 
     (S1_V2_!1393 Int) (S1_V2_!1397 Int) 
     (S1_V2_!1401 Int) (S1_V5_!1394 Int) 
     (S1_V5_!1398 Int) (S1_V5_!1402 Int) 
     (S1_V6_!1395 Int) (S1_V6_!1399 Int) 
     (S1_V6_!1403 Int))
    (let
    (($x19276
      (and
      (= (ite MW_S1_V1 S1_V1_!1392 V1_0)
      (ite MW_S1_V1 S1_V1_!1400 (+ V1_0 V4_0)))
      (= (ite MW_S1_V2 S1_V2_!1393 V2_0) (ite MW_S1_V2 S1_V2_!1401 V2_0))
      (= (ite MW_S1_V5 S1_V5_!1394 V5_0) (ite MW_S1_V5 S1_V5_!1402 V5_0))
      (= (ite MW_S1_V6 S1_V6_!1395 V6_0) (ite MW_S1_V6 S1_V6_!1403 V6_0)))))
    (let ((?x19292 (ite MW_S1_V2 S1_V2_!1401 V2_0)))
    (let ((?x18282 (* 2 V4_0)))
    (let ((?x19298 (+ V1_0 ?x18282)))
    (let ((?x19310 (+ V1_0 V4_0)))
    (let ((?x19293 (ite MW_S1_V1 S1_V1_!1400 ?x19310)))
    (let
    (($x19295
      (<=
      (ite (<= ?x19298 (ite MW_S1_V2 S1_V2_!1397 V2_0)) ?x19298
      (ite MW_S1_V2 S1_V2_!1397 V2_0)) ?x19310)))
    (let
    ((?x19302
      (+ (- 1)
      (ite (<= ?x19310 (ite MW_S1_V2 S1_V2_!1397 V2_0)) ?x19310
      (ite MW_S1_V2 S1_V2_!1397 V2_0)))))
    (let
    (($x19286
      (and (not (<= V2_0 V1_0))
      (>= (ite MW_S1_V1 S1_V1_!1392 V1_0)
      (+ (- 1) (ite MW_S1_V2 S1_V2_!1393 V2_0)))
      (not (<= (ite (<= ?x19310 V2_0) ?x19310 V2_0) V1_0))
      (>= (ite MW_S1_V1 S1_V1_!1396 V1_0) ?x19302)
      (not (<= (ite MW_S1_V2 S1_V2_!1397 V2_0) ?x19310)) 
      (not $x19295)
      (>= ?x19293 (+ (- 1) (ite (<= ?x19298 ?x19292) ?x19298 ?x19292)))
      (>= ?x19298 ?x19292))))
    (let
    (($x19336
      (and (or (not R_S1_V1) (= 0 V4_0))
      (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!1397 V2_0)))
      (or (not R_S1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!1398 V5_0)))
      (or (not R_S1_V6) (= V6_0 (ite MW_S1_V6 S1_V6_!1399 V6_0))))))
    (let (($x19335 (not $x19336)))
    (let
    (($x19326
      (and (or (not R_S1_V1) (= V4_0 0))
      (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!1397 V2_0) V2_0))
      (or (not R_S1_V5) (= (ite MW_S1_V5 S1_V5_!1398 V5_0) V5_0))
      (or (not R_S1_V6) (= (ite MW_S1_V6 S1_V6_!1399 V6_0) V6_0)))))
    (let
    (($x17630
      (and (= S1_V1_!1392 S1_V1_!1396)
      (or $x19335 (= S1_V1_!1392 S1_V1_!1400))
      (or $x19335 (= S1_V1_!1396 S1_V1_!1400)) 
      (= S1_V2_!1393 S1_V2_!1397)
      (or (not $x19326) (= S1_V2_!1401 S1_V2_!1393))
      (or (not $x19326) (= S1_V2_!1401 S1_V2_!1397))
      (= S1_V5_!1394 S1_V5_!1398) 
      (or $x19335 (= S1_V5_!1394 S1_V5_!1402))
      (or $x19335 (= S1_V5_!1398 S1_V5_!1402))
      (or $x19335 (= S1_V6_!1395 S1_V6_!1403)) 
      (= S1_V6_!1399 S1_V6_!1395) 
      (or $x19335 (= S1_V6_!1399 S1_V6_!1403)) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V6) W_S1_V6))))
    (or (not $x17630) (not $x19286) $x19276)))))))))))))))))
 (let
 (($x25
   (or (and W_S1_V1 R_S1_V1) 
   (and W_S1_V2 R_S1_V2) R_S1_V5 
   (and W_S1_V6 R_S1_V6))))
 (let (($x27 (= DISJ_W_S1_R_S1 (not $x25)))) (and W_S1_V5 $x27 $x18341)))))
(assert (not DISJ_W_S1_R_S1))
(assert W_S1_V1)
(check-sat)
(exit)

