(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let
 (($x817
   (forall
    ((V1_0 Int) (V3_0 Int) 
     (V2_0 Int) (V4_0 Int) 
     (MW_S1_V1 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V4 Bool) 
     (S1_V3_!70 Int) (S1_V4_!72 Int) 
     (S1_V1_!69 Int) (S1_V2_!71 Int) 
     (E1_!68 Int) (E1_!73 Int) 
     (E1_!74 Int))
    (let ((?x739 (ite MW_S1_V4 S1_V4_!72 V4_0)))
    (let (($x762 (= ?x739 V4_0)))
    (let ((?x846 (ite MW_S1_V2 S1_V2_!71 V2_0)))
    (let (($x848 (= ?x846 V2_0)))
    (let ((?x849 (ite MW_S1_V3 S1_V3_!70 V3_0)))
    (let (($x850 (= ?x849 V3_0)))
    (let ((?x919 (+ (- 1) V2_0)))
    (let ((?x920 (ite MW_S1_V1 S1_V1_!69 E1_!68)))
    (let (($x889 (= ?x920 ?x919)))
    (let (($x583 (and $x889 $x850 $x848 $x762)))
    (let (($x854 (<= E1_!74 ?x919)))
    (let (($x737 (not $x854)))
    (let (($x769 (<= V2_0 E1_!73)))
    (let (($x839 (not $x769)))
    (let ((?x841 (+ (- 1) ?x846)))
    (let (($x842 (>= ?x920 ?x841)))
    (let (($x843 (<= V2_0 E1_!68)))
    (let (($x847 (not $x843)))
    (let (($x790 (and $x847 $x842 $x839 $x737)))
    (let (($x566 (not $x790)))
    (let (($x840 (not MW_S1_V4)))
    (let (($x549 (or $x840 W_S1_V4)))
    (let (($x598 (not MW_S1_V2)))
    (let (($x748 (or $x598 W_S1_V2)))
    (let (($x822 (not MW_S1_V1)))
    (let (($x795 (or $x822 W_S1_V1)))
    (let (($x796 (= E1_!74 E1_!73)))
    (let ((?x786 (+ 1 V1_0)))
    (let (($x576 (= V2_0 ?x786)))
    (let (($x70 (not R_E1_V1)))
    (let (($x514 (or $x70 $x576)))
    (let (($x820 (not $x514)))
    (let (($x771 (or $x820 $x796)))
    (let (($x776 (= E1_!74 E1_!68)))
    (let (($x828 (or $x820 $x776)))
    (let (($x778 (= E1_!68 E1_!73)))
    (let (($x516 (and $x778 $x828 $x771 $x795 $x748 $x549)))
    (let (($x569 (not $x516))) (or $x569 $x566 $x583))))))))))))))))))))))))))))))))))))))))))
 (let (($x30 (and W_S1_V4 R_E1_V4)))
 (let (($x28 (and W_S1_V2 R_E1_V2)))
 (let (($x24 (and W_S1_V1 R_E1_V1)))
 (let (($x40 (or $x24 R_E1_V3 $x28 $x30)))
 (let (($x41 (not $x40)))
 (let (($x42 (= DISJ_W_S1_R_E1 $x41)))
 (let (($x18 (and W_S1_V4 R_S1_V4)))
 (let (($x15 (and W_S1_V2 R_S1_V2)))
 (let (($x10 (and W_S1_V1 R_S1_V1)))
 (let (($x37 (or $x10 R_S1_V3 $x15 $x18)))
 (let (($x38 (not $x37)))
 (let (($x39 (= DISJ_W_S1_R_S1 $x38))) (and W_S1_V3 $x39 $x42 $x817)))))))))))))))
(assert R_E1_V1)
(check-sat)
(exit)

